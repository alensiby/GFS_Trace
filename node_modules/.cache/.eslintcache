[{"D:\\GFS_Trace\\src\\index.js":"1","D:\\GFS_Trace\\src\\reportWebVitals.js":"2","D:\\GFS_Trace\\src\\App.js":"3","D:\\GFS_Trace\\src\\i18nextInit.js":"4","D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js":"5","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"6","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"7","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js":"8","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js":"9","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js":"10","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"11","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js":"12","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"13","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js":"14","D:\\GFS_Trace\\src\\components\\Layout\\Structure.js":"15","D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js":"16","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js":"17","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js":"18","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js":"19","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js":"20","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js":"21","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js":"22","D:\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js":"23","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js":"24","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js":"25","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js":"26","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"27","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js":"28","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js":"29","D:\\GFS_Trace\\src\\Data\\ChemicalData.js":"30","D:\\GFS_Trace\\src\\Data\\JobData.js":"31","D:\\GFS_Trace\\src\\Data\\EquipmentData.js":"32","D:\\GFS_Trace\\src\\Data\\farmData.js":"33","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"34","D:\\GFS_Trace\\src\\Data\\PlantingData.js":"35","D:\\GFS_Trace\\src\\Data\\SpreadingData.js":"36","D:\\GFS_Trace\\src\\Data\\IrrigationData.js":"37","D:\\GFS_Trace\\src\\Data\\HarvestData.js":"38","D:\\GFS_Trace\\src\\Data\\VetTreatmentData.js":"39","D:\\GFS_Trace\\src\\Data\\MaintenanceData.js":"40","D:\\GFS_Trace\\src\\Data\\GrazingData.js":"41","D:\\GFS_Trace\\src\\Data\\SpraylogsData.js":"42","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js":"43","D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js":"44","D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js":"45","D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js":"46","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"47","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js":"48","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js":"49","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js":"50","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"51","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"52","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"53","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js":"54","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js":"55","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js":"56","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js":"57","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js":"58","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js":"59","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js":"60","D:\\GFS_Trace\\src\\Data\\WaterStorageData.js":"61","D:\\GFS_Trace\\src\\Data\\FuelTankData.js":"62","D:\\GFS_Trace\\src\\Data\\PaddockData.js":"63","D:\\GFS_Trace\\src\\Data\\SiloData.js":"64","D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js":"65","D:\\GFS_Trace\\src\\Data\\InventoryWaterData.js":"66","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js":"67","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js":"68","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js":"69","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js":"70","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js":"71","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js":"72","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js":"73","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js":"74","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js":"75","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js":"76","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js":"77","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js":"78","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js":"79","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js":"80","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js":"81","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js":"82","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js":"83","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js":"84"},{"size":651,"mtime":1641300685352,"results":"85","hashOfConfig":"86"},{"size":375,"mtime":1641300685353,"results":"87","hashOfConfig":"86"},{"size":3478,"mtime":1641300685280,"results":"88","hashOfConfig":"86"},{"size":625,"mtime":1641300685307,"results":"89","hashOfConfig":"86"},{"size":218,"mtime":1641300685296,"results":"90","hashOfConfig":"86"},{"size":2906,"mtime":1641300685296,"results":"91","hashOfConfig":"86"},{"size":2783,"mtime":1642405578080,"results":"92","hashOfConfig":"86"},{"size":415,"mtime":1641300685301,"results":"93","hashOfConfig":"86"},{"size":3755,"mtime":1641300685301,"results":"94","hashOfConfig":"86"},{"size":2831,"mtime":1641300685301,"results":"95","hashOfConfig":"86"},{"size":2155,"mtime":1641300685300,"results":"96","hashOfConfig":"86"},{"size":405,"mtime":1641300685301,"results":"97","hashOfConfig":"86"},{"size":2917,"mtime":1641300685300,"results":"98","hashOfConfig":"86"},{"size":469,"mtime":1641300685303,"results":"99","hashOfConfig":"86"},{"size":1198,"mtime":1641300685289,"results":"100","hashOfConfig":"86"},{"size":8371,"mtime":1642411183160,"results":"101","hashOfConfig":"86"},{"size":454,"mtime":1641300685305,"results":"102","hashOfConfig":"86"},{"size":4792,"mtime":1641300685294,"results":"103","hashOfConfig":"86"},{"size":4805,"mtime":1641300685294,"results":"104","hashOfConfig":"86"},{"size":5015,"mtime":1641300685292,"results":"105","hashOfConfig":"86"},{"size":4786,"mtime":1641300685294,"results":"106","hashOfConfig":"86"},{"size":5006,"mtime":1641300685293,"results":"107","hashOfConfig":"86"},{"size":5123,"mtime":1641300685294,"results":"108","hashOfConfig":"86"},{"size":4787,"mtime":1641300685292,"results":"109","hashOfConfig":"86"},{"size":4813,"mtime":1641300685293,"results":"110","hashOfConfig":"86"},{"size":3173,"mtime":1641300685301,"results":"111","hashOfConfig":"86"},{"size":1237,"mtime":1641300685300,"results":"112","hashOfConfig":"86"},{"size":2970,"mtime":1641300685301,"results":"113","hashOfConfig":"86"},{"size":1367,"mtime":1641300685303,"results":"114","hashOfConfig":"86"},{"size":623,"mtime":1641300685281,"results":"115","hashOfConfig":"86"},{"size":1569,"mtime":1641458070696,"results":"116","hashOfConfig":"86"},{"size":1174,"mtime":1641300685281,"results":"117","hashOfConfig":"86"},{"size":136,"mtime":1641300685286,"results":"118","hashOfConfig":"86"},{"size":5325,"mtime":1641300685296,"results":"119","hashOfConfig":"86"},{"size":1460,"mtime":1641300685284,"results":"120","hashOfConfig":"86"},{"size":1462,"mtime":1641300685285,"results":"121","hashOfConfig":"86"},{"size":1464,"mtime":1641300685283,"results":"122","hashOfConfig":"86"},{"size":1458,"mtime":1641300685281,"results":"123","hashOfConfig":"86"},{"size":1674,"mtime":1641300685285,"results":"124","hashOfConfig":"86"},{"size":1593,"mtime":1641300685283,"results":"125","hashOfConfig":"86"},{"size":1502,"mtime":1641300685281,"results":"126","hashOfConfig":"86"},{"size":1408,"mtime":1641300685285,"results":"127","hashOfConfig":"86"},{"size":1154,"mtime":1641300685305,"results":"128","hashOfConfig":"86"},{"size":7813,"mtime":1642433505219,"results":"129","hashOfConfig":"86"},{"size":747,"mtime":1641300685287,"results":"130","hashOfConfig":"86"},{"size":1951,"mtime":1641300685289,"results":"131","hashOfConfig":"86"},{"size":621,"mtime":1641300685300,"results":"132","hashOfConfig":"86"},{"size":720,"mtime":1641300685303,"results":"133","hashOfConfig":"86"},{"size":591,"mtime":1641300685305,"results":"134","hashOfConfig":"86"},{"size":2250,"mtime":1641300685296,"results":"135","hashOfConfig":"86"},{"size":2022,"mtime":1641300685296,"results":"136","hashOfConfig":"86"},{"size":1849,"mtime":1641300685296,"results":"137","hashOfConfig":"86"},{"size":2126,"mtime":1641300685296,"results":"138","hashOfConfig":"86"},{"size":3524,"mtime":1641300685304,"results":"139","hashOfConfig":"86"},{"size":3139,"mtime":1641300685304,"results":"140","hashOfConfig":"86"},{"size":3672,"mtime":1641300685304,"results":"141","hashOfConfig":"86"},{"size":2252,"mtime":1641300685303,"results":"142","hashOfConfig":"86"},{"size":3624,"mtime":1641460244323,"results":"143","hashOfConfig":"86"},{"size":3234,"mtime":1641460278052,"results":"144","hashOfConfig":"86"},{"size":1360,"mtime":1641303838394,"results":"145","hashOfConfig":"86"},{"size":626,"mtime":1641300685286,"results":"146","hashOfConfig":"86"},{"size":379,"mtime":1641300685281,"results":"147","hashOfConfig":"86"},{"size":490,"mtime":1641300685284,"results":"148","hashOfConfig":"86"},{"size":416,"mtime":1641300685284,"results":"149","hashOfConfig":"86"},{"size":1581,"mtime":1641300685283,"results":"150","hashOfConfig":"86"},{"size":255,"mtime":1641300685283,"results":"151","hashOfConfig":"86"},{"size":430,"mtime":1635790260000,"results":"152","hashOfConfig":"86"},{"size":431,"mtime":1642405849462,"results":"153","hashOfConfig":"86"},{"size":7742,"mtime":1642410629061,"results":"154","hashOfConfig":"86"},{"size":8475,"mtime":1642410929423,"results":"155","hashOfConfig":"86"},{"size":830,"mtime":1642396690368,"results":"156","hashOfConfig":"86"},{"size":422,"mtime":1635790260000,"results":"157","hashOfConfig":"86"},{"size":6408,"mtime":1635790260000,"results":"158","hashOfConfig":"86"},{"size":1408,"mtime":1635790260000,"results":"159","hashOfConfig":"86"},{"size":1551,"mtime":1635790260000,"results":"160","hashOfConfig":"86"},{"size":887,"mtime":1635790260000,"results":"161","hashOfConfig":"86"},{"size":830,"mtime":1642396690368,"results":"162","hashOfConfig":"86"},{"size":1827,"mtime":1635790260000,"results":"163","hashOfConfig":"86"},{"size":1551,"mtime":1635790260000,"results":"164","hashOfConfig":"86"},{"size":887,"mtime":1635790260000,"results":"165","hashOfConfig":"86"},{"size":422,"mtime":1635790260000,"results":"166","hashOfConfig":"86"},{"size":1408,"mtime":1635790260000,"results":"167","hashOfConfig":"86"},{"size":1827,"mtime":1635790260000,"results":"168","hashOfConfig":"86"},{"size":6408,"mtime":1635790260000,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1v1fsp0",{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"172"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"172"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"172"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"172"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"172"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"172"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"172"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"172"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"172"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"172"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"172"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"172"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"172"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"172"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"172"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"172"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"172"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"172"},"D:\\GFS_Trace\\src\\index.js",[],["362","363"],"D:\\GFS_Trace\\src\\reportWebVitals.js",[],"D:\\GFS_Trace\\src\\App.js",["364"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useTranslation, I18nextProvider } from 'react-i18next';\r\nimport Structure from \"./components/Layout/Structure\";\r\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\r\nimport Job from \"./components/pages/Job/job\";\r\nimport Equipments from \"./components/pages/FarmAssets/Equipments/Equipments\";\r\nimport Farms from \"./components/pages/FarmAssets/Farms/farms\";\r\nimport Chemicals from \"./components/pages/FarmAssets/Chemicals/Chemical\";\r\nimport Users from \"./components/pages/FarmAssets/Users/Users\";\r\nimport Fertiliser from \"./components/pages/FarmAssets/Fertiliser/FertiliserTable\";\r\nimport Livestock from \"./components/pages/FarmAssets/Livestock/LiveStock\";\r\nimport WaterLicence from \"./components/pages/FarmAssets/WaterLicence/WaterLicence\";\r\nimport Nozzles from \"./components/pages/FarmAssets/Nozzles/Nozzles\";\r\nimport InventoryChemical from \"./components/pages/Inventory/InventoryChemical/InventoryChemical\";\r\n//import Grain from \"./components/pages/Inventory/Grain/Grain\";\r\nimport Spraylogs from \"./components/pages/Activities/Spraylogs/Spraylogs\";\r\nimport Planting from \"./components/pages/Activities/Planting/Planting\";\r\nimport Spreading from \"./components/pages/Activities/Spreading/Spreading\";\r\nimport Harvest from \"./components/pages/Activities/Harvest/Harvest\";\r\nimport Grazing from \"./components/pages/Activities/Grazing/Grazing\";\r\nimport Irrigation from \"./components/pages/Activities/Irrigation/Irrigation\";\r\nimport Maintenance from \"./components/pages/Activities/Maintenance/Maintenance\";\r\nimport VetTreatment from \"./components/pages/Activities/VetTreatment/VetTreatment\";\r\nimport InventoryWater from \"./components/pages/Inventory/Water/InventoryWater\";\r\nfunction App (){\r\n  const {i18n}=useTranslation();\r\n  \r\n    return (\r\n      <I18nextProvider i18n={i18n}>\r\n      <Router >\r\n        <Structure>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Dashboard/>}/>\r\n            <Route path=\"/Jobs\" element={<Job/>}/>\r\n            <Route path=\"/Equipments\" element={<Equipments/>}/>\r\n            <Route path=\"/Farms\" element={<Farms/>}/>\r\n            <Route path=\"/Chemicals\" element={<Chemicals/>}/>\r\n            <Route path=\"/Users\" element={<Users/>}/>\r\n            <Route path=\"/Fertiliser\" element={<Fertiliser/>}/>\r\n            <Route path=\"/Nozzles\" element={<Nozzles/>}/>\r\n            <Route path=\"/Livestock\" element={<Livestock/>}/>\r\n            <Route path=\"/WaterLicence\" element={<WaterLicence/>}/>\r\n            <Route path=\"/InventoryChemical\" element={<InventoryChemical/>}/>\r\n            <Route path=\"/Spraylogs\" element={<Spraylogs/>}/>\r\n            <Route path=\"/Planting\" element={<Planting/>}/>\r\n            <Route path=\"/Spreading\" element={<Spreading/>}/>\r\n            <Route path=\"/Harvest\" element={<Harvest/>}/>\r\n            <Route path=\"/Grazing\" element={<Grazing/>}/>\r\n            <Route path=\"/InventoryWater\" element={<InventoryWater/>}/>\r\n            <Route path=\"/Irrigation\" element={<Irrigation/>}/>\r\n            <Route path=\"/Maintenance\" element={<Maintenance/>}/>\r\n            <Route path=\"/VetTreatment\" element={<VetTreatment/>}/>\r\n          {/*<Route path=\"/Grain\" element={<Grain/>}/>*/}\r\n           \r\n          </Routes>\r\n          \r\n          </Structure>       \r\n         \r\n      </Router>\r\n      </I18nextProvider>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\GFS_Trace\\src\\i18nextInit.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js",["365","366","367","368","369"],"import React from \"react\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport \"../../Pages.css\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Chip from '@mui/material/Chip';\r\nimport { render } from \"@testing-library/react\";\r\nimport { style } from \"@mui/system\";\r\n\r\n\r\nconst User_types = [\"Owner\", \"Admin\", \"User\"];\r\nconst User_permissions = [\r\n  \"Payroll\",\r\n  \"Add/Edit Users\",\r\n  \"Grain Inventory\",\r\n  \"Grain Contracts\",\r\n  \"Chemical Inventory\",\r\n  \"Fertiliser Inventory\",\r\n  \"Fuel Inventory\",\r\n  \"Water Inventory\",\r\n  \"Spray Logs\",\r\n  \"Spray Log Approval\",\r\n  \"Plantings\",\r\n  \"Spreadings\",\r\n  \"Harvests\",\r\n  \"Paddock Miantainance\",\r\n  \"Irigation\",\r\n  \"Grazing\",\r\n];\r\nconst users_data = [\r\n  {\r\n    Name: \"Alen Siby\",\r\n    user_role: \"Owner\",\r\n    permissions: \"All\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n  {\r\n    Name: \"Align Elsa\",\r\n    user_role: \"User\",\r\n    permissions: \"Payroll, Add/Edit Users, Grain Inventory\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n  {\r\n    Name: \"Ivin Siby\",\r\n    user_role: \"Admin\",\r\n    permissions: \"Payroll, Add/Edit Users, Grain Inventory\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n];\r\nvar chipcolor=\"\";\r\n\r\nexport default function Users() {\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"Name\",\r\n    },\r\n    {\r\n      title: \"User Role\",\r\n      field: \"user_role\",\r\n    render(rowdata){\r\n\r\n        function Switches(rowdata) {\r\n               if(rowdata.user_role===\"Owner\"){\r\n                   chipcolor=\"error\"\r\n               }\r\n               else if(rowdata.user_role===\"User\"){\r\n                   chipcolor=\"primary\"\r\n               }\r\n               else{\r\n                   chipcolor=\"warning\"\r\n               }\r\n                 \r\n                return(\r\n                <div>\r\n                    <Chip color={chipcolor} label={rowdata.user_role} /></div>)\r\n            }\r\n        return(Switches(rowdata))\r\n    },},\r\n    {\r\n      title: \"Permissions\",\r\n      field: \"permissions\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      field: \"Phone\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      field: \"Address\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"table-size\">\r\n      <div className=\"subheader\">\r\n        <h1 style={{ color: \"black\", \"margin-bottom\": \"0px\" }}>Users </h1>\r\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      </div>\r\n      <div className=\"equipment-table\"></div>\r\n      <MaterialTable\r\n          columns={columns}\r\n          data={users_data}\r\n          editable={{\r\n            onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n            onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\r\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n          }}\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            exportButton: false,\r\n            actionsColumnIndex:-1\r\n          }}\r\n          icons={{\r\n            Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n            Edit: () => <CreateIcon color=\"action\" />,\r\n            Delete: () => <DeleteIcon color=\"action\" />\r\n          }}\r\n        ></MaterialTable>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js",[],"D:\\GFS_Trace\\src\\components\\Layout\\Structure.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js",["370","371","372"],"import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MTableCell } from \"material-table\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\nimport { DialogTitle } from '@mui/material';\r\nimport \"./job.css\";\r\nimport '../Pages.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Editjob from './JobEdit/Jobedit';\r\nimport Addjob from './NewJob/Jobnew';\r\nimport SampleContextProvider from './NewJob/context/SampleContext';\r\nimport SampleContextProvider1 from './JobEdit/context/SampleContext';\r\nimport {useTranslation,Trans} from 'react-i18next';\r\n\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {\r\n  jobData_withoutcomplete,\r\n  jobData_withcomplete,\r\n} from \"../../../Data/JobData\";\r\n\r\nexport default function Job() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const handleClickEditOpen = () => {\r\n        setEditOpen(true);\r\n    };\r\n\r\n    const handleEditClose = (event, reason) => {\r\n        setEditOpen(false);\r\n\r\n    };\r\n\r\n  const [selected, toggleselected] = useState(false);\r\n  const {t} =useTranslation();\r\n  \r\n  const columns = [\r\n    {\r\n\r\n      title: t('jobs.status',\"Status\"),\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': <Trans i18nKey=\"jobs.raised\">Raised</Trans>,\r\n      '1': t('jobs.raisedandassigned','Raised And Assigned'),\r\n      '2': t('jobs.inprogress','In Progress'),\r\n      '3': t('jobs.onhold','On Hold'),\r\n      '4': t('jobs.completed','Completed'),\r\n\r\n      } ,\r\n      render: rowData => {\r\n        return <Tooltip title={rowData.status} placement=\"bottom-start\" arrow>\r\n           </Tooltip>            \r\n     },\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n\r\n    { title: t('jobs.priority','Priority'), field: \"priority\" ,\r\n    lookup: { '0': t('jobs.low','Low'), \r\n    '1': t('jobs.normal','Normal'), \r\n    '2': t('jobs.high','High'), \r\n    '3': t('jobs.safety','Safety')},\r\n\r\n    render: rowData => {\r\n      switch (rowData.priority) {\r\n        case '0':\r\n           return <Icon name='angle down'size='large'/>\r\n        case '1':\r\n           return <Icon name='blue angle up'size='large'/>\r\n        case '2':\r\n           return <Icon name='red angle double up'size='large'/>\r\n   \r\n        case '3':\r\n           return <Icon name='orange exclamation triangle'size='large'/>\r\n    default:\r\n      return <></>\r\n    }}\r\n  },\r\n\r\n    { title: t('jobs.description','Description'), field: \"description\" },\r\n    { title: t('jobs.category','Category'), field: \"category\" ,\r\n    lookup: { '0': 'None', '1': 'Equipment', '2': 'Paddock', '3': 'Fuel Tank', '4': 'Silo', '5': 'Livestock'},},\r\n    { title: t('jobs.asset','Asset'), field: \"asset\" },\r\n    { title: t('jobs.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: t('jobs.lastupdate','Last Update'), field: \"lastupdate\", type:\"date\", filtering: false },\r\n\r\n    \r\n  ];\r\n \r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n\r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"jobs.heading\">Jobs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\r\n\r\n      </div>\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? jobData_withcomplete : jobData_withoutcomplete}\r\n          \r\n          localization={{\r\n            toolbar:{\r\n              searchTooltip:t('materialtable.searchtooltip','Search'),\r\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\r\n            },\r\n            header:{\r\n              actions:t('materialtable.headeractions','Actions')\r\n\r\n            },\r\n            body:{\r\n              addTooltip:t('materialtable.bodyaddtooltip','Add'),\r\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\r\n              editTooltip:t('materialtable.edittooltip','Edit'),\r\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\r\n              editRow:{\r\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\r\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\r\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\r\n              },\r\n              filterRow:{\r\n                filterTooltip:t('materialtable.feltertooltip','Filter')\r\n              }\r\n            },\r\n            pagination:{\r\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\r\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\r\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\r\n              \r\n            }\r\n          }}\r\n\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n           components={{\r\n          Cell: (props) => (\r\n            <Tooltip title={props.value ? props.value : ''}>\r\n              <MTableCell {...props} />\r\n            </Tooltip>       /// Add translation for tooltip also\r\n          ),\r\n        }}\r\n          actions={[\r\n          {\r\n            icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n            isFreeAction: true,\r\n            onClick: (event) => setOpen(true)\r\n          },\r\n          {\r\n            icon: () => <CreateIcon color=\"action\" />,\r\n           \r\n            onClick: (event) => setEditOpen(true)\r\n          },\r\n          {\r\n            icon: () => <DeleteIcon color=\"action\" />\r\n          }\r\n          ]}\r\n        ></MaterialTable>\r\n        <Dialog open={open} onClose={handleClose} maxWidth=\"100\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>Job Details</DialogTitle>\r\n                <DialogContent>\r\n                <SampleContextProvider>\r\n                    <Addjob />\r\n                    </SampleContextProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={editopen} onClose={handleEditClose} maxWidth=\"lg\" scroll=\"paper\">\r\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\r\n                <DialogContent>\r\n                <SampleContextProvider1>\r\n                    <Editjob />\r\n                </SampleContextProvider1>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleEditClose} className=\"float-left\">DELETE</Button>\r\n                    <Button onClick={handleEditClose}>CANCEL</Button>\r\n                    <Button onClick={handleEditClose}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js",["373"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function LsTable() {\r\n  const [type, setType] = useState({});\r\n\r\n  const lsType = [\r\n    { id: 1, title: \"Cattle\" },\r\n    { id: 2, title: \"Bulls\" },\r\n    { id: 3, title: \"Sheep\" },\r\n    { id: 4, title: \"Horses\" },\r\n    { id: 5, title: \"Chickens\" },\r\n    { id: 6, title: \"Pigs\" },\r\n    { id: 7, title: \"Deer\" },\r\n    { id: 8, title: \"Goats\" },\r\n    { id: 9, title: \"Llamas\" },\r\n    { id: 10, title: \"Bees\" },\r\n  ];\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      type: \"1\",\r\n      names: \"abc\",\r\n\r\n      number: \"123\",\r\n      notes: \"xyz\",\r\n    },\r\n    {\r\n      type: \"2\",\r\n\r\n      names: \"pqrs\",\r\n\r\n      number: \"16343\",\r\n      notes: \"xykfz\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",\r\n      lookup: type,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"names\",\r\n      validate: (rowData) => {\r\n        if (rowData.names === undefined || rowData.names === \"\") {\r\n          return \"Required\";\r\n        } else if (rowData.names.length < 3) {\r\n          return \"Name Should Contain Atleast 3 chars\";\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Number\",\r\n      field: \"number\",\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      field: \"notes\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    lsType.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"Livestock\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...data];\r\n              updatedData[(oldRow, data.id)] = newRow;\r\n              setData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          showTitle: false,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n        }}\r\n        icons={{\r\n         \r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js",["374"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Chemical.css\"\r\n\r\n\r\nexport default function InventoryChemicalTable()  {\r\n    const [state, setState] = React.useState(\"CHEMICALS\"); \r\n\r\n      return (\r\n        <div className=\"chemical\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='CHEMICALS'\r\n              active={state === 'CHEMICALS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"CHEMICALS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='STOCKTAKE'\r\n              active={state === 'STOCKTAKE'}\r\n              onClick={() => setState(\"STOCKTAKE\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\GFS_Trace\\src\\Data\\ChemicalData.js",[],"D:\\GFS_Trace\\src\\Data\\JobData.js",[],"D:\\GFS_Trace\\src\\Data\\EquipmentData.js",[],"D:\\GFS_Trace\\src\\Data\\farmData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",[],"D:\\GFS_Trace\\src\\Data\\PlantingData.js",[],"D:\\GFS_Trace\\src\\Data\\SpreadingData.js",[],"D:\\GFS_Trace\\src\\Data\\IrrigationData.js",[],"D:\\GFS_Trace\\src\\Data\\HarvestData.js",[],"D:\\GFS_Trace\\src\\Data\\VetTreatmentData.js",[],"D:\\GFS_Trace\\src\\Data\\MaintenanceData.js",[],"D:\\GFS_Trace\\src\\Data\\GrazingData.js",[],"D:\\GFS_Trace\\src\\Data\\SpraylogsData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js",["375"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Water.css\"\r\n\r\n\r\nexport default function InventoryWaterTable()  {\r\n    const [state, setState] = React.useState(\"STORAGES\"); \r\n\r\n      return (\r\n        <div className=\"water\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='STORAGES'\r\n              active={state === 'STORAGES'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"STORAGES\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js",[],"D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js",["376"],"import React from \"react\";\r\nimport farmsimple from \"../../images/logo.jpg\";\r\nimport \"./header.css\";\r\nimport {Trans} from 'react-i18next';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"main-logo\" src={farmsimple} width=\"50\" height=\"50\" />\r\n      <div class=\"logoName\" style={{ color: \"rgb(79, 79, 79)\" }}>\r\n        <b>GFS</b> Trace\r\n      </div>\r\n      <div className=\"spacer\"></div>\r\n      <span className=\"userDetails\">Align Agith </span> |\r\n      <span className=\"userDetails\" style={{ color: \"green\", float: \"right\" }}>\r\n        {\" \"}\r\n        Owner\r\n      </span>\r\n      <button className=\"logout\"><Trans i18nKey=\"header.logout\"> Logout\r\n        </Trans></button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js",["377","378","379"],"\r\nimport {React,useState} from 'react';\r\nimport YoutubeIcon from 'mdi-react/YoutubeIcon';\r\nimport \"./footer.css\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport FacebookIcon from 'mdi-react/FacebookIcon';\r\nimport TwitterIcon from 'mdi-react/TwitterIcon';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n//import EyeIcon from 'mdi-react/EyeIcon';\r\n\r\nconst languageOptions =[\r\n  {key:'English',text:'English',value:'en'},\r\n  {key:'Malayalam',text:'മലയാളം',value:'ml'},\r\n  {key:'Tamil',text:'தமிழ்',value:'tm'}\r\n]\r\n\r\nexport default function Footer() {\r\n  const [language, setlanguage] = useState(\"en\")\r\n  const {i18n}=useTranslation();\r\n  const handleDropdown=(event,lang)=>{\r\n    setlanguage(lang.value)\r\n    i18n.changeLanguage(lang.value)\r\n   \r\n  }\r\n  return(\r\n       \r\n       \r\n      <div className='footer-main'>\r\n        <div><Dropdown\r\n        upward\r\n        selection\r\n        onChange={handleDropdown}\r\n        button\r\n        className=\"icon\"\r\n        labeled\r\n        icon=\"world\"\r\n        value={language}\r\n        scrolling\r\n        options={languageOptions}\r\n        placeholder=\"Language\"\r\n        /></div>\r\n    \r\n      \r\n     <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><FacebookIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><TwitterIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><YoutubeIcon size={24} /></span></a>\r\n      \r\n      <span style={{\"margin-left\": \"10px\", \"align-items\": \"center\", \"color\": \"rgb(79, 79, 79)\", \"top\": \"0\"}}> © 2021 \r\n    \r\n      </span>\r\n    </div>\r\n  \r\n     \r\n      );\r\n}\r\n\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js",["380"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { stocktake_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function StockTake() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(stocktake_data)\r\n    const columns = [\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Reported', field: 'report',\r\n    }]\r\n    const columns_archived = [\r\n      {\r\n          title: 'Date', field: 'date',\r\n      }, {\r\n          title: 'Operator', field: 'operator',\r\n      },\r\n      {\r\n          title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n          title: 'Reported', field: 'report',\r\n      },\r\n      {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STOCKTAKE\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js",["381"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js",["382"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Supplier', field: 'supplier'\r\n    },\r\n    {\r\n        title: 'Docket No.', field: 'docket',\r\n    },\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Supplier', field: 'supplier'\r\n  },\r\n  {\r\n      title: 'Docket No.', field: 'docket',\r\n  },\r\n  {\r\n      title: 'Date', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js",["383","384"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { chemicals_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Chemicals() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(chemicals_data)\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    }]\r\n    const columns_archived = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CHEMICALS\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived Chemicals\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js",["385"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Water Storage', field: 'water_storage'\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Water Storage', field: 'water_storage'\r\n  },\r\n  {\r\n      title: 'Date/Time', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n},\r\n \r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js",["386"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryWaterData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    \r\n    title: 'Water Storage', field: 'water_storage'\r\n  },\r\n  {\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date/Time', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js",["387","388"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { storages_data } from '../../../../../Data/InventoryWaterData'\r\n\r\nexport default function Storages() {\r\n    const [data, setData] = React.useState(storages_data)\r\n    const columns = [{\r\n        title: 'Farms', field: 'farm'\r\n    },\r\n    {\r\n        title: 'Name', field: 'name',\r\n    },\r\n    {\r\n        title: 'Capacity', field: 'capacity',\r\n    }, {\r\n        title: 'Contents', field: 'contents',\r\n    }]\r\n    \r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STORAGES\"\r\n                data={data}\r\n                columns={ columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\Data\\WaterStorageData.js",[],"D:\\GFS_Trace\\src\\Data\\FuelTankData.js",[],"D:\\GFS_Trace\\src\\Data\\PaddockData.js",[],"D:\\GFS_Trace\\src\\Data\\SiloData.js",[],"D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js",[],"D:\\GFS_Trace\\src\\Data\\InventoryWaterData.js",["389","390","391","392"],"export const storages_data=[\r\n    {\r\n        farm:'abcdef',name:'asdwef',capacity:'5000L',contents:'Empty',\r\n        farm:'farm2',name:'d12ad',capacity:'50000L',contents:'Empty'\r\n    }\r\n];\r\n\r\nexport const ingoing_data=[];\r\n\r\nexport const outgoing_data=[];","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js",["393","394","395","396"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from './context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\n\n\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nfunction Jobnew() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const { bool, setbool } = React.useContext(SampleContext);\n    const [status, setstatus] = React.useState('');\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState();\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\n        </Form>\n\n    )\n}\n\nexport default Jobnew\n\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js",["397","398","399","400","401","402","403","404"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from './context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { border, height } from '@mui/system';\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport {Button as MuiButton} from '@mui/material';\nimport CircleOutlined from \"@mui/icons-material/CircleOutlined\";\n\n\n\n\nconst initialValues = {\n    creator: 'Jesteena Jose',\n    assigned: 'Oliver Ernst, Peter Jones',\n    category: 'Paddock',\n    dueDate: new Date(),\n    priority: 'High',\n    started: 'None',\n    completed: 'None',\n    restartjob: '',\n    description: \"Description\",\n    notes: \"Notes\",\n}\n\nfunction Jobedit() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const [priority, setPriority] = React.useState(1);\n    const { bool, setbool } = React.useContext(SampleContext);\n    const [status, setstatus] = React.useState(1);\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState(<CircleOutlined sx={{ color: \"#0000CD\" }} />);\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                <div className=\"pdf\">\n            <MuiButton >\n            <PictureAsPdfOutlinedIcon color=\"error\" fontSize=\"Large\"/></MuiButton></div>\n            \n\n            <br />\n\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                        restart={bool}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority || 'Low'}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel >STARTED</InputLabel>\n                                \n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool} value={values.description}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}} value={values.notes}/>\n        </Form>\n\n    )\n}\n\nexport default Jobedit\n\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js",["405","406"],"import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nfunction Input(props) {\n    const { name, label, value, onChange } = props\n    return (\n        <TextField           \n            variant=\"standard\"\n            name={name}\n            label={label}\n            value=\"JESTEENA JOSE\"\n            InputProps={{\n                readOnly: true,\n              }}\n        />\n    )\n}\n\nexport default Input\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js",["407","408","409","410","411","412","413","414","415","416"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport question from './question mark.png'\n\nexport default function Category(props) {\n    const [open, setOpen] = React.useState(false);\n    const [category, setcategory] = React.useState(\"\");\n    const [cat, setcat] = React.useState({});\n    const [img, setimg] = React.useState(question);\n    const [img1, setimg1] = React.useState(question);\n    var changeCategory = 0;\n    var flag=0;\n    const arr = {};\n    const [field, setfield] = React.useState(\"CATEGORY\")\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\n    const [subfield, setSubfield] = React.useState('NONE');\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\n    const [c, setc] = React.useState({});\n\n    const handleChange = (event, value) => {\n        setcategory(event.target.value);\n        changeCategory = event.target.value;\n        setfieldval(value.props.children)\n        setcat({})\n        flag=0;\n        const arr = options.filter(\n            a => (a.id === changeCategory)\n        )\n        if (changeCategory != \"\") {\n            setc(arr[0].data);\n            setSubfieldval(\"\");\n            setfieldfarm(\"\");\n            setimg1(options[changeCategory - 1].icon);\n        }\n        else{\n            setc({});\n            setfieldval(\"CATEGORY\")\n            setSubfieldval(\"None\");\n            setfieldfarm(\"\");\n            setimg1(question);\n        }\n    };\n\n    const handleChange1 = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setcat(values => ({ ...values, [name]: value }))\n        console.log(cat);\n        if (name == \"Farm\") {\n            setfieldfarm(value + \" : \");\n            flag=1;\n        }\n        else {\n            setSubfieldval(value);\n        }\n    }\n    const handleClickOpen = () => {\n        if (!restart) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n        }\n    };\n\n    const handleOk = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            if (subfieldval==\"\") {\n                alert(\"No \"+fieldval+\" Selected\")\n            }\n            else{\n                if(fieldfarm!=\"\"){\n                    setfield(fieldval);\n                    setSubfield(fieldfarm + subfieldval);\n                    setimg(img1)\n                    setOpen(false);\n                }\n                else{\n                    if(category==1 ||category==5){\n                        setfield(fieldval);\n                        setSubfield(fieldfarm + subfieldval);\n                        setimg(img1)\n                        setOpen(false);\n                    }\n                }\n            }\n        }\n    };\n\n\n    const { name, label, value, onChange, options, restart } = props;\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <InputLabel>{field}</InputLabel>\n                        <p>{subfield}</p>\n                    </Grid>\n                </Grid>\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Job Category</DialogTitle>\n                <DialogContent >\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                            <InputLabel>{label}</InputLabel>\n                            <MuiSelect\n                                label={label}\n                                name={name}\n                                value={category}\n                                onChange={handleChange}\n                                displayEmpty>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    options.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                        {\n                            Object.entries(c).map(\n                                ([key, val]) => (\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                                        <InputLabel>{key}</InputLabel>\n                                        <MuiSelect\n                                            name={key}\n                                            label={key}\n                                            value={cat[key]}\n                                            onChange={handleChange1}\n                                        >\n                                            {\n                                                val.map(\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\n                                                )\n                                            }\n                                        </MuiSelect>\n                                    </FormControl>)\n                            )\n                        }\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleOk}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js",["417","418"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState();\n    const [status, setstatus] = React.useState('');\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={12} md={10}>\n                <FormControl\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js",["419"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js",["420"],"import React from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\"\n\nexport default function MyDatePicker(props) {\n\n    const { name, label, value, onChange,restart } = props\n\n    const convertToDefEventPara=(name,value)=>({\n        target:{\n            name,value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\n                label={label}\n                format=\"dd/MM/yyyy\"\n                name={name}\n                value={value}\n                onChange={date => onChange(convertToDefEventPara(name,date))}\n                inputProps={{ readOnly:restart }}\n            />\n\n\n        </MuiPickersUtilsProvider>\n    )\n}\n\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js",["421"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js",["422"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js",["423","424"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js",["425","426"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js",["427","428","429","430","431","432","433","434","435","436"],{"ruleId":"437","replacedBy":"438"},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","severity":1,"message":"442","line":1,"column":17,"nodeType":"443","messageId":"444","endLine":1,"endColumn":26},{"ruleId":"441","severity":1,"message":"445","line":2,"column":25,"nodeType":"443","messageId":"444","endLine":2,"endColumn":31},{"ruleId":"441","severity":1,"message":"446","line":8,"column":10,"nodeType":"443","messageId":"444","endLine":8,"endColumn":16},{"ruleId":"441","severity":1,"message":"447","line":9,"column":10,"nodeType":"443","messageId":"444","endLine":9,"endColumn":15},{"ruleId":"441","severity":1,"message":"448","line":12,"column":7,"nodeType":"443","messageId":"444","endLine":12,"endColumn":17},{"ruleId":"441","severity":1,"message":"449","line":13,"column":7,"nodeType":"443","messageId":"444","endLine":13,"endColumn":23},{"ruleId":"441","severity":1,"message":"450","line":28,"column":11,"nodeType":"443","messageId":"444","endLine":28,"endColumn":26},{"ruleId":"441","severity":1,"message":"451","line":36,"column":11,"nodeType":"443","messageId":"444","endLine":36,"endColumn":30},{"ruleId":"452","severity":1,"message":"453","line":66,"column":7,"nodeType":"454","messageId":"455","endLine":66,"endColumn":13},{"ruleId":"456","severity":1,"message":"457","line":72,"column":6,"nodeType":"458","endLine":72,"endColumn":8,"suggestions":"459"},{"ruleId":"441","severity":1,"message":"460","line":1,"column":16,"nodeType":"443","messageId":"444","endLine":1,"endColumn":24},{"ruleId":"441","severity":1,"message":"460","line":1,"column":16,"nodeType":"443","messageId":"444","endLine":1,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":9,"column":7,"nodeType":"463","endLine":9,"endColumn":76},{"ruleId":"464","severity":1,"message":"465","line":45,"column":6,"nodeType":"463","endLine":45,"endColumn":125},{"ruleId":"464","severity":1,"message":"465","line":47,"column":7,"nodeType":"463","endLine":47,"endColumn":126},{"ruleId":"464","severity":1,"message":"465","line":49,"column":7,"nodeType":"463","endLine":49,"endColumn":126},{"ruleId":"461","severity":1,"message":"462","line":92,"column":35,"nodeType":"463","endLine":92,"endColumn":53},{"ruleId":"461","severity":1,"message":"462","line":103,"column":25,"nodeType":"463","endLine":103,"endColumn":43},{"ruleId":"461","severity":1,"message":"462","line":102,"column":35,"nodeType":"463","endLine":102,"endColumn":53},{"ruleId":"441","severity":1,"message":"466","line":9,"column":18,"nodeType":"443","messageId":"444","endLine":9,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":65,"column":35,"nodeType":"463","endLine":65,"endColumn":53},{"ruleId":"461","severity":1,"message":"462","line":98,"column":35,"nodeType":"463","endLine":98,"endColumn":53},{"ruleId":"461","severity":1,"message":"462","line":107,"column":25,"nodeType":"463","endLine":107,"endColumn":43},{"ruleId":"441","severity":1,"message":"466","line":7,"column":18,"nodeType":"443","messageId":"444","endLine":7,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":41,"column":35,"nodeType":"463","endLine":41,"endColumn":53},{"ruleId":"452","severity":1,"message":"467","line":4,"column":9,"nodeType":"454","messageId":"455","endLine":4,"endColumn":13},{"ruleId":"452","severity":1,"message":"468","line":4,"column":22,"nodeType":"454","messageId":"455","endLine":4,"endColumn":26},{"ruleId":"452","severity":1,"message":"469","line":4,"column":35,"nodeType":"454","messageId":"455","endLine":4,"endColumn":43},{"ruleId":"452","severity":1,"message":"470","line":4,"column":53,"nodeType":"454","messageId":"455","endLine":4,"endColumn":61},{"ruleId":"441","severity":1,"message":"471","line":34,"column":9,"nodeType":"443","messageId":"444","endLine":34,"endColumn":18},{"ruleId":"441","severity":1,"message":"472","line":45,"column":11,"nodeType":"443","messageId":"444","endLine":45,"endColumn":15},{"ruleId":"473","severity":1,"message":"474","line":53,"column":15,"nodeType":"475","messageId":"455","endLine":53,"endColumn":17},{"ruleId":"473","severity":1,"message":"474","line":66,"column":15,"nodeType":"475","messageId":"455","endLine":66,"endColumn":17},{"ruleId":"441","severity":1,"message":"476","line":14,"column":10,"nodeType":"443","messageId":"444","endLine":14,"endColumn":16},{"ruleId":"441","severity":1,"message":"477","line":14,"column":18,"nodeType":"443","messageId":"444","endLine":14,"endColumn":24},{"ruleId":"441","severity":1,"message":"471","line":39,"column":9,"nodeType":"443","messageId":"444","endLine":39,"endColumn":18},{"ruleId":"441","severity":1,"message":"478","line":43,"column":12,"nodeType":"443","messageId":"444","endLine":43,"endColumn":20},{"ruleId":"441","severity":1,"message":"479","line":43,"column":22,"nodeType":"443","messageId":"444","endLine":43,"endColumn":33},{"ruleId":"441","severity":1,"message":"472","line":51,"column":11,"nodeType":"443","messageId":"444","endLine":51,"endColumn":15},{"ruleId":"473","severity":1,"message":"474","line":59,"column":15,"nodeType":"475","messageId":"455","endLine":59,"endColumn":17},{"ruleId":"473","severity":1,"message":"474","line":72,"column":15,"nodeType":"475","messageId":"455","endLine":72,"endColumn":17},{"ruleId":"441","severity":1,"message":"480","line":5,"column":26,"nodeType":"443","messageId":"444","endLine":5,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":5,"column":33,"nodeType":"443","messageId":"444","endLine":5,"endColumn":41},{"ruleId":"441","severity":1,"message":"482","line":19,"column":9,"nodeType":"443","messageId":"444","endLine":19,"endColumn":13},{"ruleId":"441","severity":1,"message":"483","line":20,"column":11,"nodeType":"443","messageId":"444","endLine":20,"endColumn":14},{"ruleId":"473","severity":1,"message":"484","line":37,"column":28,"nodeType":"475","messageId":"455","endLine":37,"endColumn":30},{"ruleId":"473","severity":1,"message":"474","line":57,"column":18,"nodeType":"475","messageId":"455","endLine":57,"endColumn":20},{"ruleId":"473","severity":1,"message":"474","line":79,"column":28,"nodeType":"475","messageId":"455","endLine":79,"endColumn":30},{"ruleId":"473","severity":1,"message":"484","line":83,"column":29,"nodeType":"475","messageId":"455","endLine":83,"endColumn":31},{"ruleId":"473","severity":1,"message":"474","line":90,"column":32,"nodeType":"475","messageId":"455","endLine":90,"endColumn":34},{"ruleId":"473","severity":1,"message":"474","line":90,"column":46,"nodeType":"475","messageId":"455","endLine":90,"endColumn":48},{"ruleId":"441","severity":1,"message":"480","line":102,"column":26,"nodeType":"443","messageId":"444","endLine":102,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":102,"column":33,"nodeType":"443","messageId":"444","endLine":102,"endColumn":41},{"ruleId":"441","severity":1,"message":"480","line":6,"column":26,"nodeType":"443","messageId":"444","endLine":6,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":6,"column":33,"nodeType":"443","messageId":"444","endLine":6,"endColumn":41},{"ruleId":"441","severity":1,"message":"480","line":28,"column":24,"nodeType":"443","messageId":"444","endLine":28,"endColumn":29},{"ruleId":"441","severity":1,"message":"485","line":2,"column":55,"nodeType":"443","messageId":"444","endLine":2,"endColumn":71},{"ruleId":"441","severity":1,"message":"480","line":28,"column":24,"nodeType":"443","messageId":"444","endLine":28,"endColumn":29},{"ruleId":"441","severity":1,"message":"485","line":2,"column":55,"nodeType":"443","messageId":"444","endLine":2,"endColumn":71},{"ruleId":"441","severity":1,"message":"480","line":5,"column":26,"nodeType":"443","messageId":"444","endLine":5,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":5,"column":33,"nodeType":"443","messageId":"444","endLine":5,"endColumn":41},{"ruleId":"441","severity":1,"message":"480","line":6,"column":26,"nodeType":"443","messageId":"444","endLine":6,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":6,"column":33,"nodeType":"443","messageId":"444","endLine":6,"endColumn":41},{"ruleId":"441","severity":1,"message":"482","line":19,"column":9,"nodeType":"443","messageId":"444","endLine":19,"endColumn":13},{"ruleId":"441","severity":1,"message":"483","line":20,"column":11,"nodeType":"443","messageId":"444","endLine":20,"endColumn":14},{"ruleId":"473","severity":1,"message":"484","line":37,"column":28,"nodeType":"475","messageId":"455","endLine":37,"endColumn":30},{"ruleId":"473","severity":1,"message":"474","line":57,"column":18,"nodeType":"475","messageId":"455","endLine":57,"endColumn":20},{"ruleId":"473","severity":1,"message":"474","line":79,"column":28,"nodeType":"475","messageId":"455","endLine":79,"endColumn":30},{"ruleId":"473","severity":1,"message":"484","line":83,"column":29,"nodeType":"475","messageId":"455","endLine":83,"endColumn":31},{"ruleId":"473","severity":1,"message":"474","line":90,"column":32,"nodeType":"475","messageId":"455","endLine":90,"endColumn":34},{"ruleId":"473","severity":1,"message":"474","line":90,"column":46,"nodeType":"475","messageId":"455","endLine":90,"endColumn":48},{"ruleId":"441","severity":1,"message":"480","line":102,"column":26,"nodeType":"443","messageId":"444","endLine":102,"endColumn":31},{"ruleId":"441","severity":1,"message":"481","line":102,"column":33,"nodeType":"443","messageId":"444","endLine":102,"endColumn":41},"no-native-reassign",["486"],"no-negated-in-lhs",["487"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Column' is defined but never used.","'render' is defined but never used.","'style' is defined but never used.","'User_types' is assigned a value but never used.","'User_permissions' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClickEditOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'render'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lsType'. Either include it or remove the dependency array.","ArrayExpression",["488"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'setData' is assigned a value but never used.","Duplicate key 'farm'.","Duplicate key 'name'.","Duplicate key 'capacity'.","Duplicate key 'contents'.","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'border' is defined but never used.","'height' is defined but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'MobileDatePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},"Update the dependencies array to be: [lsType]",{"range":"491","text":"492"},[1657,1659],"[lsType]"]