[{"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\index.js":"1","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\App.js":"2","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\reportWebVitals.js":"3","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Calender.js":"4","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\CustomReports.js":"5","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Harvest.js":"6","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\job.js":"7","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Activityreports.js":"8","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Grazing.js":"9","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Maintainance.js":"10","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Planting.js":"11","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Irrigation.js":"12","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Spreading.js":"13","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Spraylogs.js":"14","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"15","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"16","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"17","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"18","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\HeaderFooter\\Header.js":"19","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\History.js":"20","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\icondisplay.js":"21","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"22","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\Data\\farmData.js":"23","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\Data\\EquipmentData.js":"24","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"25","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobMain.js":"26","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobMain.js":"27","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"28","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobDialog.js":"29","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobDialog.js":"30","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"31","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js":"32","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Jobnew.js":"33","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js":"34","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Category.js":"35","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\MyDatePicker.js":"36","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\SelectCheck.js":"37","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Select.js":"38","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Useform.js":"39","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Input.js":"40","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\services\\JobAssign.js":"41","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Jobedit.js":"42","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"43","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"44","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\MyDatePicker.js":"45","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Category.js":"46","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\SelectCheck.js":"47","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Select.js":"48","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\services\\JobAssign.js":"49","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Input.js":"50","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Useform.js":"51","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\Layout\\Structure.js":"52","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\Sidebar\\Navbar.js":"53","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Dashboard\\Dashboard.js":"54","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Users\\Users.js":"55","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\HeaderFooter\\footer.js":"56"},{"size":542,"mtime":1637595497000,"results":"57","hashOfConfig":"58"},{"size":1153,"mtime":1638024637570,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":1637595497000,"results":"60","hashOfConfig":"58"},{"size":174,"mtime":1637595497000,"results":"61","hashOfConfig":"58"},{"size":206,"mtime":1637595497000,"results":"62","hashOfConfig":"58"},{"size":172,"mtime":1637595497000,"results":"63","hashOfConfig":"58"},{"size":10329,"mtime":1637595497000,"results":"64","hashOfConfig":"58"},{"size":189,"mtime":1637595497000,"results":"65","hashOfConfig":"58"},{"size":172,"mtime":1637595497000,"results":"66","hashOfConfig":"58"},{"size":178,"mtime":1637595497000,"results":"67","hashOfConfig":"58"},{"size":170,"mtime":1637595497000,"results":"68","hashOfConfig":"58"},{"size":174,"mtime":1637595497000,"results":"69","hashOfConfig":"58"},{"size":176,"mtime":1637595497000,"results":"70","hashOfConfig":"58"},{"size":178,"mtime":1637595497000,"results":"71","hashOfConfig":"58"},{"size":2066,"mtime":1637595497000,"results":"72","hashOfConfig":"58"},{"size":2817,"mtime":1637595497000,"results":"73","hashOfConfig":"58"},{"size":2805,"mtime":1637595497000,"results":"74","hashOfConfig":"58"},{"size":3966,"mtime":1638018709484,"results":"75","hashOfConfig":"58"},{"size":644,"mtime":1638028637721,"results":"76","hashOfConfig":"58"},{"size":84,"mtime":1637595497000,"results":"77","hashOfConfig":"58"},{"size":961,"mtime":1637595497000,"results":"78","hashOfConfig":"58"},{"size":1032,"mtime":1637595497000,"results":"79","hashOfConfig":"58"},{"size":127,"mtime":1637595497000,"results":"80","hashOfConfig":"58"},{"size":1147,"mtime":1637595497000,"results":"81","hashOfConfig":"58"},{"size":6913,"mtime":1637595497000,"results":"82","hashOfConfig":"58"},{"size":459,"mtime":1637595497000,"results":"83","hashOfConfig":"58"},{"size":459,"mtime":1637595497000,"results":"84","hashOfConfig":"58"},{"size":480,"mtime":1637595497000,"results":"85","hashOfConfig":"58"},{"size":1549,"mtime":1637595497000,"results":"86","hashOfConfig":"58"},{"size":1510,"mtime":1637595497000,"results":"87","hashOfConfig":"58"},{"size":3134,"mtime":1637595497000,"results":"88","hashOfConfig":"58"},{"size":430,"mtime":1637595497000,"results":"89","hashOfConfig":"58"},{"size":7787,"mtime":1637595497000,"results":"90","hashOfConfig":"58"},{"size":430,"mtime":1637595497000,"results":"91","hashOfConfig":"58"},{"size":6408,"mtime":1637595497000,"results":"92","hashOfConfig":"58"},{"size":887,"mtime":1637595497000,"results":"93","hashOfConfig":"58"},{"size":1551,"mtime":1637595497000,"results":"94","hashOfConfig":"58"},{"size":1408,"mtime":1637595497000,"results":"95","hashOfConfig":"58"},{"size":830,"mtime":1637595497000,"results":"96","hashOfConfig":"58"},{"size":422,"mtime":1637595497000,"results":"97","hashOfConfig":"58"},{"size":1827,"mtime":1637595497000,"results":"98","hashOfConfig":"58"},{"size":8379,"mtime":1637595497000,"results":"99","hashOfConfig":"58"},{"size":2909,"mtime":1637595497000,"results":"100","hashOfConfig":"58"},{"size":3316,"mtime":1637595497000,"results":"101","hashOfConfig":"58"},{"size":887,"mtime":1637595497000,"results":"102","hashOfConfig":"58"},{"size":6408,"mtime":1637595497000,"results":"103","hashOfConfig":"58"},{"size":1566,"mtime":1637595497000,"results":"104","hashOfConfig":"58"},{"size":1407,"mtime":1637595497000,"results":"105","hashOfConfig":"58"},{"size":1945,"mtime":1637595497000,"results":"106","hashOfConfig":"58"},{"size":414,"mtime":1637595497000,"results":"107","hashOfConfig":"58"},{"size":830,"mtime":1637595497000,"results":"108","hashOfConfig":"58"},{"size":1122,"mtime":1638029692568,"results":"109","hashOfConfig":"58"},{"size":4200,"mtime":1638029211879,"results":"110","hashOfConfig":"58"},{"size":176,"mtime":1638021519012,"results":"111","hashOfConfig":"58"},{"size":3755,"mtime":1638027809221,"results":"112","hashOfConfig":"58"},{"size":1583,"mtime":1638029289029,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"nra6in",{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"123"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\index.js",[],["251","252"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\App.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\reportWebVitals.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Calender.js",[],["253","254"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\CustomReports.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Harvest.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\job.js",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import React, { useState } from 'react';\nimport GearIcon from 'mdi-react/GearIcon';\nimport IconDisplay from './icondisplay';\nimport Editjob from './JobEdit/JobPopUp/JobMain';\nimport Addjob from './NewJob/JobPopUp/JobMain';\nimport '../Pages.css';\nimport tableData from '../../../Data/tableData.json';\nimport { Icon, Label, Menu, Table, Modal, Header, Button, Checkbox, Grid  } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nexport default function Job() {\n  \n       var flag=0, value='All', value1, display=0;\n     \n    \n    const [open, setOpen] = useState(false)\n    const [isChecked, setChecked] = useState(true);\n    const [selectValue, setselectValue] = useState('');\n    const [selectValue1, setselectValue1] = useState('');\n    const [searchValue, setsearchValue] = useState('');\n\n  /*-----------------------------------------options for second dropdown-----------*/\n    \n    const Category = [\"None\", \"Equipment\", \"Paddock\", \"Fuel Tank\", \"Silo\", \"Livestock\"];\n    const Priority = [\"Low\", \"Normal\", \"High\", \"Safety\"];\n    const Status = [\"Raised\", \"Raised and Assigned\", \"In Progress\", \"On Hold\", \"Completed\"];\n    \n    let type = null;\n    let options = null;\n  \n\nif (selectValue === \"Priority\") \n    type = Priority;\nif (selectValue === \"Category\") \n    type = Category;\nif (selectValue === \"Status\") \n    type = Status;\n\n  \n \n/*-----------------------------------------no records found message-----------*/\nfunction ErrorMessage(props) {\n  const Display = props.Display;\n      \n       if(!Display)\n       { \n        return (\n           <>\n         <p style={{\"text-align\": \"center\", \"color\": \"grey\", \"padding\": \"20px\", \"align-content\": \"bottom\"}}> No record found</p> \n          \n           </>\n           );\n       }\n       \n       else{\n           return(\n           <> </>\n           );\n       }\n}\n   \n if(selectValue){\n      \n      flag=1;\n     value=selectValue;\n     if(selectValue==\"Status\")\n         value1=\"Raised\";\n     if(selectValue==\"Priority\")\n         value1=\"Low\";\n     if(selectValue==\"Category\")\n         value1=\"None\";\n }\n    if(selectValue1){\n    value1=selectValue1; }\n    \n  /*-----------------------------------------second dropdown displaying-----------*/  \nfunction HandleDropdown(props) {\n  const Value = props.Value;\n        if (type) {\n            options = type.map((el) => <option value={el} key={el}>{el}</option>\n                      );\n        }\n    switch (Value) {\n    case 'Priority':\n    case 'Status':\n    case 'Category':\n            return (<>\n                          \n                <div class=\"inputfield\">\n                    <div class=\"custom_select\"> \n                        <select value={selectValue1} onChange={(e) => setselectValue1(e.target.value)}>              \n                        {options}\n                        </select>\n                    </div>\n                </div>\n                </>\n                )\n     case 'Asset':\n            return (\n                <>\n                <div class=\"inputfield\">\n        \n                  <input onChange={(e)=>setsearchValue(e.target.value)} value={searchValue} class='input_value' type=\"text\" placeholder=\"Search...\" />\n                </div>\n                </>\n                )\n    case 'Description':\n           return  (<>\n                          \n                    <div class=\"inputfield\">\n         \n                     <input onChange={(e)=>setsearchValue(e.target.value)} value={searchValue} class='input_value' type=\"text\" placeholder=\"Search...\" />\n                    </div>\n  \n                    </>\n                    )\n               default:\n                 return (<> \n                         </>\n                        )\n        \n}\n}\n\n/*-----------------------------------------table fitering using dropdown and completed button-----------*/\nconst items = tableData.filter((data)=>{\n\n    if(!isChecked && data.status == \"Completed\")// checking completed button enabled or disabled\n        return \n   \n    \n    if(flag)  //if dropdown filter is selected\n   {    if(selectValue==\"Status\" && data.status == value1)   \n          { display=1\n              return data}\n        else if(selectValue==\"Priority\" && data.priority == value1)   \n           { display=1\n              return data}\n        else if(selectValue==\"Category\" && data.category == value1)   \n          { display=1\n              return data}\n        else if(selectValue==\"All\" || selectValue==\"Description\" || selectValue==\"Asset\")   \n          { \n              if(selectValue==\"Description\"){\n                if(searchValue==\"\"){\n                    display=1\n                    return data\n                }\n                else if(data.description.toLowerCase().includes(searchValue.toLowerCase()) ){ //searching using searchbox\n                 \n                    display=1\n                    return data\n                }\n              }\n              else if(selectValue==\"Asset\"){\n                if(searchValue==\"\"){\n                    display=1\n                    return data\n                }\n                  else if(data.asset.toLowerCase().includes(searchValue.toLowerCase())){ //searching using searchbox\n                 \n                    display=1\n                    return data\n                  }\n             }\n              else{\n                  display=1\n                  return data\n              }\n             \n          \n          }\n    \n        else \n            return\n   }\n   else {\n       display=1\n       return data\n   }\n       \n      \n    }).map(({status, priority, category, asset, description,duedate,lastupdate }) => (\n         \n          <Table.Row key={description}>\n       \n            <Table.Cell> <IconDisplay dataValue={status} /></Table.Cell>\n            <Table.Cell> <IconDisplay dataValue={priority} /></Table.Cell>\n            <Table.Cell>{description}</Table.Cell>\n            <Table.Cell>{category}</Table.Cell>\n            <Table.Cell>{asset}</Table.Cell>\n            <Table.Cell>{duedate}</Table.Cell>\n            <Table.Cell>{lastupdate}</Table.Cell>\n            <Table.Cell> <Editjob style={{\"padding\": \"0px\", \"margin\": \"0px\"}}/></Table.Cell>\n       \n          </Table.Row>      \n   ))\n   \n   \n  return(\n\n<div  className= \"table-size\">\n    \n  <div className= \"subheader\">\n           \n      <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Jobs </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      \n      \n   {/*--------------------------------------------Completed jobs popup----------------------*/}\n      \n    <Modal style={{ \"height\": \"35%\", \"width\": \"30%\",\"position\": \"relative\", \"background-color\": \"rgb(0 0 0 / 62%)\" }}\n      centered={true}\n      open={open}\n      trigger={<GearIcon style={{\"cursor\":\"pointer\", \"color\": \"black\"}}/>\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon='setting' content='Settings' />\n      <Modal.Content>\n       <Checkbox toggle onClick={() => setChecked(!isChecked)} \n        checked={isChecked}/>\n            \n            <span style={{\"color\":\"grey\",\"font-size\":\"20px\"}}>  Show Completed </span>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='red' onClick={() => setOpen(false)}>\n          <Icon name='remove'  /> Close\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>   \n      \n\n      <div className=\"spacer\"></div>\n   \n{/*--------------------------------------------First Dropdown----------------------*/}\n        <Grid.Column >\n            <div class=\"inputfield\">\n                <div class=\"custom_select\">  \n                    <select onChange={(e) => {setselectValue(e.target.value);\n                         \n                       setselectValue1(e.target.value==\"Status\"?\"Raised\":\n                         (e.target.value==\"Priority\"?\"Low\":\n                         (e.target.value==\"Category\"?\"None\":\" \")));\n                         \n                       }}>\n         \n                    <option value=\"All\">All</option>\n                    <option value=\"Status\">Status</option>\n                    <option value=\"Priority\">Priority</option>\n                    <option value=\"Description\">Description</option>\n                    <option value=\"Asset\">Asset</option>\n                    <option value=\"Category\">Category</option>\n                </select>\n            </div>\n            </div>\n        </Grid.Column>\n{/*--------------------------------------------Second Dropdown----------------------*/}\n        <Grid.Column style={{\"margin-left\": \"10px\", \"margin-right\": \"20px\"}}>\n               \n                <HandleDropdown Value={selectValue}/>\n        </Grid.Column>\n \n{/*--------------------------------------------Add job section----------------------*/}    \n<Addjob/> \n                    \n</div>\n\n\n{/* --------------------------------------------table displaying-------------------------------------------------------------------- */}\n\n<Table sortable singleLine selectable color=\"green\" key=\"green\" >\n      <Table.Header >\n        <Table.Row >\n                <Table.HeaderCell >Status </Table.HeaderCell>\n                <Table.HeaderCell>Priority</Table.HeaderCell>\n                <Table.HeaderCell >Description</Table.HeaderCell>\n                <Table.HeaderCell>Category</Table.HeaderCell>\n                <Table.HeaderCell>Asset</Table.HeaderCell>\n                <Table.HeaderCell>Due date</Table.HeaderCell>\n                <Table.HeaderCell>Last Update</Table.HeaderCell>\n                <Table.HeaderCell>Actions</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body> {items} </Table.Body>\n <Table.HeaderCell colSpan='8'>\n     \n     <ErrorMessage Display={display}/>\n        \n     </Table.HeaderCell>\n    <Table.Footer>\n      <Table.Row>\n        <Table.HeaderCell colSpan='8'>\n          <Menu floated='right' pagination>\n            <Menu.Item as='a' icon>\n              <Icon name='chevron left' />\n            </Menu.Item>\n            <Menu.Item as='a'>1</Menu.Item>\n            <Menu.Item as='a'>2</Menu.Item>\n            <Menu.Item as='a'>3</Menu.Item>\n            <Menu.Item as='a'>4</Menu.Item>\n            <Menu.Item as='a' icon>\n              <Icon name='chevron right' />\n            </Menu.Item>\n          </Menu>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n      \n  </Table>\n  \n \n\n</div>\n\n      );\n}\n\n\n    \n ","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Activityreports.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Grazing.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Maintainance.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Planting.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Irrigation.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Spreading.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Activities\\Spraylogs.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",["281"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../export.png';\n\nexport default function FertiliserTable() {\n  const [data, setData] = React.useState([\n    { name: 'Abc', form: 1, inventory: 12, units: 1, nutrients: \"Abc\", composition: \"12%\" },\n    { name: 'Efg', form: 3, inventory: 12, units: 2, nutrients: \"efg\", composition: \"22%\" },\n    { name: 'xyz', form: 0, inventory: 12, units: 0, nutrients: \"hij\", composition: \"45%\" },\n    { name: 'wer', form: 1, inventory: 12, units: 3, nutrients: \"klm\", composition: \"50%\" },\n  ])\n  const columns = [{\n    title: 'Name', field: 'name',\n  },\n  {\n    title: 'Form', field: 'form', lookup: { 0: 'Granular', 1: 'Powder', 2: 'Liquid', 3: 'Gas' }\n  },\n  {\n    title: \"Inventory\", field: \"inventory\",\n  },\n  {\n    title: 'Units', field: 'units', lookup: { 0: 'litres', 1: 'gallons', 2: 'kilograms', 3: 'pounds', 4: 'tonnes' }, filtering: false\n  },\n  {\n    title: 'Nutrients Name', field: 'nutrients', filtering: false\n  },\n  {\n    title: 'Nutrients Composition', field: 'composition', filtering: false\n  },\n  ]\n  return (\n    <div>\n      <MaterialTable title=\"Fertilisers\"\n        data={data}\n        columns={columns}\n        editable={{\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setData([...data, newData]);\n\n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve()\n              }, 1000)\n            }),\n        }}\n        options={{\n          actionsColumnIndex: -1,\n          exportButton: true,\n          filtering: true,\n          search: false,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n          Edit: () => <CreateIcon color=\"action\" />,\n          Delete: () => <DeleteIcon color=\"action\" />\n        }}\n      />\n    </div>\n  )\n}","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",["282"],"import React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport \"./Equipment.css\";\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../export.png';\nimport {\n  equipmentData_archive,\n  equipmentData_nonarchive,\n} from \"../../../../Data/EquipmentData\";\n\nexport default function Equipments() {\n  const [selected, toggleselected] = useState(false);\n  const columns_non_archived = [\n    {\n      title: \"Brand\",\n      field: \"brand\",\n    },\n    { title: \"Name\", field: \"name\" },\n    { title: \"Year\", field: \"year\" },\n    { title: \"Serial No\", field: \"serialno\" },\n    { title: \"Notes\", field: \"notes\" },\n    { title: \"Fuelable\", field: \"fuelable\" },\n  ];\n  const columns_archived = [\n    {\n      title: \"Brand\",\n      field: \"brand\",\n    },\n    { title: \"Name\", field: \"name\" },\n    { title: \"Year\", field: \"year\" },\n    { title: \"Serial No\", field: \"serialno\" },\n    { title: \"Notes\", field: \"notes\" },\n    { title: \"Fuelable\", field: \"fuelable\" },\n    {\n      title: \"Archived\",\n      field: \"archived\",\n    },\n  ];\n  return (\n    <div  className= \"table-size\">\n    \n    <div className= \"subheader\">\n             \n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Equipments </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      \n        <div className=\"toggle-switch\">\n          <Checkbox\n            toggle\n            onClick={() => toggleselected(!selected)}\n            checked={selected}\n          />\n        </div>\n        <div className=\"archived\">Show Archived</div>\n      </div>\n\n      <div className=\"equipment-table\">\n        <MaterialTable\n          columns={selected ? columns_archived : columns_non_archived}\n          data={selected ? equipmentData_archive : equipmentData_nonarchive}\n          editable={{\n            onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\n            onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\n          }}\n          options={{\n            showTitle: false,\n            paging: true,\n            pageSizeOptions: [2, 5, 10, 15, 20],\n            paginationType: \"stepped\",\n            showFirstLastPageButtons: false,\n            exportButton: true,\n            actionsColumnIndex:-1\n          }}\n          icons={{\n            Export: () => <img src={Export}></img>,\n            Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n            Edit: () => <CreateIcon color=\"action\" />,\n            Delete: () => <DeleteIcon color=\"action\" />\n          }}\n        ></MaterialTable>\n      </div>\n    </div>\n  );\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",["283"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../export.png';\nexport default function Chemicals() {\n    \n    \n\n    const [data, setData] = React.useState([\n        { name: 'Lagon', actives: 'Aclonifene', group: 3, rate: '23', runit:'ml/ha',inventory: '12', iunit:'ml', period: 10 },\n        { name: 'Imidan', actives: 'Phosmet', group: 3, rate: '50', runit:'lb/ha', inventory: '23', iunit:'l', period: 20 },\n        { name: 'Decis',actives: 'Deltamethrin', group: 3, rate: '40', runit:'oz/ha', inventory: '25', iunit:'oz', period: 5 },\n        { name: 'Actara',actives: 'Thiamethoxam', group: 3, rate: '10', runit:'oz/ha', inventory: '12', iunit:'lb', period: 10 }\n         ])\n    const columns = [{\n        title: 'Name', field: 'name'\n    },\n    {\n      title: 'Actives', field: 'actives'\n  },\n  {\n    title: 'Resistance Group', field: 'group'\n},\n    {\n        title: 'Default Application rate', field: 'rate'\n    },\n    {\n        title: 'Unit', field: 'runit',\n        lookup: { 'ml/ha': 'ml/ha', 'kg/ha': 'Kg/ha','l/ha': 'L/ha','lb/ha': 'lb/ha','oz/ha': 'oz/ha','g/ha': 'g/ha',\n        'floz/ac': 'floz/ac','qt/ac': 'qt/ac','pt/ac': 'pt/ac','oz/ac': 'oz/ac','lb/ac': 'lb/ac','g/ac': 'g/ac',\n        'kg/1000L': 'Kg/1000L','t/ha': 't/ha','l/kg': 'L/Kg','L/t': 'L/t',},\n    }, \n    {\n      title: 'Inventory', field: 'inventory'\n  },\n  {\n      title: 'Unit', field: 'iunit',\n      lookup: { 'ml': 'mL', 'kg': 'Kg','l': 'L','lb': 'lb','oz': 'oz','g': 'g',\n      'floz': 'floz','qt': 'qt','pt': 'pt','t': 't'},\n  }, \n  {\n        title: 'Witholding Period', field: 'period', type: 'numeric',\n        \n    }]\n    return (\n        <div>\n          <div  className= \"table-size\">\n    \n    <div className= \"subheader\">\n             \n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Chemicals </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      </div>\n     \n            <MaterialTable \n                data={data}\n                columns={columns}\n                editable={{\n                \n                        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n          \n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n                }}\n               \n                options={{\n                    actionsColumnIndex: -1,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                    exportButton: true,\n                    showTitle: false,\n                }}\n                icons={{\n                  Export: () => <img src={Export}></img>,\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                  Edit: () => <CreateIcon color=\"action\" />,\n                  Delete: () => <DeleteIcon color=\"action\" />\n                }}\n            /> </div>\n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\HeaderFooter\\Header.js",["284"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\History.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\icondisplay.js",["285"],"import React from 'react';\nimport {Icon} from 'semantic-ui-react';\n\nexport default function IconDisplay(props) {\n  const dataValue = props.dataValue;\n    switch (dataValue) {\n    case 'Raised':\n            return <Icon name='blue circle outline' size='large'/>\n    case 'Completed':\n            return <Icon name='green circle' size='large'/>\n    case 'Raised and Assigned':\n            return <Icon name='blue circle'size='large'/>\n    case 'On Hold':\n           return <Icon name='red circle'size='large'/>\n    case 'In Progress':\n           return <Icon name='orange circle'size='large'/>\n    case 'Low':\n           return <Icon name='angle down'size='large'/>\n    case 'High':\n            return <Icon name='red angle double up'size='large'/>\n    case 'Normal':\n            return <Icon name='blue angle up'size='large'/>\n    case 'Safety':\n           return <Icon name='orange exclamation triangle'size='large'/>\n               \n             \n        \n}\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",["286","287"],"import React, {useState} from 'react'\nimport { Segment } from 'semantic-ui-react';\nimport {Menu} from 'semantic-ui-react';\nimport TableDetails from './tableDetails'\n\n\nexport default function FarmTable()  {\n    const [state, setState] = React.useState(\"PADDOCK\"); \n\n      return (\n        <div>\n          <Menu pointing>\n            <Menu.Item\n              name='PADDOCK'\n              active={state === 'PADDOCK'}\n             color=\"green\"\n             onClick={() => setState(\"PADDOCK\")}\n            />\n            <Menu.Item\n              name='FUEL TANKS'\n              active={state === 'FUEL TANKS'}\n              onClick={() => setState(\"FUEL TANKS\")}\n              color=\"green\"\n            />\n            <Menu.Item\n              name='SILOS'\n              active={state === 'SILOS'}\n              onClick={() => setState(\"SILOS\")}\n              color=\"green\"\n            />\n          \n           \n          </Menu>\n          \n         <TableDetails dataValue={state}/>\n      <br></br>\n         \n        </div>\n    );\n  }\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\Data\\farmData.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\Data\\EquipmentData.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",["288","289"],"import React, {useState} from 'react'\nimport { Button, Checkbox, Icon, Grid, Modal, Input } from 'semantic-ui-react'\nimport GearIcon from 'mdi-react/GearIcon';\nimport farm from \"../../../../../Data/farmData\";\n\nexport default function Farmpopup(props) {\n  const Value = props.Value;\n  const [firstOpen, setFirstOpen] = React.useState(false)\n  const [addOpen, setAddOpen] = React.useState(false)\n  const [editOpen, setEditOpen] = React.useState(false)\n  const [deleteOpen, setDeleteOpen] = React.useState(false)\n  const [state, setState] = useState(' '); \n  \n  const [farm,setfarm]=useState([\n    {value:\"Farm1\"},\n    {value:\"Farm2\"},\n    \n])\nconst addRow=()=>{\n  let newFarm={value:{state}}\n  setfarm([...farm,newFarm])\n  alert(\"New farm added\");\n}\nconst editRow=()=>{\n \n  alert(\"Farm edited\");\n}\nconst deleteRow=()=>{\n \n  alert(\"Farm deleted\");\n}\n  return (\n    <>\n     \n      <GearIcon onClick={() => setFirstOpen(true)} style={{\"cursor\":\"pointer\", \"color\": \"black\"}}/>\n      <Modal style={{ \"height\": \"35%\", \"width\": \"25%\", \"background-color\": \"rgb(0 0 0 / 62%)\" }}\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header>Farm Options</Modal.Header>\n        <Modal.Content>\n        <div  style={{\"margin-left\":\"35px\"}}>\n          <Modal.Description>\n          \n          <Button basic color='green' onClick={() => setAddOpen(true)}>\n          <Icon name='plus' />\n            Add Farm \n          </Button>\n          \n          </Modal.Description>\n         \n         \n          <Modal.Description style={{\"margin-top\":\"10px\"}}>\n          <Button basic color='blue' onClick={() => {setEditOpen(true);\n        setState(Value);}}>\n          <Icon name='pencil' />\n            Edit Farm\n          </Button>\n          \n          </Modal.Description>\n         \n         \n          <Modal.Description style={{\"margin-top\":\"10px\"}}>\n          <Button basic color='red' onClick={() => setDeleteOpen(true)\n          }>\n          <Icon name='minus' />\n            Delete Farm\n          </Button>\n          \n          </Modal.Description>\n         </div>\n        </Modal.Content>\n        \n        <Modal.Actions>\n        <Button color='red' onClick={() => setFirstOpen(false)}>\n          <Icon name='remove'  /> Cancel\n        </Button>\n          \n        </Modal.Actions>\n            \n      <Modal\n          onClose={() => setAddOpen(false)}\n          open={addOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"35%\" }}\n        >\n          <Modal.Header>New Item</Modal.Header>\n          <Modal.Content>\n          <Input fluid iconPosition='left' placeholder='Name'>\n              \n          <input onChange={(e) => setState(e.target.value)\n          } />\n    </Input>\n   \n          </Modal.Content>\n          <Modal.Actions>\n          <Button\n              icon='close'\n              content='Cancel'\n              onClick={() => setAddOpen(false)}\n            />\n            <Button positive\n              icon='check'\n              content='Save'\n              onClick={() => {setAddOpen(false);\n              addRow();}}\n            />\n          </Modal.Actions>\n        </Modal>\n        \n      <Modal\n          onClose={() => setEditOpen(false)}\n          open={editOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"35%\" }}\n        >\n          <Modal.Header>Edit</Modal.Header>\n          <Modal.Content>\n          <Input fluid iconPosition='left'>\n              \n          <input value={state} onChange={(e) => setState(e.target.value)} />\n    </Input>\n    \n          </Modal.Content>\n          <Modal.Actions>\n          <Button\n              icon='close'\n              content='Cancel'\n              onClick={() => setEditOpen(false)}\n            />\n            <Button positive\n              icon='check'\n              content='Save'\n              onClick={() => {setEditOpen(false); editRow();}}\n            />\n          </Modal.Actions>\n        </Modal>\n        \n      <Modal\n          onClose={() => setDeleteOpen(false)}\n          open={deleteOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"25%\" }}\n        >\n          <Modal.Header>Delete</Modal.Header>\n          <Modal.Content>\n            <p>Are you sure you want to delete the {state}?</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button  onClick={() => setDeleteOpen(false)} color=\"white\"\n             icon='close' \n             content='Cancel'\n             />\n            <Button onClick={() => {setDeleteOpen(false);\n            deleteRow();}} \n            negative\n           \n             content='Delete'\n             />\n          </Modal.Actions>\n          \n          \n        </Modal>\n        \n      </Modal>\n    </>\n  )\n}\n\n\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\n      return { ...state, closeOnDimmerClick: action.value }\n    case 'CONFIG_CLOSE_ON_ESCAPE':\n      return { ...state, closeOnEscape: action.value }\n    case 'OPEN_MODAL':\n      return { ...state, open: true }\n    case 'CLOSE_MODAL':\n      return { ...state, open: false }\n    default:\n      throw new Error()\n  }\n}\n\nfunction ModalExampleCloseConfig() {\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    closeOnEscape: true,\n    closeOnDimmerClick: true,\n    open: false,\n    dimmer: undefined,\n  })\n  const { open, closeOnEscape, closeOnDimmerClick } = state\n\n  return (\n    <Grid columns={1}>\n      <Grid.Column>\n        <Checkbox\n          checked={closeOnEscape}\n          label={{ children: <code>closeOnEscape</code> }}\n          onChange={(e, { checked }) =>\n            dispatch({ type: 'CONFIG_CLOSE_ON_ESCAPE', value: checked })\n          }\n        />\n        <br />\n        <Checkbox\n          checked={closeOnDimmerClick}\n          label={{ children: <code>closeOnDimmerClick</code> }}\n          onChange={(e, { checked }) =>\n            dispatch({ type: 'CONFIG_CLOSE_ON_DIMMER_CLICK', value: checked })\n          }\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Modal\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          open={open}\n          onOpen={() => dispatch({ type: 'OPEN_MODAL' })}\n          onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\n          trigger={<Button>Show Modal</Button>}\n        >\n          <Modal.Header>Delete Your Account</Modal.Header>\n          <Modal.Content>\n            <p>Are you sure you want to delete your account</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} negative>\n              No\n            </Button>\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} positive>\n              Yes\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobMain.js",["290","291"],"import { makeStyles, Paper } from '@material-ui/core'\nimport React from 'react'\nimport JobDialog from './JobDialog';\n\nconst useStyles=makeStyles(theme=>({\n    pageContent:{\n        margin:theme.spacing(5),\n        padding:theme.spacing(3)\n    }\n}))\nfunction JobMain() {\n    const classes=useStyles();\n    return (\n        <div>\n            <>\n           \n                <JobDialog/>\n           \n            </>\n        </div>\n    )\n}\n\nexport default JobMain\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobMain.js",["292","293"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobDialog.js",["294","295"],"import { Button } from '@mui/material'\nimport React from 'react'\nimport Jobedit from './Jobedit'\nimport Icon from '@mui/material/Icon';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SampleContextProvider from '../context/SampleContext';\nimport { fontWeight } from '@mui/system';\nimport EyeIcon from 'mdi-react/EyeIcon';\nexport default function JobDialog() {\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        setOpen(false);\n\n    };\n\n    return (\n        <div>\n           \n                <EyeIcon onClick={handleClickOpen} style={{\"color\":\"grey\", \"cursor\":\"pointer\",\"margin\": \"0px\"}}/>\n        \n            <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\n                <DialogContent>\n                <SampleContextProvider>\n                    <Jobedit />\n                </SampleContextProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>DELETE</Button>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleClose}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobDialog.js",["296"],"import { Button } from '@mui/material'\nimport React from 'react'\nimport Jobnew from './Jobnew'\n//import Icon from '@mui/material/Icon';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SampleContextProvider from '../context/SampleContext';\nimport { Icon} from 'semantic-ui-react';\nimport { fontWeight } from '@mui/system';\nexport default function JobDialog() {\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        setOpen(false);\n\n    };\n\n    return (\n        <div>\n            \n        <button  onClick={handleClickOpen} class=\"circular ui icon button green\" style={{\"margin-left\": \"20px\"}}> \n     \n <Icon inverted name='white plus'/>\n</button>\n            <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\n                <DialogContent><SampleContextProvider>\n                    <Jobnew />\n                </SampleContextProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleClose}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",["297","298"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function SiloTable() {\n    const [open, setOpen] = React.useState(false);\n    \n\n    const [data, setData] = React.useState([\n      { name: 'Linta Paddock', capacity: '23', unit:'m3', cultivar: 'fallow', status: 'N' },\n      { name: 'K2K Paddock', capacity: '50', unit:'f3', cultivar: 'dfg', status: 'C' },\n      { name: 'Harry Woods Paddock', capacity: '40', unit:'wt', cultivar: 'abc', status: 'T' },\n      { name: 'Peter Dein Co.', capacity: '10', unit:'t', cultivar: 'abc', status: 'TS' }\n       ])\n  const columns = [{\n      title: 'Name', field: 'name'\n  },\n  {\n      title: 'Capacity', field: 'capacity', type: 'numeric',\n  },\n  {\n      title: 'Unit', field: 'unit',\n      lookup: { 't': 'Tonnes', 'wt': 'Wheat tonnes', 'm3':'Cubic metre', 'f3':'Cubic feet'},\n  }, {\n      title: 'Cultivar', field: 'cultivar', \n      lookup: { 'fallow': 'Fallow', 'abc': 'abc', 'dfg':'dfg' },\n  }, {\n      title: 'status', field: 'status',\n      lookup: {'N': 'Normal' ,'S': 'Seed', 'T': 'Treated', 'TS': 'Treated Seed', \n      'C': 'Contaminated', 'A': 'Archived' },\n  }]\n    return (\n        <div>\n            <MaterialTable title=\"Silos\"\n                data={data}\n                columns={columns}\n                editable={{\n                \n                        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n          \n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n                }}\n               \n                options={{\n                    actionsColumnIndex: -1,\n                    filtering: true,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                }}\n                icons={{\n                 \n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                  Edit: () => <CreateIcon color=\"action\" />,\n                  Delete: () => <DeleteIcon color=\"action\" />\n                }}\n            /> \n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Jobnew.js",["299","300","301","302","303","304"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from '../context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { border, height } from '@mui/system';\n\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nfunction Jobnew() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const { bool, setbool } = React.useContext(SampleContext)\n    const [status, setstatus] = React.useState('');\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState();\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\n        </Form>\n\n    )\n}\n\nexport default Jobnew\n\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Category.js",["305","306","307","308","309","310","311","312","313","314"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport question from './question mark.png'\n\nexport default function Category(props) {\n    const [open, setOpen] = React.useState(false);\n    const [category, setcategory] = React.useState(\"\");\n    const [cat, setcat] = React.useState({});\n    const [img, setimg] = React.useState(question);\n    const [img1, setimg1] = React.useState(question);\n    var changeCategory = 0;\n    var flag=0;\n    const arr = {};\n    const [field, setfield] = React.useState(\"CATEGORY\")\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\n    const [subfield, setSubfield] = React.useState('NONE');\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\n    const [c, setc] = React.useState({});\n\n    const handleChange = (event, value) => {\n        setcategory(event.target.value);\n        changeCategory = event.target.value;\n        setfieldval(value.props.children)\n        setcat({})\n        flag=0;\n        const arr = options.filter(\n            a => (a.id === changeCategory)\n        )\n        if (changeCategory != \"\") {\n            setc(arr[0].data);\n            setSubfieldval(\"\");\n            setfieldfarm(\"\");\n            setimg1(options[changeCategory - 1].icon);\n        }\n        else{\n            setc({});\n            setfieldval(\"CATEGORY\")\n            setSubfieldval(\"None\");\n            setfieldfarm(\"\");\n            setimg1(question);\n        }\n    };\n\n    const handleChange1 = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setcat(values => ({ ...values, [name]: value }))\n        console.log(cat);\n        if (name == \"Farm\") {\n            setfieldfarm(value + \" : \");\n            flag=1;\n        }\n        else {\n            setSubfieldval(value);\n        }\n    }\n    const handleClickOpen = () => {\n        if (!restart) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n        }\n    };\n\n    const handleOk = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            if (subfieldval==\"\") {\n                alert(\"No \"+fieldval+\" Selected\")\n            }\n            else{\n                if(fieldfarm!=\"\"){\n                    setfield(fieldval);\n                    setSubfield(fieldfarm + subfieldval);\n                    setimg(img1)\n                    setOpen(false);\n                }\n                else{\n                    if(category==1 ||category==5){\n                        setfield(fieldval);\n                        setSubfield(fieldfarm + subfieldval);\n                        setimg(img1)\n                        setOpen(false);\n                    }\n                }\n            }\n        }\n    };\n\n\n    const { name, label, value, onChange, options, restart } = props;\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <InputLabel>{field}</InputLabel>\n                        <p>{subfield}</p>\n                    </Grid>\n                </Grid>\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Job Category</DialogTitle>\n                <DialogContent >\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                            <InputLabel>{label}</InputLabel>\n                            <MuiSelect\n                                label={label}\n                                name={name}\n                                value={category}\n                                onChange={handleChange}\n                                displayEmpty>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    options.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                        {\n                            Object.entries(c).map(\n                                ([key, val]) => (\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                                        <InputLabel>{key}</InputLabel>\n                                        <MuiSelect\n                                            name={key}\n                                            label={key}\n                                            value={cat[key]}\n                                            onChange={handleChange1}\n                                        >\n                                            {\n                                                val.map(\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\n                                                )\n                                            }\n                                        </MuiSelect>\n                                    </FormControl>)\n                            )\n                        }\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleOk}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\MyDatePicker.js",["315"],"import React from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\"\n\nexport default function MyDatePicker(props) {\n\n    const { name, label, value, onChange,restart } = props\n\n    const convertToDefEventPara=(name,value)=>({\n        target:{\n            name,value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\n                label={label}\n                format=\"dd/MM/yyyy\"\n                name={name}\n                value={value}\n                onChange={date => onChange(convertToDefEventPara(name,date))}\n                inputProps={{ readOnly:restart }}\n            />\n\n\n        </MuiPickersUtilsProvider>\n    )\n}\n\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\SelectCheck.js",["316"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Select.js",["317","318"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState();\n    const [status, setstatus] = React.useState('');\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={12} md={10}>\n                <FormControl\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Useform.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Input.js",["319","320"],"import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nfunction Input(props) {\n    const { name, label, value, onChange } = props\n    return (\n        <TextField           \n            variant=\"standard\"\n            name={name}\n            label={label}\n            value=\"JESTEENA JOSE\"\n            InputProps={{\n                readOnly: true,\n              }}\n        />\n    )\n}\n\nexport default Input\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\services\\JobAssign.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Jobedit.js",["321","322","323","324","325","326","327","328"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from '../context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { border, height } from '@mui/system';\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport {Button as MuiButton} from '@mui/material';\nimport CircleOutlined from \"@mui/icons-material/CircleOutlined\";\n\n\n\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"Description\",\n    notes: \"Notes\",\n}\n\nfunction Jobedit() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const [priority, setPriority] = React.useState(1);\n    const { bool, setbool } = React.useContext(SampleContext)\n    const [status, setstatus] = React.useState(1);\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState(<CircleOutlined sx={{ color: \"#0000CD\" }} />);\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                <div className=\"pdf\">\n            <MuiButton >\n            <PictureAsPdfOutlinedIcon color=\"error\" fontSize=\"Large\"/></MuiButton></div>\n            \n\n            <br />\n\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority || 'Low'}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel >STARTED</InputLabel>\n                                \n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool} value={values.description}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}} value={values.notes}/>\n        </Form>\n\n    )\n}\n\nexport default Jobedit\n\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",["329","330"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function FueltankTable() {\n    const [open, setOpen] = React.useState(false);\n    \n\n    const [data, setData] = React.useState([\n        { name: 'SR Fuel Tank', capacity: '23', unit:'L', type: 'diesel' },\n        { name: 'NewSon Fuel Tank', capacity: '50', unit:'L', type: 'avaition' },\n        { name: 'Queen Tank', capacity: '40', unit:'gal', type: 'unleaded' },\n        { name: 'Anns Tank', capacity: '10', unit:'gal', type: 'adblue' }\n         ])\n    const columns = [{\n        title: 'Name', field: 'name'\n    },\n    {\n        title: 'Capacity', field: 'capacity'\n    },\n    {\n        title: 'Unit', field: 'unit',\n        lookup: { 'L': 'Litres', 'gal': 'Gallons'},\n    }, {\n        title: 'Type', field: 'type', \n        lookup: { 'avaition': 'Avaition', 'unleaded': 'Unleaded', 'adblue':'AdBlue', 'diesel':'Diesel' },\n    }]\n    return (\n        <div>\n            <MaterialTable title=\"Fuel Tanks\"\n                data={data}\n                columns={columns}\n                editable={{\n                \n                        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n          \n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n                }}\n               \n                options={{\n                    actionsColumnIndex: -1,\n                    filtering: true,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                }}\n                icons={{\n                 \n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                  Edit: () => <CreateIcon color=\"action\" />,\n                  Delete: () => <DeleteIcon color=\"action\" />\n                }}\n            /> \n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",["331","332","333"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function PaddockTable() {\n    const [open, setOpen] = React.useState(false);\n    \n\n    const [data, setData] = React.useState([\n      { name: 'Linta Paddock', size: '23', unit:'ac', cultivar: 'fallow', rotation: 'NR', year: 2017 },\n      { name: 'K2K Paddock', size: '50', unit:'ac', cultivar: 'dfg', rotation: 'DC', year: 2019 },\n      { name: 'Harry Woods Paddock', size: '40', unit:'f2', cultivar: 'abc', rotation: 'LF', year: 2020 },\n      { name: 'Peter Dein Co.', size: '10', unit:'m2', cultivar: 'abc', rotation: 'SF', year: 2019 }\n       ])\n  const columns = [{\n      title: 'Name', field: 'name'\n  },\n  {\n      title: 'Size', field: 'size', type: 'numeric'\n  },\n  {\n      title: 'Unit', field: 'unit',\n      lookup: { 'ac': 'acres', 'ha': 'hectare', 'm2':'metre square', 'f2':'feet square'},\n  }, {\n      title: 'Cultivar', field: 'cultivar', \n      lookup: { 'fallow': 'Fallow', 'abc': 'abc', 'dfg':'dfg' },\n  }, {\n      title: 'Rotation', field: 'rotation',\n      lookup: {'D': 'Dryland' ,'NR': 'Normal Rotation', 'DC': 'Double Crop', 'LF': 'Long Fallow', \n      'SF': 'Short Fallow', 'I': 'Irrigated', 'SI': 'Semi-irrigated', 'D': 'Dryland', 'AP': 'After Pulse' },\n  }, {\n      title: 'Year', field: 'year', type: 'numeric'\n  }]\n    return (\n        <div>\n            <MaterialTable title=\"Paddocks\"\n                data={data}\n                columns={columns}\n                editable={{\n                \n                        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n          \n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n                }}\n               \n                options={{\n                    actionsColumnIndex: -1,\n                    filtering: true,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                }}\n                icons={{\n                  \n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                  Edit: () => <CreateIcon color=\"action\" />,\n                  Delete: () => <DeleteIcon color=\"action\" />\n                }}\n            /> \n        </div>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\MyDatePicker.js",["334"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Category.js",["335","336","337","338","339","340","341","342","343","344"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\SelectCheck.js",["345"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState(['Oliver Hansen']);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Select.js",["346","347"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState();\n    const [status, setstatus] = React.useState(1);\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={12} md={10}>\n                <FormControl\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\services\\JobAssign.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Input.js",["348","349"],"import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nfunction Input(props) {\n    const { name, label, value, onChange } = props\n    return (\n        <TextField           \n            variant=\"standard\"\n            name={name}\n            label={label}\n            value=\"Silla\"\n            InputProps={{\n                readOnly: true,\n              }}\n        />\n    )\n}\n\nexport default Input\n","E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Useform.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\Layout\\Structure.js",["350"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\Sidebar\\Navbar.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\pages\\FarmAssets\\Users\\Users.js",["351","352","353","354","355"],"E:\\FarmSimple\\GTS_TRACE-GTS_TRACE\\src\\components\\HeaderFooter\\footer.js",["356","357","358","359"],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"360","replacedBy":"364"},{"ruleId":"362","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":8,"column":16,"nodeType":"368","messageId":"369","endLine":8,"endColumn":21},{"ruleId":"366","severity":1,"message":"370","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":9},{"ruleId":"366","severity":1,"message":"371","line":65,"column":6,"nodeType":"368","messageId":"369","endLine":65,"endColumn":11},{"ruleId":"372","severity":1,"message":"373","line":66,"column":20,"nodeType":"374","messageId":"375","endLine":66,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":68,"column":20,"nodeType":"374","messageId":"375","endLine":68,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":70,"column":20,"nodeType":"374","messageId":"375","endLine":70,"endColumn":22},{"ruleId":"376","severity":1,"message":"377","line":126,"column":38,"nodeType":"378","messageId":"379","endLine":126,"endColumn":40},{"ruleId":"372","severity":1,"message":"373","line":128,"column":34,"nodeType":"374","messageId":"375","endLine":128,"endColumn":36},{"ruleId":"376","severity":1,"message":"380","line":129,"column":9,"nodeType":"381","messageId":"382","endLine":129,"endColumn":15},{"ruleId":"372","severity":1,"message":"373","line":133,"column":23,"nodeType":"374","messageId":"375","endLine":133,"endColumn":25},{"ruleId":"372","severity":1,"message":"373","line":133,"column":49,"nodeType":"374","messageId":"375","endLine":133,"endColumn":51},{"ruleId":"372","severity":1,"message":"373","line":136,"column":28,"nodeType":"374","messageId":"375","endLine":136,"endColumn":30},{"ruleId":"372","severity":1,"message":"373","line":136,"column":58,"nodeType":"374","messageId":"375","endLine":136,"endColumn":60},{"ruleId":"372","severity":1,"message":"373","line":139,"column":28,"nodeType":"374","messageId":"375","endLine":139,"endColumn":30},{"ruleId":"372","severity":1,"message":"373","line":139,"column":58,"nodeType":"374","messageId":"375","endLine":139,"endColumn":60},{"ruleId":"372","severity":1,"message":"373","line":142,"column":28,"nodeType":"374","messageId":"375","endLine":142,"endColumn":30},{"ruleId":"372","severity":1,"message":"373","line":142,"column":50,"nodeType":"374","messageId":"375","endLine":142,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":142,"column":80,"nodeType":"374","messageId":"375","endLine":142,"endColumn":82},{"ruleId":"372","severity":1,"message":"373","line":144,"column":29,"nodeType":"374","messageId":"375","endLine":144,"endColumn":31},{"ruleId":"372","severity":1,"message":"373","line":145,"column":31,"nodeType":"374","messageId":"375","endLine":145,"endColumn":33},{"ruleId":"372","severity":1,"message":"373","line":155,"column":34,"nodeType":"374","messageId":"375","endLine":155,"endColumn":36},{"ruleId":"372","severity":1,"message":"373","line":156,"column":31,"nodeType":"374","messageId":"375","endLine":156,"endColumn":33},{"ruleId":"376","severity":1,"message":"380","line":175,"column":13,"nodeType":"381","messageId":"382","endLine":175,"endColumn":19},{"ruleId":"372","severity":1,"message":"373","line":243,"column":54,"nodeType":"374","messageId":"375","endLine":243,"endColumn":56},{"ruleId":"372","severity":1,"message":"373","line":244,"column":41,"nodeType":"374","messageId":"375","endLine":244,"endColumn":43},{"ruleId":"372","severity":1,"message":"373","line":245,"column":41,"nodeType":"374","messageId":"375","endLine":245,"endColumn":43},{"ruleId":"383","severity":1,"message":"384","line":78,"column":25,"nodeType":"385","endLine":78,"endColumn":43},{"ruleId":"383","severity":1,"message":"384","line":79,"column":27,"nodeType":"385","endLine":79,"endColumn":45},{"ruleId":"383","severity":1,"message":"384","line":105,"column":33,"nodeType":"385","endLine":105,"endColumn":51},{"ruleId":"383","severity":1,"message":"384","line":8,"column":7,"nodeType":"385","endLine":8,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":6,"column":5,"nodeType":"388","messageId":"389","endLine":28,"endColumn":2},{"ruleId":"366","severity":1,"message":"390","line":1,"column":16,"nodeType":"368","messageId":"369","endLine":1,"endColumn":24},{"ruleId":"366","severity":1,"message":"391","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":17},{"ruleId":"366","severity":1,"message":"392","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":12},{"ruleId":"366","severity":1,"message":"393","line":188,"column":10,"nodeType":"368","messageId":"369","endLine":188,"endColumn":33},{"ruleId":"366","severity":1,"message":"394","line":1,"column":22,"nodeType":"368","messageId":"369","endLine":1,"endColumn":27},{"ruleId":"366","severity":1,"message":"395","line":12,"column":11,"nodeType":"368","messageId":"369","endLine":12,"endColumn":18},{"ruleId":"366","severity":1,"message":"394","line":1,"column":22,"nodeType":"368","messageId":"369","endLine":1,"endColumn":27},{"ruleId":"366","severity":1,"message":"395","line":12,"column":11,"nodeType":"368","messageId":"369","endLine":12,"endColumn":18},{"ruleId":"366","severity":1,"message":"396","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":12},{"ruleId":"366","severity":1,"message":"397","line":10,"column":10,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":11,"column":10,"nodeType":"368","messageId":"369","endLine":11,"endColumn":20},{"ruleId":"366","severity":1,"message":"398","line":8,"column":12,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"399","line":8,"column":18,"nodeType":"368","messageId":"369","endLine":8,"endColumn":25},{"ruleId":"366","severity":1,"message":"400","line":14,"column":10,"nodeType":"368","messageId":"369","endLine":14,"endColumn":16},{"ruleId":"366","severity":1,"message":"401","line":14,"column":18,"nodeType":"368","messageId":"369","endLine":14,"endColumn":24},{"ruleId":"366","severity":1,"message":"402","line":34,"column":9,"nodeType":"368","messageId":"369","endLine":34,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":45,"column":11,"nodeType":"368","messageId":"369","endLine":45,"endColumn":15},{"ruleId":"372","severity":1,"message":"373","line":53,"column":15,"nodeType":"374","messageId":"375","endLine":53,"endColumn":17},{"ruleId":"372","severity":1,"message":"373","line":66,"column":15,"nodeType":"374","messageId":"375","endLine":66,"endColumn":17},{"ruleId":"366","severity":1,"message":"404","line":19,"column":9,"nodeType":"368","messageId":"369","endLine":19,"endColumn":13},{"ruleId":"366","severity":1,"message":"405","line":20,"column":11,"nodeType":"368","messageId":"369","endLine":20,"endColumn":14},{"ruleId":"372","severity":1,"message":"406","line":37,"column":28,"nodeType":"374","messageId":"375","endLine":37,"endColumn":30},{"ruleId":"372","severity":1,"message":"373","line":57,"column":18,"nodeType":"374","messageId":"375","endLine":57,"endColumn":20},{"ruleId":"372","severity":1,"message":"373","line":79,"column":28,"nodeType":"374","messageId":"375","endLine":79,"endColumn":30},{"ruleId":"372","severity":1,"message":"406","line":83,"column":29,"nodeType":"374","messageId":"375","endLine":83,"endColumn":31},{"ruleId":"372","severity":1,"message":"373","line":90,"column":32,"nodeType":"374","messageId":"375","endLine":90,"endColumn":34},{"ruleId":"372","severity":1,"message":"373","line":90,"column":46,"nodeType":"374","messageId":"375","endLine":90,"endColumn":48},{"ruleId":"366","severity":1,"message":"371","line":102,"column":26,"nodeType":"368","messageId":"369","endLine":102,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":102,"column":33,"nodeType":"368","messageId":"369","endLine":102,"endColumn":41},{"ruleId":"366","severity":1,"message":"408","line":2,"column":55,"nodeType":"368","messageId":"369","endLine":2,"endColumn":71},{"ruleId":"366","severity":1,"message":"371","line":28,"column":24,"nodeType":"368","messageId":"369","endLine":28,"endColumn":29},{"ruleId":"366","severity":1,"message":"371","line":6,"column":26,"nodeType":"368","messageId":"369","endLine":6,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":6,"column":33,"nodeType":"368","messageId":"369","endLine":6,"endColumn":41},{"ruleId":"366","severity":1,"message":"371","line":5,"column":26,"nodeType":"368","messageId":"369","endLine":5,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":5,"column":33,"nodeType":"368","messageId":"369","endLine":5,"endColumn":41},{"ruleId":"366","severity":1,"message":"400","line":14,"column":10,"nodeType":"368","messageId":"369","endLine":14,"endColumn":16},{"ruleId":"366","severity":1,"message":"401","line":14,"column":18,"nodeType":"368","messageId":"369","endLine":14,"endColumn":24},{"ruleId":"366","severity":1,"message":"402","line":39,"column":9,"nodeType":"368","messageId":"369","endLine":39,"endColumn":18},{"ruleId":"366","severity":1,"message":"409","line":43,"column":12,"nodeType":"368","messageId":"369","endLine":43,"endColumn":20},{"ruleId":"366","severity":1,"message":"410","line":43,"column":22,"nodeType":"368","messageId":"369","endLine":43,"endColumn":33},{"ruleId":"366","severity":1,"message":"403","line":51,"column":11,"nodeType":"368","messageId":"369","endLine":51,"endColumn":15},{"ruleId":"372","severity":1,"message":"373","line":59,"column":15,"nodeType":"374","messageId":"375","endLine":59,"endColumn":17},{"ruleId":"372","severity":1,"message":"373","line":72,"column":15,"nodeType":"374","messageId":"375","endLine":72,"endColumn":17},{"ruleId":"366","severity":1,"message":"398","line":8,"column":12,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"399","line":8,"column":18,"nodeType":"368","messageId":"369","endLine":8,"endColumn":25},{"ruleId":"366","severity":1,"message":"398","line":8,"column":12,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"399","line":8,"column":18,"nodeType":"368","messageId":"369","endLine":8,"endColumn":25},{"ruleId":"411","severity":1,"message":"412","line":32,"column":71,"nodeType":"413","messageId":"375","endLine":32,"endColumn":74},{"ruleId":"366","severity":1,"message":"408","line":2,"column":55,"nodeType":"368","messageId":"369","endLine":2,"endColumn":71},{"ruleId":"366","severity":1,"message":"404","line":19,"column":9,"nodeType":"368","messageId":"369","endLine":19,"endColumn":13},{"ruleId":"366","severity":1,"message":"405","line":20,"column":11,"nodeType":"368","messageId":"369","endLine":20,"endColumn":14},{"ruleId":"372","severity":1,"message":"406","line":37,"column":28,"nodeType":"374","messageId":"375","endLine":37,"endColumn":30},{"ruleId":"372","severity":1,"message":"373","line":57,"column":18,"nodeType":"374","messageId":"375","endLine":57,"endColumn":20},{"ruleId":"372","severity":1,"message":"373","line":79,"column":28,"nodeType":"374","messageId":"375","endLine":79,"endColumn":30},{"ruleId":"372","severity":1,"message":"406","line":83,"column":29,"nodeType":"374","messageId":"375","endLine":83,"endColumn":31},{"ruleId":"372","severity":1,"message":"373","line":90,"column":32,"nodeType":"374","messageId":"375","endLine":90,"endColumn":34},{"ruleId":"372","severity":1,"message":"373","line":90,"column":46,"nodeType":"374","messageId":"375","endLine":90,"endColumn":48},{"ruleId":"366","severity":1,"message":"371","line":102,"column":26,"nodeType":"368","messageId":"369","endLine":102,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":102,"column":33,"nodeType":"368","messageId":"369","endLine":102,"endColumn":41},{"ruleId":"366","severity":1,"message":"371","line":28,"column":24,"nodeType":"368","messageId":"369","endLine":28,"endColumn":29},{"ruleId":"366","severity":1,"message":"371","line":6,"column":26,"nodeType":"368","messageId":"369","endLine":6,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":6,"column":33,"nodeType":"368","messageId":"369","endLine":6,"endColumn":41},{"ruleId":"366","severity":1,"message":"371","line":5,"column":26,"nodeType":"368","messageId":"369","endLine":5,"endColumn":31},{"ruleId":"366","severity":1,"message":"407","line":5,"column":33,"nodeType":"368","messageId":"369","endLine":5,"endColumn":41},{"ruleId":"366","severity":1,"message":"414","line":7,"column":8,"nodeType":"368","messageId":"369","endLine":7,"endColumn":17},{"ruleId":"366","severity":1,"message":"415","line":2,"column":25,"nodeType":"368","messageId":"369","endLine":2,"endColumn":31},{"ruleId":"366","severity":1,"message":"416","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"417","line":9,"column":10,"nodeType":"368","messageId":"369","endLine":9,"endColumn":15},{"ruleId":"366","severity":1,"message":"418","line":12,"column":7,"nodeType":"368","messageId":"369","endLine":12,"endColumn":17},{"ruleId":"366","severity":1,"message":"419","line":13,"column":7,"nodeType":"368","messageId":"369","endLine":13,"endColumn":23},{"ruleId":"420","severity":1,"message":"421","line":21,"column":5,"nodeType":"385","endLine":21,"endColumn":114},{"ruleId":"420","severity":1,"message":"421","line":24,"column":6,"nodeType":"385","endLine":24,"endColumn":115},{"ruleId":"420","severity":1,"message":"421","line":26,"column":7,"nodeType":"385","endLine":26,"endColumn":116},{"ruleId":"420","severity":1,"message":"421","line":28,"column":7,"nodeType":"385","endLine":28,"endColumn":116},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],["422"],["423"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'_' is defined but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'Segment' is defined but never used.","'farm' is defined but never used.","'ModalExampleCloseConfig' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'Icon' is defined but never used.","'fontWeight' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'border' is defined but never used.","'height' is defined but never used.","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'onChange' is assigned a value but never used.","'MobileDatePicker' is defined but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","no-dupe-keys","Duplicate key 'D'.","ObjectExpression","'Footerbar' is defined but never used.","'Column' is defined but never used.","'render' is defined but never used.","'style' is defined but never used.","'User_types' is assigned a value but never used.","'User_permissions' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]