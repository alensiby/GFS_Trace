[{"/Users/alen/Documents/GFS_Trace/src/index.js":"1","/Users/alen/Documents/GFS_Trace/src/App.js":"2","/Users/alen/Documents/GFS_Trace/src/i18nextInit.js":"3","/Users/alen/Documents/GFS_Trace/src/reportWebVitals.js":"4","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Planting/Planting.js":"5","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spreading/Spreading.js":"6","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Harvest/Harvest.js":"7","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Grazing/Grazing.js":"8","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Irrigation/Irrigation.js":"9","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spraylogs/Spraylogs.js":"10","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Maintenance/Maintenance.js":"11","/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/VetTreatment/VetTreatment.js":"12","/Users/alen/Documents/GFS_Trace/src/components/pages/Login/Forget.js":"13","/Users/alen/Documents/GFS_Trace/src/components/Layout/Structure.js":"14","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/job.js":"15","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Fertiliser/FertiliserTable.js":"16","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Livestock/LiveStock.js":"17","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Custom.js":"18","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Users/Users.js":"19","/Users/alen/Documents/GFS_Trace/src/components/pages/Login/SignUp.js":"20","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/WaterLicence/WaterLicence.js":"21","/Users/alen/Documents/GFS_Trace/src/components/pages/Login/SignIn.js":"22","/Users/alen/Documents/GFS_Trace/src/components/pages/Login/Loggedin.js":"23","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/GrainsTable.js":"24","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Equipments/Equipments.js":"25","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/FuelTable.js":"26","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/InventoryChemical.js":"27","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/farms.js":"28","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Nozzles/Nozzles.js":"29","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryReport/Inventoryreport.js":"30","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Chemicals/Chemical.js":"31","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/InventoryFertilizer.js":"32","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/InventoryWater.js":"33","/Users/alen/Documents/GFS_Trace/src/Data/HarvestData.js":"34","/Users/alen/Documents/GFS_Trace/src/Data/GrazingData.js":"35","/Users/alen/Documents/GFS_Trace/src/Data/PlantingData.js":"36","/Users/alen/Documents/GFS_Trace/src/Data/SpreadingData.js":"37","/Users/alen/Documents/GFS_Trace/src/Data/VetTreatmentData.js":"38","/Users/alen/Documents/GFS_Trace/src/Data/MaintenanceData.js":"39","/Users/alen/Documents/GFS_Trace/src/Data/IrrigationData.js":"40","/Users/alen/Documents/GFS_Trace/src/Data/SpraylogsData.js":"41","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/InventoryWaterTable.js":"42","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/FertiliserTable.js":"43","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tabledetails.js":"44","/Users/alen/Documents/GFS_Trace/src/Data/farmData.js":"45","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/farmTable.js":"46","/Users/alen/Documents/GFS_Trace/src/Data/ChemicalData.js":"47","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Nozzles/NTable.js":"48","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/InventoryChemicalTable.js":"49","/Users/alen/Documents/GFS_Trace/src/Data/EquipmentData.js":"50","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/FarmListPopup/farmpopup.js":"51","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tabledetails.js":"52","/Users/alen/Documents/GFS_Trace/src/Data/UserData.js":"53","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/ReportTableDetails.js":"54","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Livestock/LsTable.js":"55","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/Useform.js":"56","/Users/alen/Documents/GFS_Trace/src/Data/JobData.js":"57","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/tableDetails.js":"58","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tabledetails.js":"59","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/MyDatePicker.js":"60","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/services/JobAssign.js":"61","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/SelectCheck.js":"62","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/Select.js":"63","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/Category.js":"64","/Users/alen/Documents/GFS_Trace/src/components/HeaderFooter/Header.js":"65","/Users/alen/Documents/GFS_Trace/src/components/HeaderFooter/footer.js":"66","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tabledetails.js":"67","/Users/alen/Documents/GFS_Trace/src/components/Sidebar/Navbar.js":"68","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/FuelTank.js":"69","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/StockTake.js":"70","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Total.js":"71","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tabledetails.js":"72","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Outgoing.js":"73","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Ingoing.js":"74","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Total.js":"75","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Contracts.js":"76","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Ingoing.js":"77","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Silos.js":"78","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Outgoing.js":"79","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Transfer.js":"80","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/EquipmentReport.js":"81","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/PaddockReport.js":"82","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/GrainReport.js":"83","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FuelReport.js":"84","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FertiliserReport.js":"85","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FarmReport.js":"86","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/ChemicalReport.js":"87","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/WaterStorageTable.js":"88","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Tabledatas.js":"89","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Outgoing.js":"90","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/StockTake.js":"91","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Ingoing.js":"92","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/StockTake.js":"93","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Outgoing.js":"94","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Fertilisers.js":"95","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Tabledatas.js":"96","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Chart.js":"97","/Users/alen/Documents/GFS_Trace/src/Data/WaterStorageData.js":"98","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Tabledatas.js":"99","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/BarChart.js":"100","/Users/alen/Documents/GFS_Trace/src/Data/InventoryChemicalData.js":"101","/Users/alen/Documents/GFS_Trace/src/Data/InventoryWaterData.js":"102","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/ReportTableData.js":"103","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Outgoing.js":"104","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Ingoing.js":"105","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Chemicals.js":"106","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Ingoing.js":"107","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Storages.js":"108","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/FueltankTable.js":"109","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/SiloTable.js":"110","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/PaddockTable.js":"111","/Users/alen/Documents/GFS_Trace/src/Data/FuelTankData.js":"112","/Users/alen/Documents/GFS_Trace/src/Data/SiloData.js":"113","/Users/alen/Documents/GFS_Trace/src/Data/PaddockData.js":"114"},{"size":630,"mtime":1640577439629,"results":"115","hashOfConfig":"116"},{"size":4238,"mtime":1653364995071,"results":"117","hashOfConfig":"116"},{"size":600,"mtime":1641101065872,"results":"118","hashOfConfig":"116"},{"size":362,"mtime":1640577439629,"results":"119","hashOfConfig":"116"},{"size":3316,"mtime":1652937534056,"results":"120","hashOfConfig":"116"},{"size":3349,"mtime":1652937534056,"results":"121","hashOfConfig":"116"},{"size":3312,"mtime":1652937534055,"results":"122","hashOfConfig":"116"},{"size":3531,"mtime":1652937534055,"results":"123","hashOfConfig":"116"},{"size":3330,"mtime":1652937534055,"results":"124","hashOfConfig":"116"},{"size":3337,"mtime":1652937534056,"results":"125","hashOfConfig":"116"},{"size":3503,"mtime":1652937534056,"results":"126","hashOfConfig":"116"},{"size":3609,"mtime":1652937534056,"results":"127","hashOfConfig":"116"},{"size":878,"mtime":1652937534061,"results":"128","hashOfConfig":"116"},{"size":1271,"mtime":1653364989694,"results":"129","hashOfConfig":"116"},{"size":14737,"mtime":1652937534061,"results":"130","hashOfConfig":"116"},{"size":3142,"mtime":1652937534056,"results":"131","hashOfConfig":"116"},{"size":397,"mtime":1640577439608,"results":"132","hashOfConfig":"116"},{"size":2424,"mtime":1652937534056,"results":"133","hashOfConfig":"116"},{"size":9923,"mtime":1652937534057,"results":"134","hashOfConfig":"116"},{"size":918,"mtime":1652937534062,"results":"135","hashOfConfig":"116"},{"size":2740,"mtime":1640577439608,"results":"136","hashOfConfig":"116"},{"size":1781,"mtime":1653365037530,"results":"137","hashOfConfig":"116"},{"size":179,"mtime":1652937534061,"results":"138","hashOfConfig":"116"},{"size":1933,"mtime":1652937534058,"results":"139","hashOfConfig":"116"},{"size":2818,"mtime":1640577439607,"results":"140","hashOfConfig":"116"},{"size":1548,"mtime":1652937534057,"results":"141","hashOfConfig":"116"},{"size":469,"mtime":1640577439608,"results":"142","hashOfConfig":"116"},{"size":2066,"mtime":1640577439607,"results":"143","hashOfConfig":"116"},{"size":388,"mtime":1640577439608,"results":"144","hashOfConfig":"116"},{"size":593,"mtime":1652937534059,"results":"145","hashOfConfig":"116"},{"size":2704,"mtime":1640577439607,"results":"146","hashOfConfig":"116"},{"size":418,"mtime":1652350946244,"results":"147","hashOfConfig":"116"},{"size":428,"mtime":1640964993536,"results":"148","hashOfConfig":"116"},{"size":1444,"mtime":1640864582542,"results":"149","hashOfConfig":"116"},{"size":1486,"mtime":1640864582542,"results":"150","hashOfConfig":"116"},{"size":1446,"mtime":1640864582542,"results":"151","hashOfConfig":"116"},{"size":1448,"mtime":1640864582542,"results":"152","hashOfConfig":"116"},{"size":1658,"mtime":1640864582542,"results":"153","hashOfConfig":"116"},{"size":1579,"mtime":1640864582542,"results":"154","hashOfConfig":"116"},{"size":1450,"mtime":1640864582542,"results":"155","hashOfConfig":"116"},{"size":1394,"mtime":1640577439605,"results":"156","hashOfConfig":"116"},{"size":1114,"mtime":1640964545054,"results":"157","hashOfConfig":"116"},{"size":1326,"mtime":1652350946243,"results":"158","hashOfConfig":"116"},{"size":845,"mtime":1652937534057,"results":"159","hashOfConfig":"116"},{"size":127,"mtime":1652350626635,"results":"160","hashOfConfig":"116"},{"size":1192,"mtime":1640577439607,"results":"161","hashOfConfig":"116"},{"size":616,"mtime":1640577439605,"results":"162","hashOfConfig":"116"},{"size":2886,"mtime":1640577439608,"results":"163","hashOfConfig":"116"},{"size":1367,"mtime":1640577439608,"results":"164","hashOfConfig":"116"},{"size":1147,"mtime":1652350600462,"results":"165","hashOfConfig":"116"},{"size":5149,"mtime":1640577439607,"results":"166","hashOfConfig":"116"},{"size":936,"mtime":1652937534058,"results":"167","hashOfConfig":"116"},{"size":1504,"mtime":1652350946242,"results":"168","hashOfConfig":"116"},{"size":908,"mtime":1652350946242,"results":"169","hashOfConfig":"116"},{"size":3052,"mtime":1640577439608,"results":"170","hashOfConfig":"116"},{"size":622,"mtime":1652937534060,"results":"171","hashOfConfig":"116"},{"size":1554,"mtime":1640577439605,"results":"172","hashOfConfig":"116"},{"size":599,"mtime":1640577439607,"results":"173","hashOfConfig":"116"},{"size":574,"mtime":1640964531931,"results":"174","hashOfConfig":"116"},{"size":887,"mtime":1652937535696,"results":"175","hashOfConfig":"116"},{"size":1827,"mtime":1652937535695,"results":"176","hashOfConfig":"116"},{"size":1561,"mtime":1652937534060,"results":"177","hashOfConfig":"116"},{"size":1496,"mtime":1652937534060,"results":"178","hashOfConfig":"116"},{"size":6408,"mtime":1652937535696,"results":"179","hashOfConfig":"116"},{"size":615,"mtime":1652937534054,"results":"180","hashOfConfig":"116"},{"size":1892,"mtime":1640847555981,"results":"181","hashOfConfig":"116"},{"size":720,"mtime":1640577439608,"results":"182","hashOfConfig":"116"},{"size":8026,"mtime":1652937534055,"results":"183","hashOfConfig":"116"},{"size":3357,"mtime":1652937534057,"results":"184","hashOfConfig":"116"},{"size":4193,"mtime":1652937534057,"results":"185","hashOfConfig":"116"},{"size":4661,"mtime":1652937534057,"results":"186","hashOfConfig":"116"},{"size":708,"mtime":1652350946244,"results":"187","hashOfConfig":"116"},{"size":4756,"mtime":1652937534057,"results":"188","hashOfConfig":"116"},{"size":4503,"mtime":1652937534057,"results":"189","hashOfConfig":"116"},{"size":4038,"mtime":1652937534058,"results":"190","hashOfConfig":"116"},{"size":4493,"mtime":1652937534058,"results":"191","hashOfConfig":"116"},{"size":5471,"mtime":1652937534058,"results":"192","hashOfConfig":"116"},{"size":3443,"mtime":1652937534058,"results":"193","hashOfConfig":"116"},{"size":5654,"mtime":1652937534058,"results":"194","hashOfConfig":"116"},{"size":4194,"mtime":1652937534058,"results":"195","hashOfConfig":"116"},{"size":2131,"mtime":1652350946242,"results":"196","hashOfConfig":"116"},{"size":3660,"mtime":1652350946243,"results":"197","hashOfConfig":"116"},{"size":899,"mtime":1652350946243,"results":"198","hashOfConfig":"116"},{"size":884,"mtime":1652350946242,"results":"199","hashOfConfig":"116"},{"size":881,"mtime":1652350946242,"results":"200","hashOfConfig":"116"},{"size":5600,"mtime":1652350946242,"results":"201","hashOfConfig":"116"},{"size":856,"mtime":1652350946242,"results":"202","hashOfConfig":"116"},{"size":2183,"mtime":1640577439607,"results":"203","hashOfConfig":"116"},{"size":1809,"mtime":1652937534057,"results":"204","hashOfConfig":"116"},{"size":3370,"mtime":1652937534059,"results":"205","hashOfConfig":"116"},{"size":3772,"mtime":1652937534059,"results":"206","hashOfConfig":"116"},{"size":3409,"mtime":1652350946244,"results":"207","hashOfConfig":"116"},{"size":3271,"mtime":1652350946244,"results":"208","hashOfConfig":"116"},{"size":2887,"mtime":1652350946244,"results":"209","hashOfConfig":"116"},{"size":1940,"mtime":1652350946244,"results":"210","hashOfConfig":"116"},{"size":3319,"mtime":1652937534058,"results":"211","hashOfConfig":"116"},{"size":1506,"mtime":1652937534058,"results":"212","hashOfConfig":"116"},{"size":619,"mtime":1640577439605,"results":"213","hashOfConfig":"116"},{"size":1598,"mtime":1652350946244,"results":"214","hashOfConfig":"116"},{"size":739,"mtime":1652937534058,"results":"215","hashOfConfig":"116"},{"size":1558,"mtime":1640577439605,"results":"216","hashOfConfig":"116"},{"size":246,"mtime":1641056372200,"results":"217","hashOfConfig":"116"},{"size":2606,"mtime":1652350946243,"results":"218","hashOfConfig":"116"},{"size":3371,"mtime":1652937534059,"results":"219","hashOfConfig":"116"},{"size":3937,"mtime":1652937534059,"results":"220","hashOfConfig":"116"},{"size":3029,"mtime":1652937534058,"results":"221","hashOfConfig":"116"},{"size":3826,"mtime":1652937534059,"results":"222","hashOfConfig":"116"},{"size":2957,"mtime":1652937534060,"results":"223","hashOfConfig":"116"},{"size":1796,"mtime":1640577439607,"results":"224","hashOfConfig":"116"},{"size":1964,"mtime":1640577439607,"results":"225","hashOfConfig":"116"},{"size":2067,"mtime":1640577439607,"results":"226","hashOfConfig":"116"},{"size":372,"mtime":1640577439605,"results":"227","hashOfConfig":"116"},{"size":409,"mtime":1640577439605,"results":"228","hashOfConfig":"116"},{"size":483,"mtime":1640577439605,"results":"229","hashOfConfig":"116"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"1pkcgdr",{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"232"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"232"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"232"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"232"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"232"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"232"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"232"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"232"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"232"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"232"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"232"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"232"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"232"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"232"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"232"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"232"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"232"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"232"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"232"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"232"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"232"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"232"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"232"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"232"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"232"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"232"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"232"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"232"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"232"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"232"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"232"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"232"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"232"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"232"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"232"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"232"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"232"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"232"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"232"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"232"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"232"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"232"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"232"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"232"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"232"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"232"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"232"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"232"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"232"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"/Users/alen/Documents/GFS_Trace/src/index.js",[],["508","509"],"/Users/alen/Documents/GFS_Trace/src/App.js",["510"],"/Users/alen/Documents/GFS_Trace/src/i18nextInit.js",[],"/Users/alen/Documents/GFS_Trace/src/reportWebVitals.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Planting/Planting.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spreading/Spreading.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Harvest/Harvest.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Grazing/Grazing.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Irrigation/Irrigation.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spraylogs/Spraylogs.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Maintenance/Maintenance.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/VetTreatment/VetTreatment.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Login/Forget.js",[],"/Users/alen/Documents/GFS_Trace/src/components/Layout/Structure.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Job/job.js",["511","512","513","514","515","516","517"],"import React, { useState } from \"react\";\nimport MaterialTable, { MTableCell }  from \"material-table\";\nimport { Checkbox, Modal, Icon, Form, Button, Input } from \"semantic-ui-react\";\nimport \"./job.css\";\nimport '../Pages.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {useTranslation,Trans} from 'react-i18next';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Useform} from './Useform';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Grid,TextField, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { TextareaAutosize } from '@mui/material';\n\nimport {\n  jobData_withoutcomplete,\n  jobData_withcomplete,\n} from \"../../../Data/JobData\";\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nexport default function Job() {\n\n  const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n   \n\n  const [selected, toggleselected] = useState(false);\n  const [rowdatas, setrowdatas] = React.useState({});\n  const [newedit, setnewedit] = React.useState(true);\n  const {t} =useTranslation();\n  \n  const columns = [\n    {\n\n      title: t('jobs.status',\"Status\"),\n      field: \"status\",\n     \n     \n      lookup: { '0': <Trans i18nKey=\"jobs.raised\">Raised</Trans>,\n      '1': t('jobs.raisedandassigned','Raised And Assigned'),\n      '2': t('jobs.inprogress','In Progress'),\n      '3': t('jobs.onhold','On Hold'),\n      '4': t('jobs.completed','Completed'),\n\n      } ,\n      render: rowData => {\n        return <Tooltip title={rowData.status} placement=\"bottom-start\" arrow>\n           </Tooltip>            \n     },\n      render: rowData => {\n        switch (rowData.status) {\n        case '0':\n                return <Icon name='blue circle outline' size='large'/>\n        case '4':\n                return <Icon name='green circle' size='large'/>\n        case '1':\n                return <Icon name='blue circle'size='large'/>\n        case '3':\n               return <Icon name='red circle'size='large'/>\n        case '2':\n               return <Icon name='orange circle'size='large'/>\n      default:\n        return <></>\n          }\n        }\n\n  \n},\n\n    { title: t('jobs.priority','Priority'), field: \"priority\" ,\n    lookup: { '0': t('jobs.low','Low'), \n    '1': t('jobs.normal','Normal'), \n    '2': t('jobs.high','High'), \n    '3': t('jobs.safety','Safety')},\n\n    render: rowData => {\n      switch (rowData.priority) {\n        case '0':\n           return <Icon name='angle down'size='large'/>\n        case '1':\n           return <Icon name='blue angle up'size='large'/>\n        case '2':\n           return <Icon name='red angle double up'size='large'/>\n   \n        case '3':\n           return <Icon name='orange exclamation triangle'size='large'/>\n    default:\n      return <></>\n    }}\n  },\n\n    { title: t('jobs.description','Description'), field: \"description\" },\n    { title: t('jobs.category','Category'), field: \"category\" ,\n    lookup: { '0': 'None', '1': 'Equipment', '2': 'Paddock', '3': 'Fuel Tank', '4': 'Silo', '5': 'Livestock'},},\n    { title: t('jobs.asset','Asset'), field: \"asset\" },\n    { title: t('jobs.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\n    { title: t('jobs.lastupdate','Last Update'), field: \"lastupdate\", type:\"date\", filtering: false },\n\n    \n  ];\n \n  const {\n    values,\n    setValues,\n    handleInputChange\n} = Useform(initialValues);\n\nconst [bool, setbool] = React.useState(false);\nconst [status, setstatus] = React.useState(1);\nconst [startdate, setstartdate] = React.useState('None');\nconst [starttime, setstarttime] = React.useState('');\nconst [enddate, setenddate] = React.useState('None');\nconst [endtime, setendtime] = React.useState('');\nconst [img, setimg] = React.useState(<Icon name='blue circle outline' size='large'/>);\nconst date = \"\";\nvar d = 3;\nconst [checked, setChecked] = React.useState(false);\n\nconst handleChange = (event) => {\n    setstatus(event.target.value);\n    d = event.target.value;\n    setimg(jobAssign.getStatus()[d - 1].icon);\n    if (d == 3 || (status <= 2 && d > 3)) {\n        const current = new Date();\n        const date = current.toLocaleDateString('en-GB',\n            {\n                day: '2-digit', month: 'long', year: 'numeric'\n            }).replace(/ /g, ' ');\n        setstartdate(date);\n        setstarttime(current.toLocaleTimeString(\"en-US\",\n            {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n            }));\n    }\n    if (d == 5) {\n        const current = new Date();\n        setChecked(true);\n        setbool(true);\n        const date = current.toLocaleDateString('en-GB',\n            {\n                day: '2-digit', month: 'long', year: 'numeric'\n            }).replace(/ /g, ' ');\n        setenddate(date);\n        setendtime(current.toLocaleTimeString(\"en-US\",\n            {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n            }));\n\n    }\n\n};\n\nconst handleClick = (e) => {\n    setChecked(false);\n    setbool(false);\n    setenddate('None');\n    setendtime('');\n    setstatus(3);\n    setimg(jobAssign.getStatus()[2].icon);\n}\n\n\n  return (\n    <div  className= \"table-size\">\n    \n    <div className= \"subheader\">\n             \n\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"jobs.heading\">Jobs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n\n      \n        <div className=\"toggle-switch\">\n          <Checkbox\n            toggle\n            onClick={() => toggleselected(!selected)}\n            checked={selected}\n          />\n        </div>\n\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\n\n      </div>\n      <Modal onClose={() => setOpen(false)} open={open} as={Form}  size='small'>\n        <Modal.Header>\n          {newedit === true ? \"New Job\" : \"Edit Job\"}\n        </Modal.Header>\n        <Modal.Content>\n        \n        <Form>\n             <InputLabel>CREATOR</InputLabel>\n                <FormControl fullWidth>\n                    <TextField                    \n                        name=\"creator\"\n                        value=\"JESTEENA JOSE\"\n                        variant=\"standard\"\n                        fluid\n                        InputProps={{\n                            readOnly: true,\n                          }}\n                        onChange={handleInputChange}\n                        defaultValue=\"\"\n                    />\n                </FormControl>\n                    <br/><br/>\n                   \n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        \n                    />\n                    <br /><br />\n                  \n                    <InputLabel>DUE DATE</InputLabel>\n                   \n                            <MyDatePicker\n                                name=\"dueDate\"\n                                \n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                defaultValue={rowdatas.duedate}\n                            />\n                      <br /><br /> <br />\n                        \n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority}\n                                \n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                \n                            />    \n                    <br /> <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n                            \n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br /><br />  <br /><br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={30} md={4}>\n                                <FormControl fullWidth\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                                </Grid>\n                            <Grid item xs={30} md={5}>\n                                <Fade in={checked}>\n                                    <p style={{cursor:'pointer', paddingLeft:'95px', color:'green'}} onClick={handleClick}>RE-START JOB</p>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:650, height:200}}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:650, height:200}}/>\n        </Form>\n            </Modal.Content>\n        <Modal.Actions>\n          <Button type=\"submit\" color=\"black\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            content=\"Save\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={() => {\n              setOpen(false);\n             \n            }}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n      <div className=\"equipment-table\">\n        <MaterialTable\n          columns={columns}\n          data={selected ? jobData_withcomplete : jobData_withoutcomplete}\n          \n          localization={{\n            toolbar:{\n              searchTooltip:t('materialtable.searchtooltip','Search'),\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\n            },\n            header:{\n              actions:t('materialtable.headeractions','Actions')\n\n            },\n            body:{\n              addTooltip:t('materialtable.bodyaddtooltip','Add'),\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\n              editTooltip:t('materialtable.edittooltip','Edit'),\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\n              editRow:{\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\n              },\n              filterRow:{\n                filterTooltip:t('materialtable.feltertooltip','Filter')\n              }\n            },\n            pagination:{\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\n              \n            }\n          }}\n\n          options={{\n            showTitle: false,\n            paging: true,\n            pageSizeOptions: [2, 5, 10, 15, 20],\n            paginationType: \"stepped\",\n            showFirstLastPageButtons: false,\n            filtering: true,\n            actionsColumnIndex:-1\n          }}\n           components={{\n          Cell: (props) => (\n            <Tooltip placement=\"bottom\" title={props.value ? props.value : ''}>\n              <MTableCell {...props} />\n            </Tooltip>       /// Add translation for tooltip also\n          ),\n        }}\n          actions={[\n          {\n            icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n            isFreeAction: true,\n            onClick: () => {\n                setnewedit(true);\n                setrowdatas({});\n                setOpen(true);\n              },\n          },\n          {\n            icon: () => <CreateIcon color=\"action\" />,\n           \n            onClick: (rowData, e) => {\n                setnewedit(false);\n                setrowdatas(e);\n                setOpen(true);\n              },\n          },\n          {\n            icon: () => <DeleteIcon color=\"action\" />\n          }\n          ]}\n        ></MaterialTable>        \n      </div>\n    </div>\n  );\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Fertiliser/FertiliserTable.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Livestock/LiveStock.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Custom.js",["518","519","520","521","522","523","524","525"],"import React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport Box from '@mui/material/Box';\r\nimport ReportTableDetails from './ReportTableDetails';\r\nimport { Grid } from '@mui/material';\r\n\r\nfunction Custom() {\r\n  const [field, setfield] = React.useState(\"\");\r\n  const [value, setValue] = React.useState([null, null]);\r\n  const handleChange = (event) => {\r\n    setfield(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={3}>\r\n          <h1 style={{paddingLeft: \"30px\", paddingTop: \"20px\"}}>Custom Reports</h1>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <br />\r\n          <select class=\"ui dropdown\" style={{ width: 200, backgroundColor: 'lightgreen', color: 'black' }} onChange={handleChange}>\r\n            <option value=\"\" >Farms</option>\r\n            <option value={2} >Paddocks</option>\r\n            <option value={3} >Equipment</option>\r\n            <option value={4} >Grain</option>\r\n            <option value={5}>Chemicals</option>\r\n            <option value={6} >Fuel</option>\r\n            <option value={7}>Fertilisers</option>\r\n          </select>\r\n        </Grid>\r\n\r\n        {/* <Grid item xs={5}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <div>\r\n              <Typography sx={{ mt: 2, mb: 1 }}>Date Range </Typography>\r\n              <DateRangePicker\r\n                calendars={1}\r\n                value={value}\r\n                onChange={(newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n                renderInput={(startProps, endProps) => (\r\n                  <React.Fragment>\r\n                    <TextField variant=\"standard\" {...startProps}/>\r\n                    <Box sx={{ mx: 2 }}> ~ </Box>\r\n                    <TextField variant=\"standard\" {...endProps} />\r\n                  </React.Fragment>\r\n                )}\r\n\r\n              />\r\n            </div>\r\n          </LocalizationProvider>\r\n        </Grid> */}\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      {/* <Segment attached='bottom'> */}\r\n      <div><ReportTableDetails dataValue={field} /></div>\r\n      {/* </Segment> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Custom\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Users/Users.js",["526"],"import React from \"react\";\nimport MaterialTable, { Column } from \"material-table\";\nimport \"../../Pages.css\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport AddCircleRoundedIcon from \"@mui/icons-material/AddCircleRounded\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Chip from \"@mui/material/Chip\";\nimport UserData from \"../../../../Data/UserData\";\nimport { Modal, Button, Dropdown, Form } from \"semantic-ui-react\";\n\nconst options = [\n  { key: \"payroll\", text: \"Payroll\", value: \"Payroll\" },\n  { key: \"add/editusers\", text: \"Add/Edit Users\", value: \"Add/Edit Users\" },\n  { key: \"graininventory\", text: \"Grain Inventory\", value: \"Grain Inventory\" },\n  { key: \"graincontracts\", text: \"Grain Contracts\", value: \"Grain Contracts\" },\n  {\n    key: \"chemicalinventory\",\n    text: \"Chemical Inventory\",\n    value: \"Chemical Inventory\",\n  },\n  {\n    key: \"fertiliserinventory\",\n    text: \"Fertiliser Inventory\",\n    value: \"Fertiliser Inventory\",\n  },\n  { key: \"fuelinventory\", text: \"Fuel Inventory\", value: \"Fuel Inventory\" },\n  { key: \"waterinventory\", text: \"Water Inventory\", value: \"Water Inventory\" },\n  { key: \"spraylogs\", text: \"Spray Logs\", value: \"Spray Logs\" },\n  {\n    key: \"spraylogapproval\",\n    text: \"Spray Log Approval\",\n    value: \"Spray Log Approval\",\n  },\n  { key: \"plantings\", text: \"Plantings\", value: \"Plantings\" },\n  { key: \"spreadings\", text: \"Spreadings\", value: \"Spreadings\" },\n  { key: \"harvests\", text: \"Harvests\", value: \"Harvests\" },\n  {\n    key: \"paddockmiantainance\",\n    text: \"Paddock Miantainances\",\n    value: \"Paddock Maintainances\",\n  },\n  { key: \"irigation\", text: \"Irrigation\", value: \"Irrigation\" },\n  { key: \"grazing\", text: \"Grazing\", value: \"Grazing\" },\n];\nconst roles = [\n  { key: \"User\", text: \"User\", value: \"User\" },\n  { key: \"admin\", text: \"Admin\", value: \"Admin\" },\n];\n\nvar chipcolor = \"\";\n\nexport default function Users() {\n  const [open, setOpen] = React.useState(false);\n  const [confopen, setconfOpen] = React.useState(false);\n  const [rowdatas, setrowdatas] = React.useState({});\n  const [newedit, setnewedit] = React.useState(true);\n\n  const columns = [\n    {\n      title: \"Name\",\n      render: (rowData) => rowData.first_name + \" \" + rowData.last_name,\n    },\n    {\n      title: \"User Role\",\n      field: \"user_role\",\n      render(rowdata) {\n        function Switches(rowdata) {\n          if (rowdata.user_role === \"Owner\") {\n            chipcolor = \"error\";\n          } else if (rowdata.user_role === \"User\") {\n            chipcolor = \"primary\";\n          } else {\n            chipcolor = \"warning\";\n          }\n\n          return (\n            <div>\n              <Chip color={chipcolor} label={rowdata.user_role} />\n            </div>\n          );\n        }\n        return Switches(rowdata);\n      },\n    },\n    {\n      title: \"Permissions\",\n      field: \"permissions\",\n    },\n    {\n      title: \"Phone\",\n      field: \"Phone\",\n    },\n    {\n      title: \"Email\",\n      field: \"email\",\n    },\n    {\n      title: \"Address\",\n\n      render: (rowData) =>\n        rowData.address_line1 +\n        \" \" +\n        rowData.address_line2 +\n        \" \" +\n        rowData.town +\n        \" \" +\n        rowData.state +\n        \" \" +\n        rowData.pin_code +\n        \" \" +\n        rowData.country,\n    },\n  ];\n  return (\n    <div className=\"table-size\">\n      <div className=\"subheader\">\n        <h1 style={{ color: \"black\", \"margin-bottom\": \"0px\" }}>Users </h1>\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      </div>\n      <Modal onClose={() => setOpen(false)} open={open} as={Form}>\n        <Modal.Header>\n          {newedit === true ? \"New User\" : \"Edit User\"}\n        </Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                required\n                label=\"First name \"\n                placeholder=\"First name\"\n                id=\"form-input-first-name\"\n                defaultValue={rowdatas.first_name}\n              />\n              <Form.Input\n                required\n                fluid\n                label=\"Last name \"\n                placeholder=\"Last name\"\n                id=\"form-input-last-name\"\n                defaultValue={rowdatas.last_name}\n              />\n            </Form.Group>\n            {rowdatas.user_role === \"Owner\" ? (\n              \"\"\n            ) : (\n              <Form.Group inline>\n                <Form.Field required>\n                  <label>User Roles</label>\n                  <Dropdown\n                    widths={5}\n                    fluid\n                    clearable\n                    selection\n                    options={roles}\n                    defaultValue={(roles.value = rowdatas.user_role)}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>User Permissions</label>\n                  <Dropdown\n                    multiple\n                    fluid\n                    selection\n                    options={options}\n                    defaultValue={(options.values = rowdatas.permissions)}\n                  />\n                </Form.Field>\n              </Form.Group>\n            )}\n\n            <Form.Input\n              fluid\n              width={6}\n              label=\"Phone Number\"\n              placeholder=\"Ph No\"\n              id=\"form-input-phone\"\n              defaultValue={rowdatas.Phone}\n            />\n            <Form.Input\n              fluid\n              width={6}\n              label=\"Email Address\"\n              placeholder=\"Email\"\n              id=\"form-input-email\"\n              defaultValue={rowdatas.email}\n            />\n            <Form.Input\n              fluid\n              width={6}\n              label=\"Address line 1\"\n              placeholder=\"line1\"\n              id=\"form-input-address-line1\"\n              defaultValue={rowdatas.address_line1}\n            />\n            <Form.Input\n              fluid\n              width={6}\n              label=\"Address line 2\"\n              placeholder=\"line2\"\n              id=\"form-input-address-line2\"\n              defaultValue={rowdatas.address_line2}\n            />\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Town\"\n                placeholder=\"town\"\n                id=\"form-input-town\"\n                defaultValue={rowdatas.town}\n              />\n              <Form.Input\n                fluid\n                label=\"State\"\n                placeholder=\"state\"\n                id=\"form-input-state\"\n                defaultValue={rowdatas.state}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Pin Code\"\n                placeholder=\"Pin\"\n                id=\"form-input-pincode\"\n                defaultValue={rowdatas.pin_code}\n              />\n              <Form.Input\n                fluid\n                label=\"Country\"\n                placeholder=\"country\"\n                id=\"form-input-Country\"\n                defaultValue={rowdatas.country}\n              />\n            </Form.Group>\n            <Form.Field>\n              <label>* indicates required fields</label>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button type=\"submit\" color=\"black\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            content=\"Save\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={() => {\n              setOpen(false);\n              setconfOpen(true);\n            }}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n\n      <Modal size=\"tiny\" onClose={() => setconfOpen(false)} open={confopen}>\n        <Modal.Header>Confirm Login</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Email</label>\n              <input placeholder=\"Username\" />\n            </Form.Field>\n            <Form.Field>\n              <label>Password</label>\n              <input placeholder=\"password\" type=\"password\" />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            content=\"Login\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={() => setconfOpen(false)}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n      <div className=\"equipment-table\"></div>\n      <MaterialTable\n        columns={columns}\n        data={UserData}\n        editable={{\n          onRowDelete: (selectedRow) => new Promise(() => {}),\n        }}\n        options={{\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          exportButton: false,\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: () => <CreateIcon color=\"action\" />,\n            onClick: (rowData, e) => {\n              setnewedit(false);\n              setrowdatas(e);\n              setOpen(true);\n            },\n          },\n          {\n            icon: () => (\n              <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />\n            ),\n            tooltip: \"Add User\",\n            isFreeAction: true,\n            onClick: () => {\n              setnewedit(true);\n              setrowdatas({});\n              setOpen(true);\n            },\n          },\n        ]}\n        icons={{\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n          Edit: () => <CreateIcon color=\"action\" />,\n          Delete: () => <DeleteIcon color=\"action\" />,\n        }}\n      ></MaterialTable>\n    </div>\n  );\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Login/SignUp.js",["527"],"import React from 'react'\r\nimport './Login.css'\r\nimport farmsimple from './farmsimple.PNG'\r\nimport { Link } from 'react-router-dom'\r\nfunction SignUp() {\r\n    return (\r\n        <div className=\"signin-container\">\r\n            <form className=\"input-section\">\r\n                {/* <img src={farmsimple} alt=\"FarmSimple\"></img> */}\r\n                \r\n                <h2>New Signup</h2>\r\n                <input type=\"text\" placeholder=\"First Name\" />\r\n                <input type=\"text\" placeholder=\"Last Name\" />\r\n                <input type=\"text\" placeholder=\"Company Name\" />\r\n                <input type=\"text\" placeholder=\"Email\" />\r\n            </form>\r\n            <div className=\"v-card__actions\">\r\n                <Link to=\"/\" className=\"btn-cancel\">CANCEL</Link>\r\n                <Link to=\"/Loggedin\" className=\"btn-signup\">SIGN UP</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/WaterLicence/WaterLicence.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Login/SignIn.js",["528","529"],"/Users/alen/Documents/GFS_Trace/src/components/pages/Login/Loggedin.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/GrainsTable.js",["530"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Grains.css\"\r\n\r\n\r\nexport default function GrainsTable()  {\r\n    const [state, setState] = React.useState(\"SILOS\"); \r\n\r\n      return (\r\n        <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">  \r\n   \r\n        <h1 style={{\"color\": \"black\"}}>Grain Inventory </h1><span>&nbsp;&nbsp;</span>\r\n  \r\n    </div>\r\n        <div className=\"chemical\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='SILOS'\r\n              active={state === 'SILOS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"SILOS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            \r\n            <Menu.Item\r\n              name='TRANSFER'\r\n              active={state === 'TRANSFER'}\r\n              onClick={() => setState(\"TRANSFER\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='CONTRACTS'\r\n              active={state === 'CONTRACTS'}\r\n              onClick={() => setState(\"CONTRACTS\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='TOTAL'\r\n              active={state === 'TOTAL'}\r\n              onClick={() => setState(\"TOTAL\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         </div>\r\n        </div>\r\n    );\r\n  }","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Equipments/Equipments.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/FuelTable.js",["531"],"import React, { useState } from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport TableDetails from \"./Tabledetails\";\r\nimport \"./Fuel.css\";\r\n\r\nexport default function FuelTable() {\r\n  const [state, setState] = React.useState(\"FUELTANK\");\r\n\r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">  \r\n   \r\n        <h1 style={{\"color\": \"black\"}}>Fuel Inventory </h1><span>&nbsp;&nbsp;</span>\r\n  \r\n    </div>\r\n    <div className=\"fuel\">\r\n      <Menu pointing>\r\n        <Menu.Item\r\n          name=\"FUELTANK\"\r\n          active={state === \"FUELTANK\"}\r\n          color=\"green\"\r\n          onClick={() => setState(\"FUELTANK\")}\r\n        />\r\n        <Menu.Item\r\n          name=\"INGOING\"\r\n          active={state === \"INGOING\"}\r\n          onClick={() => setState(\"INGOING\")}\r\n          color=\"green\"\r\n        />\r\n        <Menu.Item\r\n          name=\"OUTGOING\"\r\n          active={state === \"OUTGOING\"}\r\n          onClick={() => setState(\"OUTGOING\")}\r\n          color=\"green\"\r\n        />\r\n        <Menu.Item\r\n          name=\"STOCKTAKE\"\r\n          active={state === \"STOCKTAKE\"}\r\n          onClick={() => setState(\"STOCKTAKE\")}\r\n          color=\"green\"\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"TOTAL\"\r\n          active={state === \"TOTAL\"}\r\n          onClick={() => setState(\"TOTAL\")}\r\n          color=\"green\"\r\n        />\r\n      </Menu>\r\n      <Segment attached=\"bottom\">\r\n        <TableDetails dataValue={state} />\r\n      </Segment>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/InventoryChemical.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/farms.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Nozzles/Nozzles.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryReport/Inventoryreport.js",["532"],"import React from \"react\";\nimport \"../../Pages.css\";\nimport { FaFilter } from \"react-icons/fa\";\nimport GearIcon from \"mdi-react/GearIcon\";\n\nexport default function Inventoryreport() {\n  return (\n    <div className=\"table-size\">\n      <div className=\"subheader\">\n        <h1 style={{ color: \"black\" }}>Inventory Reports </h1>\n        <span>&nbsp;&nbsp;</span>\n        <div className=\"icon-align\">\n          <GearIcon\n            style={{ cursor: \"pointer\", color: \"black\" }}\n            onClick={console.log(\"modal opened\")}\n          ></GearIcon>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Chemicals/Chemical.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/InventoryFertilizer.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/InventoryWater.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/HarvestData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/GrazingData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/PlantingData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/SpreadingData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/VetTreatmentData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/MaintenanceData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/IrrigationData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/SpraylogsData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/InventoryWaterTable.js",["533"],"import React, {useState} from 'react'\nimport { Segment } from 'semantic-ui-react';\nimport {Menu} from 'semantic-ui-react';\nimport TableDetails from './Tabledetails'\nimport \"./Water.css\"\n\n\nexport default function InventoryWaterTable()  {\n    const [state, setState] = React.useState(\"STORAGES\"); \n\n      return (\n        <div className=\"water\">\n          <Menu pointing>\n            <Menu.Item\n              name='STORAGES'\n              active={state === 'STORAGES'}\n             color=\"green\"\n             onClick={() => setState(\"STORAGES\")}\n            />\n            <Menu.Item\n              name='INGOING'\n              active={state === 'INGOING'}\n              onClick={() => setState(\"INGOING\")}\n              color=\"green\"\n            />\n            <Menu.Item\n              name='OUTGOING'\n              active={state === 'OUTGOING'}\n              onClick={() => setState(\"OUTGOING\")}\n              color=\"green\"\n            />\n          \n           \n          </Menu>\n          <Segment attached='bottom'>\n         <TableDetails dataValue={state}/>\n        </Segment>\n         \n        </div>\n    );\n  }","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/FertiliserTable.js",["534"],"import React, {useState} from 'react'\nimport { Segment } from 'semantic-ui-react';\nimport {Menu} from 'semantic-ui-react';\nimport TableDetails from './Tabledetails'\nimport \"./Fertiliser.css\"\n\n\nexport default function FertiliserTable()  {\n    const [state, setState] = React.useState(\"FERTILISERS\"); \n\n      return (\n        <div className=\"fertiliser\">\n          <Menu pointing>\n            <Menu.Item\n              name='FERTILISERS'\n              active={state === 'FERTILISERS'}\n             color=\"green\"\n             onClick={() => setState(\"FERTILISERS\")}\n            />\n            <Menu.Item\n              name='INGOING'\n              active={state === 'INGOING'}\n              onClick={() => setState(\"INGOING\")}\n              color=\"green\"\n            />\n            <Menu.Item\n              name='OUTGOING'\n              active={state === 'OUTGOING'}\n              onClick={() => setState(\"OUTGOING\")}\n              color=\"green\"\n            />\n            <Menu.Item\n              name='STOKETAKE'\n              active={state === 'STOCKTAKE'}\n              onClick={() => setState(\"STOCKTAKE\")}\n              color=\"green\"\n            />\n          \n           \n          </Menu>\n          <Segment attached='bottom'>\n         <TableDetails dataValue={state}/>\n        </Segment>\n         \n        </div>\n    );\n  }","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tabledetails.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/farmData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/farmTable.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/ChemicalData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Nozzles/NTable.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/InventoryChemicalTable.js",["535"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Chemical.css\"\r\n\r\n\r\nexport default function InventoryChemicalTable()  {\r\n    const [state, setState] = React.useState(\"CHEMICALS\"); \r\n\r\n      return (\r\n        <div className=\"chemical\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='CHEMICALS'\r\n              active={state === 'CHEMICALS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"CHEMICALS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='STOCKTAKE'\r\n              active={state === 'STOCKTAKE'}\r\n              onClick={() => setState(\"STOCKTAKE\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","/Users/alen/Documents/GFS_Trace/src/Data/EquipmentData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/FarmListPopup/farmpopup.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tabledetails.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/UserData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/ReportTableDetails.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Livestock/LsTable.js",["536"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function LsTable() {\n  const [type, setType] = useState({});\n\n  const lsType = [\n    { id: 1, title: \"Cattle\" },\n    { id: 2, title: \"Bulls\" },\n    { id: 3, title: \"Sheep\" },\n    { id: 4, title: \"Horses\" },\n    { id: 5, title: \"Chickens\" },\n    { id: 6, title: \"Pigs\" },\n    { id: 7, title: \"Deer\" },\n    { id: 8, title: \"Goats\" },\n    { id: 9, title: \"Llamas\" },\n    { id: 10, title: \"Bees\" },\n  ];\n\n  const [data, setData] = useState([\n    {\n      type: \"1\",\n      names: \"abc\",\n\n      number: \"123\",\n      notes: \"xyz\",\n    },\n    {\n      type: \"2\",\n\n      names: \"pqrs\",\n\n      number: \"16343\",\n      notes: \"xykfz\",\n    },\n  ]);\n  const columns = [\n    {\n      title: \"Type\",\n      field: \"type\",\n      lookup: type,\n    },\n    {\n      title: \"Name\",\n      field: \"names\",\n      validate: (rowData) => {\n        if (rowData.names === undefined || rowData.names === \"\") {\n          return \"Required\";\n        } else if (rowData.names.length < 3) {\n          return \"Name Should Contain Atleast 3 chars\";\n        }\n        return true;\n      },\n    },\n\n    {\n      title: \"Number\",\n      field: \"number\",\n    },\n    {\n      title: \"Notes\",\n      field: \"notes\",\n    },\n  ];\n  useEffect(() => {\n    const type = {};\n    lsType.map((row) => (type[row.id] = row.title));\n    setType(type);\n  }, []);\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Livestock\"\n        data={data}\n        columns={columns}\n        editable={{\n          onRowAdd: (newRow) =>\n            new Promise((resolve, reject) => {\n              setData([...data, newRow]);\n              setTimeout(() => resolve(), 500);\n            }),\n          onRowUpdate: (newRow, oldRow) =>\n            new Promise((resolve, reject) => {\n              const updatedData = [...data];\n              updatedData[(oldRow, data.id)] = newRow;\n              setData(updatedData);\n              setTimeout(() => resolve(), 500);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve();\n              }, 1000);\n            }),\n        }}\n        options={{\n          actionsColumnIndex: -1,\n          showTitle: false,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n        }}\n        icons={{\n         \n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n          Edit: () => <CreateIcon color=\"action\" />,\n          Delete: () => <DeleteIcon color=\"action\" />\n        }}\n      />\n    </div>\n  );\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/Useform.js",["537","538"],"import React,{useState} from 'react'\nimport {makeStyles} from '@material-ui/core';\n\n\nfunction Useform(initialValues) {\n\n    const [values, setValues] = useState(initialValues);\n    \n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n    return {\n        values,\n        setValues,\n        handleInputChange\n\n    }\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '100%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\n\n\nexport {Useform}\n\n","/Users/alen/Documents/GFS_Trace/src/Data/JobData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/tableDetails.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tabledetails.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/MyDatePicker.js",["539"],"import React from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\"\n\nexport default function MyDatePicker(props) {\n\n    const { name, label, value, onChange,restart } = props\n\n    const convertToDefEventPara=(name,value)=>({\n        target:{\n            name,value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\n                label={label}\n                format=\"dd/MM/yyyy\"\n                name={name}\n                value={value}\n                onChange={date => onChange(convertToDefEventPara(name,date))}\n                inputProps={{ readOnly:restart }}\n            />\n\n\n        </MuiPickersUtilsProvider>\n    )\n}\n\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/services/JobAssign.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/SelectCheck.js",["540"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl fullWidth\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/Select.js",["541","542"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\nimport {Icon} from \"semantic-ui-react\";\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState(<Icon name='blue angle up'size='large'/>);\n    const [status, setstatus] = React.useState(2);\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={30} md={4}>\n                <FormControl fullWidth\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Job/controls/Category.js",["543","544","545","546","547","548","549","550","551","552"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport question from './question mark.png'\n\nexport default function Category(props) {\n    const [open, setOpen] = React.useState(false);\n    const [category, setcategory] = React.useState(\"\");\n    const [cat, setcat] = React.useState({});\n    const [img, setimg] = React.useState(question);\n    const [img1, setimg1] = React.useState(question);\n    var changeCategory = 0;\n    var flag=0;\n    const arr = {};\n    const [field, setfield] = React.useState(\"CATEGORY\")\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\n    const [subfield, setSubfield] = React.useState('NONE');\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\n    const [c, setc] = React.useState({});\n\n    const handleChange = (event, value) => {\n        setcategory(event.target.value);\n        changeCategory = event.target.value;\n        setfieldval(value.props.children)\n        setcat({})\n        flag=0;\n        const arr = options.filter(\n            a => (a.id === changeCategory)\n        )\n        if (changeCategory != \"\") {\n            setc(arr[0].data);\n            setSubfieldval(\"\");\n            setfieldfarm(\"\");\n            setimg1(options[changeCategory - 1].icon);\n        }\n        else{\n            setc({});\n            setfieldval(\"CATEGORY\")\n            setSubfieldval(\"None\");\n            setfieldfarm(\"\");\n            setimg1(question);\n        }\n    };\n\n    const handleChange1 = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setcat(values => ({ ...values, [name]: value }))\n        console.log(cat);\n        if (name == \"Farm\") {\n            setfieldfarm(value + \" : \");\n            flag=1;\n        }\n        else {\n            setSubfieldval(value);\n        }\n    }\n    const handleClickOpen = () => {\n        if (!restart) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n        }\n    };\n\n    const handleOk = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            if (subfieldval==\"\") {\n                alert(\"No \"+fieldval+\" Selected\")\n            }\n            else{\n                if(fieldfarm!=\"\"){\n                    setfield(fieldval);\n                    setSubfield(fieldfarm + subfieldval);\n                    setimg(img1)\n                    setOpen(false);\n                }\n                else{\n                    if(category==1 ||category==5){\n                        setfield(fieldval);\n                        setSubfield(fieldfarm + subfieldval);\n                        setimg(img1)\n                        setOpen(false);\n                    }\n                }\n            }\n        }\n    };\n\n\n    const { name, label, value, onChange, options, restart } = props;\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <InputLabel>{field}</InputLabel>\n                        <p>{subfield}</p>\n                    </Grid>\n                </Grid>\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Job Category</DialogTitle>\n                <DialogContent >\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                            <InputLabel>{label}</InputLabel>\n                            <MuiSelect\n                                label={label}\n                                name={name}\n                                value={category}\n                                onChange={handleChange}\n                                displayEmpty>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    options.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                        {\n                            Object.entries(c).map(\n                                ([key, val]) => (\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                                        <InputLabel>{key}</InputLabel>\n                                        <MuiSelect\n                                            name={key}\n                                            label={key}\n                                            value={cat[key]}\n                                            onChange={handleChange1}\n                                        >\n                                            {\n                                                val.map(\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\n                                                )\n                                            }\n                                        </MuiSelect>\n                                    </FormControl>)\n                            )\n                        }\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleOk}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","/Users/alen/Documents/GFS_Trace/src/components/HeaderFooter/Header.js",["553"],"import React from \"react\";\nimport farmsimple from \"../../images/logo.jpg\";\nimport \"./header.css\";\nimport {Trans} from 'react-i18next';\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <img className=\"main-logo\" src={farmsimple} width=\"50\" height=\"50\" />\n      <div class=\"logoName\" style={{ color: \"rgb(79, 79, 79)\" }}>\n        <b>GFS</b> Trace\n      </div>\n      <div className=\"spacer\"></div>\n      <span className=\"userDetails\">Align Agith </span> |\n      \n     \n      <button className=\"logout\"><Trans i18nKey=\"header.logout\"> Logout\n        </Trans></button>\n    </div>\n  );\n}\n","/Users/alen/Documents/GFS_Trace/src/components/HeaderFooter/footer.js",["554","555","556"],"\nimport {React,useState} from 'react';\nimport YoutubeIcon from 'mdi-react/YoutubeIcon';\nimport \"./footer.css\";\nimport { useTranslation } from 'react-i18next';\n\nimport FacebookIcon from 'mdi-react/FacebookIcon';\nimport TwitterIcon from 'mdi-react/TwitterIcon';\nimport { Dropdown } from 'semantic-ui-react';\n//import EyeIcon from 'mdi-react/EyeIcon';\n\nconst languageOptions =[\n  {key:'English',text:'English',value:'en'},\n  {key:'Malayalam',text:'മലയാളം',value:'ml'},\n  {key:'Tamil',text:'தமிழ்',value:'tm'}\n]\n\nexport default function Footer() {\n  const [language, setlanguage] = useState(\"en\")\n  const {i18n}=useTranslation();\n  const handleDropdown=(event,lang)=>{\n    setlanguage(lang.value)\n    i18n.changeLanguage(lang.value)\n   \n  }\n  return(\n       \n       \n      <div className='footer-main'>\n        <div><Dropdown\n        upward\n        selection\n        onChange={handleDropdown}\n        button\n        className=\"icon\"\n        labeled\n        icon=\"world\"\n        value={language}\n        scrolling\n        options={languageOptions}\n        placeholder=\"Language\"\n        /></div>\n    \n      \n     <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><FacebookIcon size={24} /></span></a>\n      \n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><TwitterIcon size={24} /></span></a>\n      \n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><YoutubeIcon size={24} /></span></a>\n      \n      <span style={{\"margin-left\": \"10px\", \"align-items\": \"center\", \"color\": \"rgb(79, 79, 79)\", \"top\": \"0\"}}> © 2021 \n    \n      </span>\n    </div>\n  \n     \n      );\n}\n\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tabledetails.js",[],"/Users/alen/Documents/GFS_Trace/src/components/Sidebar/Navbar.js",["557","558","559","560","561"],"import { React } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { MdSpaceDashboard } from \"react-icons/md\";\r\nimport { VscOpenPreview } from \"react-icons/vsc\";\r\nimport { GoProject } from \"react-icons/go\";\r\nimport {\r\n  FaWarehouse,\r\n  FaUserClock,\r\n  FaCalendarAlt,\r\n  FaTasks,\r\n  FaHandHoldingWater,\r\n  FaTools,\r\n  FaUsers,\r\n  FaSprayCan,\r\n} from \"react-icons/fa\";\r\nimport { BsPeopleFill } from \"react-icons/bs\";\r\nimport { ImDroplet } from \"react-icons/im\";\r\nimport \"./sidebar.css\";\r\nimport { SiHappycow } from \"react-icons/si\";\r\nimport { MdVerified } from \"react-icons/md\";\r\nimport { GiMedicalPackAlt } from \"react-icons/gi\";\r\nimport { BsFillCloudLightningRainFill } from \"react-icons/bs\";\r\nimport {\r\n  GiFarmTractor,\r\n  GiGroundSprout,\r\n  GiPlantWatering,\r\n  GiFruitTree,\r\n  GiAutoRepair,\r\n  GiWheat,\r\n  GiChemicalDrop,\r\n  GiGrain,\r\n  GiFuelTank,\r\n  GiFertilizerBag,\r\n  GiField,\r\n  GiGoat,\r\n  GiGrainBundle,\r\n} from \"react-icons/gi\";\r\nconst { SubMenu } = Menu;\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"side-menu\">\r\n      <div className=\"logo\">\r\n        {!props.compact && <div className=\"Cname\">GFS Trace</div>}\r\n      </div>\r\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"vertical\">\r\n        {/* <Menu.Item key=\"1\" icon={<MdSpaceDashboard />}>\r\n          <Link to=\"/\" />\r\n          <Trans i18nKey=\"navbar.dashboard\">Dashboard</Trans>\r\n        </Menu.Item> */}\r\n        <SubMenu key=\"sub4\" icon={<GiFarmTractor />} title={<Trans i18nKey=\"navbar.farmassets\">\r\n            Farm Assets\r\n            </Trans>}>\r\n          <Menu.Item key=\"1\" icon={<GiField />}>\r\n            <Link to=\"/Farms\" />\r\n            <Trans i18nKey=\"navbar.farms\">\r\n            Farms\r\n            </Trans>\r\n          </Menu.Item>\r\n          {/* <Menu.Item key=\"21\" icon={<BsFillCloudLightningRainFill />}>\r\n          <Trans i18nKey=\"navbar.rain\">\r\n            Rain\r\n            </Trans>\r\n          </Menu.Item> */}\r\n          <Menu.Item key=\"22\" icon={<GiGrainBundle />}>\r\n            <Link to=\"/Cultivars\" />\r\n            <Trans i18nKey=\"navbar.cultivars\">\r\n           Cultivars\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"23\" icon={<GiGoat />}>\r\n            <Link to=\"/Livestock\" />\r\n            <Trans i18nKey=\"navbar.livestock\">\r\n            Livestock\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"24\" icon={<FaTools />}>\r\n            <Link to=\"/Equipments\" />\r\n            <Trans i18nKey=\"navbar.equipments\">\r\n            Equipments\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"25\" icon={<GiChemicalDrop />}>\r\n            <Link to=\"/Chemicals\" />\r\n            <Trans i18nKey=\"navbar.chemicals\">\r\n            Chemicals\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"26\" icon={<GiFertilizerBag />}>\r\n            <Link to=\"/Fertiliser\" />\r\n            <Trans i18nKey=\"navbar.fertilizers\">\r\n            Fertilizers\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"27\" icon={<FaUsers />}>\r\n            <Link to=\"/Users\" />\r\n            <Trans i18nKey=\"navbar.users\">\r\n            Users\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"28\" icon={<FaSprayCan />}>\r\n            <Link to=\"/Nozzles\" />\r\n            <Trans i18nKey=\"navbar.nozzles\">\r\n            Nozzles\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"29\" icon={<MdVerified />}>\r\n            <Link to=\"/Waterlicence\" />\r\n            <Trans i18nKey=\"navbar.water_licences\">\r\n            Water Licences\r\n            </Trans>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        \r\n        <Menu.Item key=\"3\" icon={<GoProject />}>\r\n          <Link to=\"/Jobs\" />\r\n          <Trans i18nKey=\"navbar.jobs\">Jobs</Trans>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          icon={<FaTasks />}\r\n          title={<Trans i18nKey=\"navbar.activities\">Activities</Trans>}\r\n        >\r\n          {/* <Menu.Item key=\"4\" icon={<VscOpenPreview />}>\r\n            <Trans i18nKey=\"navbar.activity_reports\">Activity Reports</Trans>\r\n          </Menu.Item> */}\r\n          <Menu.Item key=\"5\" icon={<ImDroplet />}>\r\n          <Link to=\"/Spraylogs\" />\r\n            <Trans i18nKey=\"navbar.spray_logs\">Spray Logs</Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\" icon={<GiGroundSprout />}>\r\n          <Link to=\"/Planting\" />\r\n          <Trans i18nKey=\"navbar.planting\">\r\n            Planting\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"7\" icon={<GiWheat />}>\r\n          <Link to=\"/Spreading\" />\r\n          <Trans i18nKey=\"navbar.spreading\">\r\n            Spreading\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"8\" icon={<GiFruitTree />}>\r\n          <Link to=\"/Harvest\" />\r\n          <Trans i18nKey=\"navbar.harvest\">\r\n           Harvest\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"9\" icon={<GiAutoRepair />}>\r\n          <Link to=\"/Maintenance\" />\r\n          <Trans i18nKey=\"navbar.maintainance\">\r\n            Maintenance\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"10\" icon={<GiPlantWatering />}>\r\n          <Link to=\"/Irrigation\" />\r\n          <Trans i18nKey=\"navbar.irrigation\">\r\n            Irrigation\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"11\" icon={<SiHappycow />}>\r\n          <Link to=\"/Grazing\" />\r\n          <Trans i18nKey=\"navbar.grazing\">\r\n            Grazing\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"12\" icon={<GiMedicalPackAlt />}>\r\n          <Link to=\"/VetTreatment\" />\r\n          <Trans i18nKey=\"navbar.vettreatment\">\r\n            Vet Treatments\r\n            </Trans>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<FaWarehouse />} title={<Trans i18nKey=\"navbar.inventory\">\r\n            Inventory\r\n            </Trans>}>\r\n          {/* <Menu.Item key=\"13\" icon={<VscOpenPreview />}>\r\n            <Link to=\"InventoryReport\"/>\r\n          <Trans i18nKey=\"navbar.inventory_reports\">\r\n            Inventory Reports\r\n            </Trans>\r\n          </Menu.Item> */}\r\n          <Menu.Item key=\"14\" icon={<GiGrain />}>\r\n         <Link to=\"/Grain\" />\r\n          <Trans i18nKey=\"navbar.grain\">\r\n            Grain\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"15\" icon={<GiChemicalDrop />}>\r\n            <Link to=\"/InventoryChemical\" />\r\n            <Trans i18nKey=\"navbar.chemical\">\r\n            Chemical\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"16\" icon={<GiFertilizerBag />}>\r\n          <Link to=\"/InventoryFertilizer\" />\r\n          <Trans i18nKey=\"navbar.fertilizer\">\r\n            Fertilizer\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"17\" icon={<GiFuelTank />}>\r\n          <Link to=\"/InventoryFuel\" />\r\n          <Trans i18nKey=\"navbar.fuel\">\r\n            Fuel\r\n            </Trans>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"18\" icon={<FaHandHoldingWater />}>\r\n          <Link to=\"/InventoryWater\" />\r\n          <Trans i18nKey=\"navbar.water\">\r\n            Water\r\n            </Trans>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <Menu.Item key=\"2\" icon={<VscOpenPreview />}>\r\n          <Trans i18nKey=\"navbar.custom_reports\">Custom Reports</Trans>\r\n          <Link to=\"/Custom\" />\r\n        </Menu.Item>\r\n        {/* <SubMenu key=\"sub3\" icon={<BsPeopleFill />} title={<Trans i18nKey=\"navbar.personnel\">\r\n            Personnel\r\n            </Trans>}>\r\n          <Menu.Item key=\"19\" icon={<FaUserClock />}>\r\n          <Trans i18nKey=\"navbar.timesheet\">\r\n            Timesheet\r\n            </Trans>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        \r\n        <Menu.Item key=\"30\" icon={<FaCalendarAlt />}>\r\n        <Trans i18nKey=\"navbar.calender\">\r\n            Calendar\r\n            </Trans>\r\n        </Menu.Item> */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/FuelTank.js",["562","563"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable,{ MTableToolbar } from \"material-table\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport {Checkbox} from \"semantic-ui-react\";\r\nimport {fuelTank_data,type_data} from \"./Tabledatas\";\r\n\r\nimport \"../Fuel.css\";\r\nimport \"./archived.css\";\r\nimport Export from \"./export.png\";\r\n\r\n\r\nexport default function FuelTank() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [type, setType] = useState({});\r\nconst [data, setData] = React.useState(fuelTank_data );\r\n  const columns = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",lookup:type,\r\n    },\r\n   \r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n    },\r\n    // {\r\n    //   title: \"Contents\",\r\n    //   field: \"contents\",filtering:false,\r\n    // },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n    },\r\n    \r\n   \r\n  ]\r\n  const columns_archived = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",lookup:type,\r\n    },\r\n   \r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      \r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n\r\n    },\r\n    {\r\n      title: \"Archived\",\r\n      field: \"archived\",filtering:false,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"FUEL TANK\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        // columns={columns}\r\n        // detailPanel={(rowData) => {\r\n        //   return <Chart />;\r\n        // }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,filtering:true\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          // Edit: () => <CreateIcon color=\"action\" />,\r\n          // Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/StockTake.js",["564"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { stocktake_data,type_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function StockTake() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [type, setType] = useState({});\r\n    const [data, setData] = React.useState(stocktake_data)\r\n    const columns = [{\r\n      title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n   },\r\n\r\n    {\r\n       title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, \r\n    {\r\n      title: 'Operator', field: 'operator',filtering:false,\r\n    },\r\n    \r\n    \r\n    {\r\n        title: 'Reported', field: 'reported',filtering:false,\r\n    },\r\n    {\r\n      title: 'Adjustment', field: 'adjustment',filtering:false,\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',lookup:type,\r\n},\r\n  ]\r\n    const columns_archived = [\r\n      {\r\n        title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n     },\r\n  \r\n      {\r\n         title: 'Date/Time', field: 'dateTime',filtering:false,\r\n      }, \r\n      {\r\n        title: 'Operator', field: 'operator',filtering:false,\r\n      },\r\n      \r\n      \r\n      {\r\n          title: 'Reported', field: 'reported',filtering:false,\r\n      },\r\n      {\r\n        title: 'Adjustment', field: 'adjustment',filtering:false,\r\n    },\r\n    {\r\n      title: 'Type', field: 'type',lookup:type\r\n  },\r\n      {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },];\r\n      useEffect(() => {\r\n        const type = {};\r\n        type_data.map((row) => (type[row.id] = row.title));\r\n        setType(type);\r\n      }, []);\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STOCKTAKE\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,filtering:true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Total.js",["565","566","567"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { total_data,type_data } from './Tabledatas';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nimport { MenuItem, Select } from '@material-ui/core';\r\nexport default function Total() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [type, setType] = useState({});\r\n\r\n  // const lsType = [\r\n  //   { id: 1, title: \"Cattle\" },\r\n  //   { id: 2, title: \"Bulls\" },\r\n  //   { id: 3, title: \"Sheep\" },\r\n  //   { id: 4, title: \"Horses\" },\r\n  //   { id: 5, title: \"Chickens\" },\r\n  //   { id: 6, title: \"Pigs\" },\r\n  //   { id: 7, title: \"Deer\" },\r\n  //   { id: 8, title: \"Goats\" },\r\n  //   { id: 9, title: \"Llamas\" },\r\n  //   { id: 10, title: \"Bees\" },\r\n  // ];\r\n\r\n    const [data, setData] = React.useState(total_data)\r\n    const columns = [\r\n    {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',filtering:false,\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',filtering:false,\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',filtering:false,\r\n    },\r\n    {\r\n      title: 'Contents', field: 'contents1',filtering:false,\r\n  },\r\n    \r\n  ];\r\n\r\n  \r\n    const columns_archived = [\r\n      {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',filtering:false,\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',filtering:false,\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',filtering:false,\r\n    },\r\n    {\r\n      title: 'Contents', field: 'contents1',filtering:false,\r\n  },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n    return (\r\n        <div>\r\n          {/* <Select\r\n    labelId=\"demo-simple-select-label\"\r\n    id=\"demo-simple-select\"\r\n     value={type}\r\n    // label=\"Age\"\r\n    // onChange={handleChange}\r\n  >\r\n    <MenuItem value={Diesel}>Diesel</MenuItem>\r\n    <MenuItem value={Unleaded}>Unleaded</MenuItem>\r\n    <MenuItem value={Aviation}>Aviation</MenuItem>\r\n  </Select> */}\r\n            <MaterialTable title=\"TOTAL\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,filtering:true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tabledetails.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Outgoing.js",["568"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { outgoing_data, type_data } from './Tabledatas';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nexport default function Outgoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [type, setType] = useState({});\r\n    const [data, setData] = React.useState(outgoing_data)\r\n    const columns = [{\r\n      title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n  },\r\n\r\n  {\r\n      title: 'Date/Time', field: 'dateTime',filtering:false,\r\n  }, {\r\n      title: 'Operator', field: 'operator',filtering:false,\r\n  },\r\n   {\r\n      title: 'Adjustment', field: 'adjustment',filtering:false,\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',lookup:type,\r\n},\r\n  {\r\n      title: 'Equipment', field: 'equipment',filtering:false,\r\n  },\r\n  {\r\n      title: 'Hours', field: 'hours',filtering:false,\r\n  },\r\n  {\r\n      title: 'Milage', field: 'milage',filtering:false,\r\n  },\r\n  \r\n  {\r\n      title: 'Notes', field: 'notes',filtering:false,\r\n  },\r\n  ]\r\n    const columns_archived = [{\r\n        title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n    },\r\n  \r\n    {\r\n        title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, {\r\n        title: 'Operator', field: 'operator',filtering:false,\r\n    },\r\n     {\r\n        title: 'Adjustment', field: 'adjustment',filtering:false,\r\n    },\r\n    {\r\n      title: 'Type', field: 'type',lookup:type,\r\n  },\r\n    {\r\n        title: 'Equipment', field: 'equipment',filtering:false,\r\n    },\r\n    {\r\n        title: 'Hours', field: 'hours',filtering:false,\r\n    },\r\n    {\r\n        title: 'Milage', field: 'milage',filtering:false,\r\n    },\r\n    \r\n    {\r\n        title: 'Notes', field: 'notes',filtering:false,\r\n    },\r\n  {\r\n      title: 'Archived', field: 'archived',filtering:false,\r\n  },];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"OUTGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,filtering:true,  \r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived \"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Ingoing.js",["569","570"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ingoing_data,type_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport Export from './export.png';\r\nimport { DisabledByDefault } from '@mui/icons-material';\r\nexport default function Ingoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [type, setType] = useState({});\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n    },\r\n    \r\n    {\r\n        title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, {\r\n        title: 'Operator', field: 'operator',filtering:false,\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',filtering:false,\r\n    },\r\n    {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    },\r\n    {\r\n        title: 'Supplier', field: 'supplier',filtering:false,\r\n    },\r\n    \r\n    {\r\n        title: 'Notes', field: 'notes',filtering:false,\r\n    },\r\n    \r\n    \r\n  ]\r\n  const columns_archived = [{\r\n    title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n},\r\n\r\n{\r\n    title: 'Date/Time', field: 'dateTime',filtering:false,\r\n}, {\r\n    title: 'Operator', field: 'operator',filtering:false,\r\n},\r\n{\r\n    title: 'Amount', field: 'amount',filtering:false,\r\n},\r\n{\r\n    title: 'Type', field: 'type',lookup:type,\r\n},\r\n{\r\n    title: 'Supplier', field: 'supplier',filtering:false,\r\n},\r\n\r\n{\r\n    title: 'Notes', field: 'notes',filtering:false,\r\n},\r\n{\r\n    title: 'Archived', field: 'archived',filtering:false,\r\n},\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    filtering:true\r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Total.js",["571"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { total_data } from './Tabledatas';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nexport default function Total() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(total_data)\r\n    const columns = [\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',\r\n    },\r\n    {\r\n        title: 'Contracted', field: 'contracted',\r\n    },\r\n    {\r\n        title: 'Delivered', field: 'delivered',\r\n    },\r\n    {\r\n        title: 'Remaining', field: 'remaining',\r\n    }\r\n  ]\r\n    const columns_archived = [\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',\r\n    },\r\n    {\r\n        title: 'Contracted', field: 'contracted',\r\n    },\r\n    {\r\n        title: 'Delivered', field: 'delivered',\r\n    },\r\n    {\r\n        title: 'Remaining', field: 'remaining',\r\n    }\r\n  ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"TOTAL\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n               \r\n                icons={{\r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Export: () => <img src={Export}></img>,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                 \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Contracts.js",["572","573"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { Checkbox } from 'semantic-ui-react';\r\n\r\nexport default function Contracts() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState([\r\n        {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"}\r\n    ])\r\n    const columns = [{\r\n        title: 'Status', field: 'status',\r\n    },\r\n    {\r\n        title: 'Contract No', field: 'contractNo',\r\n    },\r\n    {\r\n        title: 'Start Date', field: 'startDate',\r\n    }, {\r\n        title: 'End Date', field: 'endDate',\r\n    },\r\n    {\r\n        title: 'Buyer', field: 'buyer',\r\n    },\r\n    \r\n    {\r\n        title: 'Destination', field: 'destination',\r\n    },\r\n    {\r\n        title: 'Commodity', field: 'commodity',\r\n    },\r\n    {\r\n        title: 'Fulfilled', field: 'fulfilled',\r\n    },\r\n    {\r\n        title: 'Quantity', field: 'quantity',\r\n    },\r\n    {\r\n        title: 'Grade', field: 'grade',\r\n    },\r\n    {\r\n        title: 'Tolerence', field: 'tolerence',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    },\r\n    \r\n  ]\r\n  const columns_archived = [{\r\n    title: 'Status', field: 'status',\r\n},\r\n{\r\n    title: 'Contract No', field: 'contractNo',\r\n},\r\n{\r\n    title: 'Start Date', field: 'startDate',\r\n}, {\r\n    title: 'End Date', field: 'endDate',\r\n},\r\n{\r\n    title: 'Buyer', field: 'buyer',\r\n},\r\n\r\n{\r\n    title: 'Destination', field: 'destination',\r\n},\r\n{\r\n    title: 'Commodity', field: 'commodity',\r\n},\r\n{\r\n    title: 'Fulfilled', field: 'fulfilled',\r\n},\r\n{\r\n    title: 'Quantity', field: 'quantity',\r\n},\r\n{\r\n    title: 'Grade', field: 'grade',\r\n},\r\n{\r\n    title: 'Tolerence', field: 'tolerence',\r\n},\r\n{\r\n    title: 'Notes', field: 'notes',\r\n},\r\n{\r\n    title:\"Archived\",field:\"archived\",\r\n}\r\n]\r\n\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CONTRACTS\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    \r\n                }}\r\n\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Ingoing.js",["574","575"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ingoing_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport Export from './export.png';\r\nimport { DisabledByDefault } from '@mui/icons-material';\r\nexport default function Ingoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'ID', field: 'id',filtering:false,\r\n    },\r\n    {\r\n        title: 'Silos', field: 'silos',\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, {\r\n        title: 'Operators', field: 'operators',filtering:false,\r\n    },\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',filtering:false,\r\n    },\r\n    {\r\n        title: 'Transport', field: 'transport',filtering:false,\r\n    },\r\n    {\r\n        title: 'Driver', field: 'driver',filtering:false,\r\n    },\r\n    {\r\n        title: 'Rego', field: 'rego',filtering:false,\r\n    },\r\n    {\r\n        title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n    },\r\n    {\r\n        title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',filtering:false,\r\n    },\r\n    {\r\n        title: 'Paddocks', field: 'paddocks',filtering:false,\r\n    },\r\n    {\r\n        title: 'Traits', field: 'traits',filtering:false,\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',filtering:false,\r\n    },\r\n    \r\n    \r\n  ]\r\n  const columns_archived = [{\r\n    title: 'ID', field: 'id',filtering:false,\r\n},\r\n{\r\n    title: 'Silos', field: 'silos',\r\n},\r\n{\r\n    title: 'Date/Time', field: 'dateTime',filtering:false,\r\n}, {\r\n    title: 'Operators', field: 'operators',filtering:false,\r\n},\r\n{\r\n    title: 'Cultivar', field: 'cultivar',filtering:false,\r\n},\r\n{\r\n    title: 'Transport', field: 'transport',filtering:false,\r\n},\r\n{\r\n    title: 'Driver', field: 'driver',filtering:false,\r\n},\r\n{\r\n    title: 'Rego', field: 'rego',filtering:false,\r\n},\r\n{\r\n    title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n},\r\n{\r\n    title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n},\r\n{\r\n    title: 'Amount', field: 'amount',filtering:false,\r\n},\r\n{\r\n    title: 'Paddocks', field: 'paddocks',filtering:false,\r\n},\r\n{\r\n    title: 'Traits', field: 'traits',filtering:false,\r\n},\r\n{\r\n    title: 'Notes', field: 'notes',filtering:false,\r\n},\r\n{\r\n    title: 'Archived', field: 'archived',filtering:false,\r\n},\r\n  ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    filtering:true,\r\n                    \r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                 \r\n                  icons={{\r\n                    Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Export: () => <img src={Export}></img>,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Silos.js",["576","577"],"import React from \"react\";\r\nimport MaterialTable,{ MTableToolbar } from \"material-table\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport {Checkbox} from \"semantic-ui-react\";\r\nimport {silos_data} from \"./Tabledatas\";\r\nimport Chart from \"./Chart\";\r\nimport \"../Grains.css\";\r\nimport \"./archived.css\";\r\nimport Export from \"./export.png\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nexport default function Silos() {\r\n  const [selected, toggleselected] = React.useState(false);\r\nconst [data, setData] = React.useState(silos_data );\r\n  const columns = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",\r\n    },\r\n    {\r\n      title: \"Silo\",\r\n      field: \"silo\",\r\n    },\r\n    {\r\n      title: \"Cultivar\",\r\n      field: \"cultivar\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n    },\r\n\r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      field: \"status\",\r\n    },\r\n  ]\r\n  const columns_archived = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",\r\n    },\r\n    {\r\n      title: \"Silo\",\r\n      field: \"silo\",\r\n    },\r\n    {\r\n      title: \"Cultivar\",\r\n      field: \"cultivar\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n    },\r\n\r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      field: \"status\",\r\n    },\r\n    {\r\n      title: \"Archived\",\r\n      field: \"archived\",\r\n    },\r\n  ]\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"SILOS\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        // columns={columns}\r\n        detailPanel={(rowData) => {\r\n          return <Chart />;\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}  editable={{\r\n          onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n          onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\r\n          onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n        }}\r\n        icons={{\r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Export: () => <img src={Export}></img>,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n         \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Outgoing.js",["578"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { outgoing_data } from './Tabledatas';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nexport default function Outgoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(outgoing_data)\r\n    const columns = [{\r\n      title: 'ID', field: 'id',filtering:false,\r\n  },\r\n  {\r\n      title: 'Silos', field: 'silos',\r\n  },\r\n  {\r\n      title: 'Date/Time', field: 'dateTime',filtering:false,\r\n  }, {\r\n      title: 'Operators', field: 'operators',filtering:false,\r\n  },\r\n   {\r\n      title: 'Contract', field: 'contract',\r\n  },\r\n  {\r\n      title: 'Cultivar', field: 'cultivar',filtering:false,\r\n  },\r\n  {\r\n      title: 'Transport', field: 'transport',filtering:false,\r\n  },\r\n  {\r\n      title: 'Driver', field: 'driver',filtering:false,\r\n  },\r\n  {\r\n      title: 'Rego', field: 'rego',filtering:false,\r\n  },\r\n  {\r\n      title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n  },\r\n  {\r\n      title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n  },\r\n  {\r\n      title: 'Amount', field: 'amount',filtering:false,\r\n  },\r\n  {\r\n      title: 'End Point Amount', field: 'endPointAmount',filtering:false,\r\n  },\r\n  {\r\n      title: 'Paddocks', field: 'paddocks',filtering:false,\r\n  },\r\n  {\r\n      title: 'Traits', field: 'traits',filtering:false,\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',filtering:false,\r\n  },\r\n  ]\r\n    const columns_archived = [{\r\n      title: 'ID', field: 'id',filtering:false,\r\n  },\r\n  {\r\n      title: 'Silos', field: 'silos',\r\n  },\r\n  {\r\n      title: 'Date/Time', field: 'dateTime',filtering:false,\r\n  }, {\r\n      title: 'Operators', field: 'operators',filtering:false,\r\n  },\r\n   {\r\n      title: 'Contract', field: 'contract',\r\n  },\r\n  {\r\n      title: 'Cultivar', field: 'cultivar',filtering:false,\r\n  },\r\n  {\r\n      title: 'Transport', field: 'transport',filtering:false,\r\n  },\r\n  {\r\n      title: 'Driver', field: 'driver',filtering:false,\r\n  },\r\n  {\r\n      title: 'Rego', field: 'rego',filtering:false,\r\n  },\r\n  {\r\n      title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n  },\r\n  {\r\n      title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n  },\r\n  {\r\n      title: 'Amount', field: 'amount',filtering:false,\r\n  },\r\n  {\r\n      title: 'End Point Amount', field: 'endPointAmount',filtering:false,\r\n  },\r\n  {\r\n      title: 'Paddocks', field: 'paddocks',filtering:false,\r\n  },\r\n  {\r\n      title: 'Traits', field: 'traits',filtering:false,\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',filtering:false,\r\n  },\r\n  {\r\n      title: 'Archived', field: 'archived',filtering:false,\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"OUTGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,filtering:true,  \r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                  \r\n                  icons={{\r\n                    Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Export: () => <img src={Export}></img>,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Transfer.js",["579"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nimport { transfer_data } from './Tabledatas';\r\nexport default function Transfer() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(transfer_data)\r\n        \r\n        const columns = [{\r\n        title: 'ID', field: 'id'\r\n    },\r\n    {\r\n        title: 'Silos', field: 'silos',\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'dateTime',\r\n    }, {\r\n        title: 'Operators', field: 'operators',\r\n    },\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',\r\n    },\r\n    \r\n    {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    \r\n    {\r\n        title: 'Traits', field: 'traits',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    },\r\n    \r\n    \r\n  ]\r\n    const columns_archived = [{\r\n        title: 'ID', field: 'id'\r\n    },\r\n    {\r\n        title: 'Silos', field: 'silos',\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'dateTime',\r\n    }, {\r\n        title: 'Operators', field: 'operators',\r\n    },\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',\r\n    },\r\n    \r\n    {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    \r\n    {\r\n        title: 'Traits', field: 'traits',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    },\r\n    {\r\n        title: 'Archived', field: 'archived',\r\n    },\r\n    \r\n  ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"TRANSFER\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                 \r\n                  icons={{\r\n                    Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Export: () => <img src={Export}></img>,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/EquipmentReport.js",["580","581","582"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { equipmentreport_data } from './ReportTableData';\nimport { Grid } from '@mui/material';\nimport Export from './export.png';\nfunction EquipmentReport() {\n  const [data, setData] = React.useState(equipmentreport_data);\n  const [selected, toggleselected] = React.useState(false);\n  let options = null;\n  const type = [\"cat1\", \"cat2\", \"cat3\"];\n  if (selected == true) {\n    options = <div><div class=\"default text\">Equipment</div> <select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\n  }\n  const columns = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: 'Amount', field: 'amount',\n  },\n  {\n    title: 'Type', field: 'type',\n  },\n  {\n    title: 'Operator', field: 'operator',\n  },\n  {\n    title: 'Task Category', field: 'category',\n  },\n  {\n    title: 'Task Description', field: 'description',\n  },\n  ]\n  const columns_all = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: \"Equipment\", field: \"equipment\",\n  },\n  {\n    title: 'Amount', field: 'amount',\n  },\n  {\n    title: 'Type', field: 'type',\n  },\n  {\n    title: 'Operator', field: 'operator',\n  },\n  {\n    title: 'Task Category', field: 'category',\n  },\n  {\n    title: 'Task Description', field: 'description',\n  },\n  ]\n  return (\n    <div>\n      <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={2}>\n          <br />\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\n            <option value=\"\" >Fuel Tickets - All</option>\n            <option value={2} >Fuel Ticket</option>\n          </select>\n        </Grid>\n        <Grid item xs={2}>\n          {options}\n        </Grid>\n      </Grid>\n      <MaterialTable title=\"Equipment\"\n        data={data}\n        columns={selected ? columns : columns_all}\n        options={{\n          search: false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default EquipmentReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/PaddockReport.js",["583","584","585","586","587","588","589"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { paddockreport_data } from './ReportTableData';\nimport { Grid } from '@mui/material';\nimport Export from './export.png';\nfunction PaddockReport() {\n    const [data, setData] = React.useState(paddockreport_data)\n    const [field,setfield]=React.useState(\"\");\n    const [attribute,setattribute]=React.useState(\"\");\n    let columns=null;\n    const handleChange = (event) => {\n      setfield(event.target.value);\n    };\n    const columns_spray = [{\n      title: 'Date', field: 'date',\n    },\n    {\n        title: 'Status', field: 'status',\n      },\n      {\n        title: \"Contract\", field: \"contract\",\n      },\n      {\n        title: 'Description', field: 'description',\n      },\n      {\n        title: 'Chemicals', field: 'chemicals',\n      },\n      {\n        title: 'Completed', field: 'completed',\n      },\n      ]\n      const columns_spreading = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: 'Status', field: 'status',\n      },\n      {\n        title: \"Contract\", field: \"contract\",\n      },\n      {\n        title: 'Description', field: 'description',\n      },\n      {\n        title: 'Fertilisers', field: 'fertilisers',\n      },\n      {\n        title: 'Completed', field: 'completed',\n      },\n      ]\n      const columns_maintainance = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: 'Status', field: 'status',\n      },\n      {\n        title: \"Contract\", field: \"contract\",\n      },\n      {\n        title: 'Description', field: 'description',\n      },\n      {\n        title: 'Category', field: 'category',\n      },\n      {\n        title: 'Completed', field: 'completed',\n      },\n      ]\n      const columns_harvest = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: 'Status', field: 'status',\n      },\n      {\n        title: \"Contract\", field: \"contract\",\n      },\n      {\n        title: 'Description', field: 'description',\n      },\n      {\n        title: 'Completed', field: 'completed',\n      },\n      ]\n      if(attribute==\"\"){\n        columns=columns_spray\n      }\n      else if(attribute==\"3\" || attribute==\"2\"){\n        columns=columns_spreading\n      }\n      else if(attribute==\"4\"){\n        columns=columns_maintainance\n      }\n      else{\n        columns=columns_harvest\n      }\n    return (\n        <div>\n           <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n           <Grid item xs={2}>\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={(e)=>setattribute(e.target.value)}>\n            <option value=\"\" >Spray Logs</option>\n            <option value={2} >Spreading</option>\n            <option value={3} >Planting</option>\n            <option value={4} >Maintenance</option>\n            <option value={5}>Harvest</option>\n          </select>\n        </Grid>\n        <Grid item xs={2}>\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\n            <option value=\"\" >abc</option>\n            <option value={2} >pqr</option>\n          </select>\n        </Grid>\n        <Grid item xs={2}>\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\n            <option value=\"\" >xyz</option>\n            <option value={2} >wxy</option>\n          </select>\n        </Grid>\n        </Grid>\n      <MaterialTable title=\"Paddocks\"\n        data={data}\n        columns={columns}\n        options={{\n          search:false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n        }}\n      />\n    </div>\n    )\n}\n\nexport default PaddockReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/GrainReport.js",["590","591"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { grainreport_data } from './ReportTableData';\nimport Export from './export.png';\nfunction GrainReport() {\n    const [data, setData] = React.useState(grainreport_data)\n    const columns = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: \"Category\", field: \"category\",\n      },\n      {\n        title: 'Cultivar', field: 'cultivar',\n      },\n      {\n        title: 'Amount', field: 'amount',\n      },\n      {\n        title: 'Operators', field: 'operators',\n      },\n      ]\n    return (\n        <div>\n      <MaterialTable title=\"Grain\"\n        data={data}\n        columns={columns}\n        options={{\n          search:false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n        }}\n      />\n    </div>\n    )\n}\n\nexport default GrainReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FuelReport.js",["592","593"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { fuelreport_data } from './ReportTableData';\nimport Export from './export.png';\nfunction FuelReport() {\n    const [data, setData] = React.useState(fuelreport_data)\n    const columns = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: \"Category\", field: \"category\",\n      },\n      {\n        title: 'Fuel', field: 'fuel',\n      },\n      {\n        title: 'Amount', field: 'amount',\n      },\n      {\n        title: 'Operator', field: 'operator',\n      },\n      ]\n    return (\n        <div>\n      <MaterialTable title=\"Fuel\"\n        data={data}\n        columns={columns}\n        options={{\n          search:false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n        }}\n      />\n    </div>\n    )\n}\n\nexport default FuelReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FertiliserReport.js",["594","595"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { fertiliserreport_data } from './ReportTableData';\nimport Export from './export.png';\nfunction FertiliserReport() {\n    const [data, setData] = React.useState(fertiliserreport_data)\n    const columns = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: \"Category\", field: \"category\",\n      },\n      {\n        title: 'Fertilisers', field: 'fertilisers',\n      },\n      {\n        title: 'Operator', field: 'operator',\n      },\n      ]\n    return (\n        <div>\n      <MaterialTable title=\"Fertiliser\"\n        data={data}\n        columns={columns}\n        options={{\n            search:false,\n            exportButton: true,\n          }}\n          icons={{\n            Export: () => <img src={Export}></img>,\n          }}\n      />\n    </div>\n    )\n}\n\nexport default FertiliserReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/FarmReport.js",["596","597","598","599","600","601","602","603","604","605","606","607","608"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { farmreport_data } from './ReportTableData';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Grid } from '@mui/material';\nimport { Dropdown } from 'semantic-ui-react'\nimport Export from './export.png';\nfunction FarmReport() {\n  const [data, setData] = React.useState(farmreport_data);\n  const [selected, toggleselected] = React.useState(false);\n  const [activity, setactivity] = React.useState(false);\n  let farms = null;\n  let column=null;\n  const type = [\"fa1\", \"fa2\", \"fa3\"];\n  const [field, setfield] = React.useState(\"\");\n  const options = [\n    { key: 'Approved', text: 'Approved', value: 'Approved' },\n    { key: 'Not Approved', text: 'Not Approved', value: 'Not Approved' },\n    { key: 'Charged Out', text: 'Charged Out', value: 'Charged Out' },\n    { key: 'Not Charged Out', text: 'Not Charged Out', value: 'Not Charged Out' },]\n  const handleChange = (event) => {\n    setfield(event.target.value);\n  };\n  const columns_all = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: 'Status', field: 'status',\n  },\n  {\n    title: \"Contract\", field: \"contract\",\n  },\n  {\n    title: 'Activity', field: 'activity',\n  },\n  {\n    title: 'Description', field: 'description',\n  },\n  {\n    title: \"Farms\", field: \"farms\",\n  },\n  {\n    title: 'Paddocks', field: 'paddocks',\n  },\n  {\n    title: 'Area', field: 'area',\n  },\n  {\n    title: 'Completed', field: 'completed',\n  },\n  ]\n  const columns_all_activity = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: 'Status', field: 'status',\n  },\n  {\n    title: \"Contract\", field: \"contract\",\n  },\n  {\n    title: 'Description', field: 'description',\n  },\n  {\n    title: \"Farms\", field: \"farms\",\n  },\n  {\n    title: 'Paddocks', field: 'paddocks',\n  },\n  {\n    title: 'Area', field: 'area',\n  },\n  {\n    title: 'Completed', field: 'completed',\n  },\n  ]\n  const columns = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: 'Status', field: 'status',\n  },\n  {\n    title: \"Contract\", field: \"contract\",\n  },\n  {\n    title: 'Activity', field: 'activity',\n  },\n  {\n    title: 'Description', field: 'description',\n  },\n  {\n    title: 'Paddocks', field: 'paddocks',\n  },\n  {\n    title: 'Area', field: 'area',\n  },\n  {\n    title: 'Completed', field: 'completed',\n  },\n  ]\n  const columns_activity = [{\n    title: 'Date', field: 'date',\n  },\n  {\n    title: 'Status', field: 'status',\n  },\n  {\n    title: \"Contract\", field: \"contract\",\n  },\n  {\n    title: 'Description', field: 'description',\n  },\n  {\n    title: 'Paddocks', field: 'paddocks',\n  },\n  {\n    title: 'Area', field: 'area',\n  },\n  {\n    title: 'Completed', field: 'completed',\n  },\n  ]\n  if (selected == true) {\n    farms = <div><select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\n  }\n  if (selected == false && activity == false){\n      column=columns_all\n  }\n  else if(selected==false && activity==true){\n    column=columns_all_activity\n  }\n  else if(selected == true && activity == false){\n    column=columns\n  }\n  else if(selected == true && activity == true){\n    column=columns_activity\n  }\n  return (\n    <div>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 2, sm: 3, md: 4 }}>\n        <Grid item xs={2}>\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\n            <option value=\"\" >Activities - All Farms</option>\n            <option value={2} >Activities - Selective</option>\n          </select>\n        </Grid>\n        <Grid item xs={2}>\n          {farms}\n        </Grid>\n        <Grid item xs={2}>\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={(event)=>{if (event.target.value==\"\") {\n            setactivity(false)\n          }\n          else{\n            setactivity(true)\n          }}}>\n            <option value=\"\" >All</option>\n            <option value={1} >Spray Logs</option>\n            <option value={2} >Spreading</option>\n            <option value={3} >Planting</option>\n            <option value={4} >Maintenance</option>\n            <option value={5}>Harvest</option>\n          </select>\n        </Grid>\n        <Grid item xs={4}>\n        <Dropdown multiple selection show options={options}/>\n        </Grid>\n        </Grid>\n        <br/><br/><br/><br/>\n      <MaterialTable title=\"Farms\"\n        data={data}\n        columns={column}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve()\n              }, 1000)\n            }),\n        }}\n        options={{\n          actionsColumnIndex: -1,\n          search: false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n          Edit: () => <CreateIcon color=\"action\" />,\n          Delete: () => <DeleteIcon color=\"action\" />\n        }}\n      />\n    </div>\n  )\n}\n\nexport default FarmReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/ChemicalReport.js",["609","610"],"import React from 'react'\nimport MaterialTable from 'material-table';\nimport { chemicalreport_data } from './ReportTableData';\nimport Export from './export.png';\nfunction ChemicalReport() {\n    const [data, setData] = React.useState(chemicalreport_data)\n    const columns = [{\n        title: 'Date', field: 'date',\n      },\n      {\n        title: \"Category\", field: \"category\",\n      },\n      {\n        title: 'Chemicals', field: 'chemicals',\n      },\n      {\n        title: 'Operator', field: 'operator',\n      },\n      ]\n    return (\n        <div>\n      <MaterialTable title=\"Chemicals\"\n        data={data}\n        columns={columns}\n        options={{\n          search:false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n        }}\n      />\n    </div>\n    )\n}\n\nexport default ChemicalReport\n","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/WaterStorageTable.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Tabledatas.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Outgoing.js",["611"],"import React from 'react'\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../../export.png';\nimport { outgoing_data } from '../../../../../Data/InventoryWaterData';\nimport { Checkbox } from \"semantic-ui-react\";\nimport './archived.css';\nexport default function Outgoing() {\n  const [selected, toggleselected] = React.useState(false);\n  const [data, setData] = React.useState(outgoing_data)\n  const columns = [{\n    \n    title: 'Water Storage', field: 'water_storage'\n  },\n  {\n    title: 'Job Type', field: 'type'\n  },\n  {\n    title: 'Job Description', field: 'description',\n  },\n  {\n    title: 'Date/Time', field: 'date',\n  }, {\n    title: 'Operator', field: 'operator',\n  },\n  {\n    title: 'Amount', field: 'amount',\n  },\n  {\n    title: 'Notes', field: 'notes',\n  }]\n  const columns_archived = [{\n    title: 'Job Type', field: 'type'\n  },\n  {\n    title: 'Job Description', field: 'description',\n  },\n  {\n    title: 'Date', field: 'date',\n  }, {\n    title: 'Operator', field: 'operator',\n  },\n  {\n    title: 'Chemicals', field: 'chemicals',\n  },\n  {\n    title: 'Notes', field: 'notes',\n  },\n  {\n    title: \"Archived\",\n    field: \"archived\",\n  },]\n  return (\n    <div>\n      <MaterialTable title=\"OUTGOING\"\n        data={data}\n        columns={selected ? columns_archived : columns}\n        editable={{\n          onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve()\n              }, 1000)\n            }),\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\n                <Checkbox\n                  toggle\n                  onClick={() => toggleselected(!selected)}\n                  checked={selected}\n                  label=\"Show Archived\"\n                />\n              </div>\n            </div>\n          ),\n        }}\n        options={{\n          actionsColumnIndex: -1,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          exportButton: true,\n        }}\n        icons={{\n          Export: () => <img src={Export}></img>,\n          \n            Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n            Edit: () => <CreateIcon color=\"action\" />,\n            Delete: () => <DeleteIcon color=\"action\" />\n           \n         \n        }}\n      />\n    </div>\n  )\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/StockTake.js",["612"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport { stocktake_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function StockTake() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(stocktake_data)\r\n    const columns = [\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Reported', field: 'report',\r\n    }]\r\n    const columns_archived = [\r\n      {\r\n          title: 'Date', field: 'date',\r\n      }, {\r\n          title: 'Operator', field: 'operator',\r\n      },\r\n      {\r\n          title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n          title: 'Reported', field: 'report',\r\n      },\r\n      {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STOCKTAKE\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Export: () => <img src={Export}></img>,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                 \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Ingoing.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/StockTake.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Outgoing.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Fertilisers.js",["613"],"import React from 'react'\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { fertiliser_data } from './Tabledatas';\nimport { Checkbox } from \"semantic-ui-react\";\nimport './archived.css';\nexport default function Fertilisers() {\n    const [selected, toggleselected] = React.useState(false);\n    const [data, setData] = React.useState(fertiliser_data)\n    const columns = [{\n        title: 'Name', field: 'name'\n    },\n    {\n        title: 'Form', field: 'form',\n    },\n    {\n        title: 'Nutrients', field: 'nutrients',\n    }, {\n        title: 'Amount', field: 'amount',\n    }]\n    const columns_archived = [{\n        title: 'Name', field: 'name'\n    },\n    {\n        title: 'Form', field: 'form',\n    },\n    {\n        title: 'Nutrients', field: 'nutrients',\n    }, {\n        title: 'Amount', field: 'amount',\n    },\n    {\n        title: \"Archived\",\n        field: \"archived\",\n      },]\n    return (\n        <div>\n            <MaterialTable title=\"FERTILISERS\"\n                data={data}\n                columns={selected ? columns_archived : columns}\n\n                options={{\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                }}\n                components={{\n                    Toolbar: props => (\n                      <div>\n                        <MTableToolbar {...props} />\n                        <div className=\"toggle-switch\">\n                          <Checkbox\n                            toggle\n                            onClick={() => toggleselected(!selected)}\n                            checked={selected}\n                            label=\"Show Archived Fertilisers\"\n                          />\n                        </div>\n                      </div>\n                    ),\n                  }}\n            />\n        </div>\n    )\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Tabledatas.js",["614"],"import { Progress } from \"semantic-ui-react\";\r\n\r\nexport  const silos_data = [\r\n    { farm: 'abc', silo: 'we', cultivar: 'wq', capacity:\"50\",contents:\"60\",status:\"asd\"},\r\n    { farm: 'abc', silo: 'we', cultivar: 'wq', capacity:\"50\",contents:\"44\",status:\"asd\"},\r\n];\r\n\r\nexport const outgoing_data = [\r\n    {id:\"abc\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n    tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"abc\"},\r\n\r\n    {id:\"abc\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n    tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"abc\"},\r\n];\r\n\r\nexport const ingoing_data = [\r\n    {id:\"asd\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n        tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"yes\"},\r\n        {id:\"asd\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n        tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"no\"},\r\n];\r\n\r\nexport const contracts_data = [\r\n    {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",\r\n    quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"},\r\n    {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",\r\n    quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"},\r\n];\r\nexport const total_data = [\r\n    {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n      {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n      {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n];\r\nexport const transfer_data = [\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"yes\", },\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"no\", },\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"yes\", },\r\n];\r\nexport const bar_data={\r\n    labels:['Red','Blue','Yellow','Green','Purple','Orange'],\r\n    datasets: [{\r\n     label: 'new farm abc',\r\n     data: [4, 9, 3, 5, 2, 3],  \r\n     backgroundColor: [\r\n      'rgba(255, 99, 132, 0.2)',\r\n      'rgba(54, 162, 235, 0.2)',\r\n      'rgba(255, 206, 86, 0.2)',\r\n      'rgba(75, 192, 192, 0.2)',\r\n      'rgba(153, 102, 255, 0.2)',\r\n      'rgba(255, 159, 64, 0.2)'\r\n  ],\r\n  borderColor: [\r\n    'rgba(255, 99, 132, 1)',\r\n    'rgba(54, 162, 235, 1)',\r\n    'rgba(255, 206, 86, 1)',\r\n    'rgba(75, 192, 192, 1)',\r\n    'rgba(153, 102, 255, 1)',\r\n    'rgba(255, 159, 64, 1)'\r\n],\r\nborderWidth: 1 }]\r\n  } ;","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Chart.js",["615"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport {Grid} from '@material-ui/core'\r\n\r\n\r\nimport BarChart from './BarChart';\r\n\r\n\r\n\r\nexport default function Chart() {\r\n\r\n   \r\n\r\n\r\n    const [data, setData] = React.useState([\r\n        {id:1,date:\"30/11/2021\",status:\"TOTAL\",amount:\"20\"}\r\n    ])\r\n    const columns = [{\r\n        title: 'ID', field: 'id',\r\n    },\r\n    {\r\n        title: 'Date', field: 'date',\r\n    },\r\n    {\r\n        title: 'Status', field: 'status',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: 'Traits', field: 'traits',\r\n    },\r\n    \r\n    \r\n    \r\n  ]\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n            <Grid item xs={4}>\r\n            <BarChart />\r\n            </Grid>\r\n\r\n            <Grid item xs={8}>\r\n            <MaterialTable title=\"\"\r\n                data={data}\r\n                columns={columns}\r\n                \r\n                options={{\r\n                    title:false,\r\n                    actionsColumnIndex: -1,\r\n                    paging: false,\r\n                   \r\n                    search:false,\r\n                    \r\n                }}\r\n                icons={{\r\n                   // Export: () => <img src={Export}></img>,\r\n                    // Edit: () => <CreateIcon color=\"action\" />,\r\n                    // Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","/Users/alen/Documents/GFS_Trace/src/Data/WaterStorageData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FertilizerInventory/Tables/Tabledatas.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/BarChart.js",["616"],"\r\nimport React from 'react'\r\nimport {Bar} from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto'\r\nimport {CategoryScale} from 'chart.js';\r\nimport { bar_data } from './Tabledatas';\r\n Chart.register(CategoryScale)\r\n\r\n\r\n\r\nexport default function BarChart() {\r\n  const [data, setData] = React.useState(bar_data);\r\n  const options={\r\n    title:{\r\n      display:true,\r\n      text:'Bar Chart'\r\n    },\r\n    \r\n    scales:{\r\n      yAxes:[\r\n        {\r\n          ticks:{\r\n            min:0,\r\n            max:6,\r\n            stepSize:1\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n \r\n  \r\n  return (\r\n    <div >\r\n     <Bar data={data}\r\n     height={300}\r\n     width={600}\r\n     options={options}\r\n     \r\n     />\r\n     \r\n      \r\n    </div>\r\n  )\r\n}\r\n","/Users/alen/Documents/GFS_Trace/src/Data/InventoryChemicalData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/InventoryWaterData.js",["617","618","619","620"],"export const storages_data=[\n    {\n        farm:'abcdef',name:'asdwef',capacity:'5000L',contents:'Empty',\n        farm:'farm2',name:'d12ad',capacity:'50000L',contents:'Empty'\n    }\n];\n\nexport const ingoing_data=[];\n\nexport const outgoing_data=[];","/Users/alen/Documents/GFS_Trace/src/components/pages/CustomReport/Tables/ReportTableData.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Outgoing.js",["621"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Export: () => <img src={Export}></img>,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n         \r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Ingoing.js",["622"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport { ingoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Supplier', field: 'supplier'\r\n    },\r\n    {\r\n        title: 'Docket No.', field: 'docket',\r\n    },\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Supplier', field: 'supplier'\r\n  },\r\n  {\r\n      title: 'Docket No.', field: 'docket',\r\n  },\r\n  {\r\n      title: 'Date', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n               \r\n                icons={{\r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Export: () => <img src={Export}></img>,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                 \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/InventoryChemical/Tables/Chemicals.js",["623","624"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { chemicals_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport './archived.css';\r\nexport default function Chemicals() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(chemicals_data)\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    }]\r\n    const columns_archived = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CHEMICALS\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n\r\n                options={{\r\n                    \r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    filtering: true,\r\n                    actionsColumnIndex:-1\r\n                  }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived Chemicals\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                  editable={{\r\n                    onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                    onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\r\n                    onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n                  }}\r\n                  icons={{\r\n                    Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Export: () => <img src={Export}></img>,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                   \r\n                  }}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Ingoing.js",["625"],"import React from 'react'\nimport MaterialTable,{ MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport Export from '../../../export.png';\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\nimport { Checkbox } from \"semantic-ui-react\";\nimport './archived.css';\nexport default function Ingoing() {\n  const [selected, toggleselected] = React.useState(false);\n    const [data, setData] = React.useState(ingoing_data)\n    const columns = [{\n        title: 'Water Storage', field: 'water_storage'\n    },\n    {\n        title: 'Date/Time', field: 'date',\n    }, {\n        title: 'Operator', field: 'operator',\n    },\n    {\n        title: 'Amount', field: 'amount',\n    },\n    {\n        title: 'Notes', field: 'notes',\n    }]\n    const columns_archived = [{\n      title: 'Water Storage', field: 'water_storage'\n  },\n  {\n      title: 'Date/Time', field: 'date',\n  }, {\n      title: 'Operator', field: 'operator',\n  },\n  {\n      title: 'Amount', field: 'amount',\n  },\n  {\n    title: 'Notes', field: 'notes',\n},\n \n  {\n    title: \"Archived\",\n    field: \"archived\",\n  },]\n    return (\n        <div>\n            <MaterialTable title=\"INGOING\"\n                data={data}\n                columns={selected ? columns_archived : columns}\n                editable={{\n                  onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          const dataUpdate = [...data];\n                          const index = oldData.tableData.id;\n                          dataUpdate[index] = newData;\n                          setData([...dataUpdate]);\n          \n                          resolve();\n                        }, 1000)\n                      }),\n                    onRowDelete: oldData =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          const dataDelete = [...data];\n                          const index = oldData.tableData.id;\n                          dataDelete.splice(index, 1);\n                          setData([...dataDelete]);\n          \n                          resolve()\n                        }, 1000)\n                      }),\n                  }}\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                    exportButton: true,\n                }}\n                components={{\n                  Toolbar: props => (\n                    <div>\n                      <MTableToolbar {...props} />\n                      <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\n                        <Checkbox\n                          toggle\n                          onClick={() => toggleselected(!selected)}\n                          checked={selected}\n                          label=\"Show Archived\"\n                        />\n                      </div>\n                    </div>\n                  ),\n                }}\n                icons={{\n                    Export: () => <img src={Export}></img>,\n                    \n                      Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                      Edit: () => <CreateIcon color=\"action\" />,\n                      Delete: () => <DeleteIcon color=\"action\" />\n                     \n                   \n                  }}\n            />\n        </div>\n    )\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Storages.js",["626"],"import React from 'react'\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport Export from '../../../export.png';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { storages_data } from '../../../../../Data/InventoryWaterData'\n\nexport default function Storages() {\n    const [data, setData] = React.useState(storages_data)\n    const columns = [{\n        title: 'Farms', field: 'farm'\n    },\n    {\n        title: 'Name', field: 'name',\n    },\n    {\n        title: 'Capacity', field: 'capacity',\n    }, {\n        title: 'Contents', field: 'contents',\n    }]\n    \n    return (\n        <div>\n            <MaterialTable title=\"STORAGES\"\n                data={data}\n                columns={ columns}\n                editable={{\n                    onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\n                      onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                          setTimeout(() => {\n                            const dataUpdate = [...data];\n                            const index = oldData.tableData.id;\n                            dataUpdate[index] = newData;\n                            setData([...dataUpdate]);\n            \n                            resolve();\n                          }, 1000)\n                        }),\n                      onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                          setTimeout(() => {\n                            const dataDelete = [...data];\n                            const index = oldData.tableData.id;\n                            dataDelete.splice(index, 1);\n                            setData([...dataDelete]);\n            \n                            resolve()\n                          }, 1000)\n                        }),\n                    }}\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                    exportButton: true,\n                }}\n                components={{\n                    Toolbar: props => (\n                      <div>\n                        <MTableToolbar {...props} />\n                      </div>\n                    ),\n                  }}\n                  icons={{\n                    Export: () => <img src={Export}></img>,\n                    \n                      Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n                      Edit: () => <CreateIcon color=\"action\" />,\n                      Delete: () => <DeleteIcon color=\"action\" />\n                     \n                   \n                  }}\n            />\n        </div>\n    )\n}","/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/FueltankTable.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/SiloTable.js",[],"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Farms/PaddockTable.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/FuelTankData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/SiloData.js",[],"/Users/alen/Documents/GFS_Trace/src/Data/PaddockData.js",[],{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","replacedBy":"630"},{"ruleId":"631","severity":1,"message":"632","line":1,"column":17,"nodeType":"633","messageId":"634","endLine":1,"endColumn":26},{"ruleId":"631","severity":1,"message":"635","line":3,"column":47,"nodeType":"633","messageId":"634","endLine":3,"endColumn":52},{"ruleId":"631","severity":1,"message":"636","line":42,"column":11,"nodeType":"633","messageId":"634","endLine":42,"endColumn":26},{"ruleId":"637","severity":1,"message":"638","line":70,"column":7,"nodeType":"639","messageId":"640","endLine":70,"endColumn":13},{"ruleId":"631","severity":1,"message":"641","line":124,"column":5,"nodeType":"633","messageId":"634","endLine":124,"endColumn":14},{"ruleId":"631","severity":1,"message":"642","line":135,"column":7,"nodeType":"633","messageId":"634","endLine":135,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":143,"column":11,"nodeType":"645","messageId":"640","endLine":143,"endColumn":13},{"ruleId":"643","severity":1,"message":"644","line":156,"column":11,"nodeType":"645","messageId":"640","endLine":156,"endColumn":13},{"ruleId":"631","severity":1,"message":"646","line":2,"column":8,"nodeType":"633","messageId":"634","endLine":2,"endColumn":18},{"ruleId":"631","severity":1,"message":"647","line":3,"column":8,"nodeType":"633","messageId":"634","endLine":3,"endColumn":17},{"ruleId":"631","severity":1,"message":"648","line":4,"column":8,"nodeType":"633","messageId":"634","endLine":4,"endColumn":22},{"ruleId":"631","severity":1,"message":"649","line":5,"column":8,"nodeType":"633","messageId":"634","endLine":5,"endColumn":28},{"ruleId":"631","severity":1,"message":"650","line":6,"column":8,"nodeType":"633","messageId":"634","endLine":6,"endColumn":23},{"ruleId":"631","severity":1,"message":"651","line":7,"column":8,"nodeType":"633","messageId":"634","endLine":7,"endColumn":11},{"ruleId":"631","severity":1,"message":"652","line":13,"column":10,"nodeType":"633","messageId":"634","endLine":13,"endColumn":15},{"ruleId":"631","severity":1,"message":"653","line":13,"column":17,"nodeType":"633","messageId":"634","endLine":13,"endColumn":25},{"ruleId":"631","severity":1,"message":"654","line":2,"column":25,"nodeType":"633","messageId":"634","endLine":2,"endColumn":31},{"ruleId":"631","severity":1,"message":"655","line":3,"column":8,"nodeType":"633","messageId":"634","endLine":3,"endColumn":18},{"ruleId":"631","severity":1,"message":"655","line":3,"column":8,"nodeType":"633","messageId":"634","endLine":3,"endColumn":18},{"ruleId":"631","severity":1,"message":"656","line":14,"column":9,"nodeType":"633","messageId":"634","endLine":14,"endColumn":16},{"ruleId":"631","severity":1,"message":"657","line":1,"column":16,"nodeType":"633","messageId":"634","endLine":1,"endColumn":24},{"ruleId":"631","severity":1,"message":"657","line":1,"column":17,"nodeType":"633","messageId":"634","endLine":1,"endColumn":25},{"ruleId":"631","severity":1,"message":"658","line":3,"column":10,"nodeType":"633","messageId":"634","endLine":3,"endColumn":18},{"ruleId":"631","severity":1,"message":"657","line":1,"column":16,"nodeType":"633","messageId":"634","endLine":1,"endColumn":24},{"ruleId":"631","severity":1,"message":"657","line":1,"column":16,"nodeType":"633","messageId":"634","endLine":1,"endColumn":24},{"ruleId":"631","severity":1,"message":"657","line":1,"column":16,"nodeType":"633","messageId":"634","endLine":1,"endColumn":24},{"ruleId":"659","severity":1,"message":"660","line":72,"column":6,"nodeType":"661","endLine":72,"endColumn":8,"suggestions":"662"},{"ruleId":"631","severity":1,"message":"663","line":1,"column":8,"nodeType":"633","messageId":"634","endLine":1,"endColumn":13},{"ruleId":"631","severity":1,"message":"664","line":24,"column":7,"nodeType":"633","messageId":"634","endLine":24,"endColumn":16},{"ruleId":"631","severity":1,"message":"665","line":2,"column":55,"nodeType":"633","messageId":"634","endLine":2,"endColumn":71},{"ruleId":"631","severity":1,"message":"652","line":28,"column":24,"nodeType":"633","messageId":"634","endLine":28,"endColumn":29},{"ruleId":"631","severity":1,"message":"652","line":7,"column":26,"nodeType":"633","messageId":"634","endLine":7,"endColumn":31},{"ruleId":"631","severity":1,"message":"666","line":7,"column":33,"nodeType":"633","messageId":"634","endLine":7,"endColumn":41},{"ruleId":"631","severity":1,"message":"667","line":19,"column":9,"nodeType":"633","messageId":"634","endLine":19,"endColumn":13},{"ruleId":"631","severity":1,"message":"668","line":20,"column":11,"nodeType":"633","messageId":"634","endLine":20,"endColumn":14},{"ruleId":"643","severity":1,"message":"669","line":37,"column":28,"nodeType":"645","messageId":"640","endLine":37,"endColumn":30},{"ruleId":"643","severity":1,"message":"644","line":57,"column":18,"nodeType":"645","messageId":"640","endLine":57,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":79,"column":28,"nodeType":"645","messageId":"640","endLine":79,"endColumn":30},{"ruleId":"643","severity":1,"message":"669","line":83,"column":29,"nodeType":"645","messageId":"640","endLine":83,"endColumn":31},{"ruleId":"643","severity":1,"message":"644","line":90,"column":32,"nodeType":"645","messageId":"640","endLine":90,"endColumn":34},{"ruleId":"643","severity":1,"message":"644","line":90,"column":46,"nodeType":"645","messageId":"640","endLine":90,"endColumn":48},{"ruleId":"631","severity":1,"message":"652","line":102,"column":26,"nodeType":"633","messageId":"634","endLine":102,"endColumn":31},{"ruleId":"631","severity":1,"message":"666","line":102,"column":33,"nodeType":"633","messageId":"634","endLine":102,"endColumn":41},{"ruleId":"670","severity":1,"message":"671","line":9,"column":7,"nodeType":"672","endLine":9,"endColumn":76},{"ruleId":"673","severity":1,"message":"674","line":45,"column":6,"nodeType":"672","endLine":45,"endColumn":125},{"ruleId":"673","severity":1,"message":"674","line":47,"column":7,"nodeType":"672","endLine":47,"endColumn":126},{"ruleId":"673","severity":1,"message":"674","line":49,"column":7,"nodeType":"672","endLine":49,"endColumn":126},{"ruleId":"631","severity":1,"message":"675","line":5,"column":10,"nodeType":"633","messageId":"634","endLine":5,"endColumn":26},{"ruleId":"631","severity":1,"message":"676","line":10,"column":3,"nodeType":"633","messageId":"634","endLine":10,"endColumn":14},{"ruleId":"631","severity":1,"message":"677","line":11,"column":3,"nodeType":"633","messageId":"634","endLine":11,"endColumn":16},{"ruleId":"631","severity":1,"message":"678","line":18,"column":10,"nodeType":"633","messageId":"634","endLine":18,"endColumn":22},{"ruleId":"631","severity":1,"message":"679","line":24,"column":10,"nodeType":"633","messageId":"634","endLine":24,"endColumn":38},{"ruleId":"631","severity":1,"message":"680","line":15,"column":14,"nodeType":"633","messageId":"634","endLine":15,"endColumn":21},{"ruleId":"670","severity":1,"message":"671","line":127,"column":25,"nodeType":"672","endLine":127,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":118,"column":35,"nodeType":"672","endLine":118,"endColumn":53},{"ruleId":"631","severity":1,"message":"681","line":8,"column":10,"nodeType":"633","messageId":"634","endLine":8,"endColumn":18},{"ruleId":"631","severity":1,"message":"682","line":8,"column":20,"nodeType":"633","messageId":"634","endLine":8,"endColumn":26},{"ruleId":"670","severity":1,"message":"671","line":131,"column":35,"nodeType":"672","endLine":131,"endColumn":53},{"ruleId":"670","severity":1,"message":"671","line":135,"column":35,"nodeType":"672","endLine":135,"endColumn":53},{"ruleId":"631","severity":1,"message":"683","line":8,"column":10,"nodeType":"633","messageId":"634","endLine":8,"endColumn":27},{"ruleId":"670","severity":1,"message":"671","line":128,"column":35,"nodeType":"672","endLine":128,"endColumn":53},{"ruleId":"670","severity":1,"message":"671","line":113,"column":33,"nodeType":"672","endLine":113,"endColumn":51},{"ruleId":"631","severity":1,"message":"684","line":51,"column":9,"nodeType":"633","messageId":"634","endLine":51,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":148,"column":35,"nodeType":"672","endLine":148,"endColumn":53},{"ruleId":"631","severity":1,"message":"683","line":9,"column":10,"nodeType":"633","messageId":"634","endLine":9,"endColumn":27},{"ruleId":"670","severity":1,"message":"671","line":165,"column":35,"nodeType":"672","endLine":165,"endColumn":53},{"ruleId":"631","severity":1,"message":"680","line":17,"column":14,"nodeType":"633","messageId":"634","endLine":17,"endColumn":21},{"ruleId":"670","severity":1,"message":"671","line":130,"column":25,"nodeType":"672","endLine":130,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":171,"column":35,"nodeType":"672","endLine":171,"endColumn":53},{"ruleId":"670","severity":1,"message":"671","line":127,"column":35,"nodeType":"672","endLine":127,"endColumn":53},{"ruleId":"631","severity":1,"message":"680","line":7,"column":16,"nodeType":"633","messageId":"634","endLine":7,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":11,"column":16,"nodeType":"645","messageId":"640","endLine":11,"endColumn":18},{"ruleId":"670","severity":1,"message":"671","line":77,"column":25,"nodeType":"672","endLine":77,"endColumn":43},{"ruleId":"631","severity":1,"message":"680","line":7,"column":18,"nodeType":"633","messageId":"634","endLine":7,"endColumn":25},{"ruleId":"631","severity":1,"message":"685","line":8,"column":12,"nodeType":"633","messageId":"634","endLine":8,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":87,"column":19,"nodeType":"645","messageId":"640","endLine":87,"endColumn":21},{"ruleId":"643","severity":1,"message":"644","line":90,"column":24,"nodeType":"645","messageId":"640","endLine":90,"endColumn":26},{"ruleId":"643","severity":1,"message":"644","line":90,"column":42,"nodeType":"645","messageId":"640","endLine":90,"endColumn":44},{"ruleId":"643","severity":1,"message":"644","line":93,"column":24,"nodeType":"645","messageId":"640","endLine":93,"endColumn":26},{"ruleId":"670","severity":1,"message":"671","line":132,"column":25,"nodeType":"672","endLine":132,"endColumn":43},{"ruleId":"631","severity":1,"message":"680","line":6,"column":18,"nodeType":"633","messageId":"634","endLine":6,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":33,"column":25,"nodeType":"672","endLine":33,"endColumn":43},{"ruleId":"631","severity":1,"message":"680","line":6,"column":18,"nodeType":"633","messageId":"634","endLine":6,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":33,"column":25,"nodeType":"672","endLine":33,"endColumn":43},{"ruleId":"631","severity":1,"message":"680","line":6,"column":18,"nodeType":"633","messageId":"634","endLine":6,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":30,"column":27,"nodeType":"672","endLine":30,"endColumn":45},{"ruleId":"631","severity":1,"message":"685","line":16,"column":10,"nodeType":"633","messageId":"634","endLine":16,"endColumn":15},{"ruleId":"631","severity":1,"message":"686","line":22,"column":9,"nodeType":"633","messageId":"634","endLine":22,"endColumn":21},{"ruleId":"643","severity":1,"message":"644","line":125,"column":16,"nodeType":"645","messageId":"640","endLine":125,"endColumn":18},{"ruleId":"643","severity":1,"message":"644","line":128,"column":16,"nodeType":"645","messageId":"640","endLine":128,"endColumn":18},{"ruleId":"643","severity":1,"message":"644","line":128,"column":37,"nodeType":"645","messageId":"640","endLine":128,"endColumn":39},{"ruleId":"643","severity":1,"message":"644","line":131,"column":19,"nodeType":"645","messageId":"640","endLine":131,"endColumn":21},{"ruleId":"643","severity":1,"message":"644","line":131,"column":38,"nodeType":"645","messageId":"640","endLine":131,"endColumn":40},{"ruleId":"643","severity":1,"message":"644","line":134,"column":20,"nodeType":"645","messageId":"640","endLine":134,"endColumn":22},{"ruleId":"643","severity":1,"message":"644","line":134,"column":40,"nodeType":"645","messageId":"640","endLine":134,"endColumn":42},{"ruleId":"643","severity":1,"message":"644","line":137,"column":20,"nodeType":"645","messageId":"640","endLine":137,"endColumn":22},{"ruleId":"643","severity":1,"message":"644","line":137,"column":40,"nodeType":"645","messageId":"640","endLine":137,"endColumn":42},{"ruleId":"643","severity":1,"message":"644","line":153,"column":104,"nodeType":"645","messageId":"640","endLine":153,"endColumn":106},{"ruleId":"670","severity":1,"message":"671","line":205,"column":25,"nodeType":"672","endLine":205,"endColumn":43},{"ruleId":"631","severity":1,"message":"680","line":6,"column":18,"nodeType":"633","messageId":"634","endLine":6,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":30,"column":25,"nodeType":"672","endLine":30,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":109,"column":25,"nodeType":"672","endLine":109,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":96,"column":33,"nodeType":"672","endLine":96,"endColumn":51},{"ruleId":"631","severity":1,"message":"680","line":8,"column":18,"nodeType":"633","messageId":"634","endLine":8,"endColumn":25},{"ruleId":"631","severity":1,"message":"687","line":1,"column":10,"nodeType":"633","messageId":"634","endLine":1,"endColumn":18},{"ruleId":"631","severity":1,"message":"680","line":15,"column":18,"nodeType":"633","messageId":"634","endLine":15,"endColumn":25},{"ruleId":"631","severity":1,"message":"680","line":12,"column":16,"nodeType":"633","messageId":"634","endLine":12,"endColumn":23},{"ruleId":"637","severity":1,"message":"688","line":4,"column":9,"nodeType":"639","messageId":"640","endLine":4,"endColumn":13},{"ruleId":"637","severity":1,"message":"689","line":4,"column":22,"nodeType":"639","messageId":"640","endLine":4,"endColumn":26},{"ruleId":"637","severity":1,"message":"690","line":4,"column":35,"nodeType":"639","messageId":"640","endLine":4,"endColumn":43},{"ruleId":"637","severity":1,"message":"691","line":4,"column":53,"nodeType":"639","messageId":"640","endLine":4,"endColumn":61},{"ruleId":"670","severity":1,"message":"671","line":107,"column":25,"nodeType":"672","endLine":107,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":107,"column":33,"nodeType":"672","endLine":107,"endColumn":51},{"ruleId":"631","severity":1,"message":"680","line":12,"column":18,"nodeType":"633","messageId":"634","endLine":12,"endColumn":25},{"ruleId":"670","severity":1,"message":"671","line":77,"column":35,"nodeType":"672","endLine":77,"endColumn":53},{"ruleId":"670","severity":1,"message":"671","line":101,"column":35,"nodeType":"672","endLine":101,"endColumn":53},{"ruleId":"670","severity":1,"message":"671","line":69,"column":35,"nodeType":"672","endLine":69,"endColumn":53},"no-native-reassign",["692"],"no-negated-in-lhs",["693"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'render'.","ObjectExpression","unexpected","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Typography' is defined but never used.","'TextField' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'DateRangePicker' is defined but never used.","'Box' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Column' is defined but never used.","'farmsimple' is defined but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'FaFilter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lsType'. Either include it or remove the dependency array.","ArrayExpression",["694"],"'React' is defined but never used.","'useStyles' is assigned a value but never used.","'MobileDatePicker' is defined but never used.","'onChange' is assigned a value but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'MdSpaceDashboard' is defined but never used.","'FaUserClock' is defined but never used.","'FaCalendarAlt' is defined but never used.","'BsPeopleFill' is defined but never used.","'BsFillCloudLightningRainFill' is defined but never used.","'setData' is assigned a value but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'DisabledByDefault' is defined but never used.","'columns_archived' is assigned a value but never used.","'field' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Progress' is defined but never used.","Duplicate key 'farm'.","Duplicate key 'name'.","Duplicate key 'capacity'.","Duplicate key 'contents'.","no-global-assign","no-unsafe-negation",{"desc":"695","fix":"696"},"Update the dependencies array to be: [lsType]",{"range":"697","text":"698"},[1586,1588],"[lsType]"]