[{"D:\\GFS_Trace\\src\\index.js":"1","D:\\GFS_Trace\\src\\reportWebVitals.js":"2","D:\\GFS_Trace\\src\\App.js":"3","D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js":"4","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"5","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"6","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js":"7","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js":"8","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js":"9","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"10","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js":"11","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"12","D:\\GFS_Trace\\src\\components\\Layout\\Structure.js":"13","D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js":"14","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js":"15","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"16","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js":"17","D:\\GFS_Trace\\src\\Data\\ChemicalData.js":"18","D:\\GFS_Trace\\src\\Data\\JobData.js":"19","D:\\GFS_Trace\\src\\Data\\EquipmentData.js":"20","D:\\GFS_Trace\\src\\Data\\farmData.js":"21","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"22","D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js":"23","D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js":"24","D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js":"25","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"26","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js":"27","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"28","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"29","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"30","D:\\GFS_Trace\\src\\Data\\WaterStorageData.js":"31","D:\\GFS_Trace\\src\\Data\\FuelTankData.js":"32","D:\\GFS_Trace\\src\\Data\\PaddockData.js":"33","D:\\GFS_Trace\\src\\Data\\SiloData.js":"34","D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js":"35","D:\\pull gfs\\GFS_Trace\\src\\index.js":"36","D:\\pull gfs\\GFS_Trace\\src\\reportWebVitals.js":"37","D:\\pull gfs\\GFS_Trace\\src\\i18nextInit.js":"38","D:\\pull gfs\\GFS_Trace\\src\\App.js":"39","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js":"40","D:\\pull gfs\\GFS_Trace\\src\\components\\Layout\\Structure.js":"41","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Custom.js":"42","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js":"43","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"44","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"45","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js":"46","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js":"47","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"48","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js":"49","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js":"50","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js":"51","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js":"52","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"53","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js":"54","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js":"55","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\job.js":"56","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js":"57","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js":"58","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js":"59","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js":"60","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js":"61","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js":"62","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\ReportTableDetails.js":"63","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js":"64","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js":"65","D:\\pull gfs\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js":"66","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js":"67","D:\\pull gfs\\GFS_Trace\\src\\Data\\ChemicalData.js":"68","D:\\pull gfs\\GFS_Trace\\src\\Data\\SpreadingData.js":"69","D:\\pull gfs\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js":"70","D:\\pull gfs\\GFS_Trace\\src\\Data\\SpraylogsData.js":"71","D:\\pull gfs\\GFS_Trace\\src\\Data\\EquipmentData.js":"72","D:\\pull gfs\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js":"73","D:\\pull gfs\\GFS_Trace\\src\\Data\\JobData.js":"74","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\context\\SampleContext.js":"75","D:\\pull gfs\\GFS_Trace\\src\\Data\\GrazingData.js":"76","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\Spraylognew.js":"77","D:\\pull gfs\\GFS_Trace\\src\\Data\\MaintenanceData.js":"78","D:\\pull gfs\\GFS_Trace\\src\\Data\\IrrigationData.js":"79","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js":"80","D:\\pull gfs\\GFS_Trace\\src\\Data\\VetTreatmentData.js":"81","D:\\pull gfs\\GFS_Trace\\src\\Data\\farmData.js":"82","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js":"83","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js":"84","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js":"85","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"86","D:\\pull gfs\\GFS_Trace\\src\\Data\\HarvestData.js":"87","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"88","D:\\pull gfs\\GFS_Trace\\src\\Data\\PlantingData.js":"89","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js":"90","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FarmReport.js":"91","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Chemicals.js":"92","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\SelectCheck.js":"93","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Farms.js":"94","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\MyDatePicker.js":"95","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Equipment.js":"96","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js":"97","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\services\\ActivityAssign.js":"98","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js":"99","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js":"100","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js":"101","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js":"102","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js":"103","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"104","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js":"105","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\Useform.js":"106","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js":"107","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FertiliserReport.js":"108","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js":"109","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ChemicalReport.js":"110","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js":"111","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js":"112","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FuelReport.js":"113","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js":"114","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js":"115","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js":"116","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\GrainReport.js":"117","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js":"118","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ReportTableData.js":"119","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js":"120","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js":"121","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js":"122","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js":"123","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js":"124","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js":"125","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js":"126","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js":"127","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"128","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"129","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"130","D:\\pull gfs\\GFS_Trace\\src\\Data\\InventoryWaterData.js":"131","D:\\pull gfs\\GFS_Trace\\src\\Data\\WaterStorageData.js":"132","D:\\pull gfs\\GFS_Trace\\src\\Data\\InventoryChemicalData.js":"133","D:\\pull gfs\\GFS_Trace\\src\\Data\\FuelTankData.js":"134","D:\\pull gfs\\GFS_Trace\\src\\Data\\SiloData.js":"135","D:\\pull gfs\\GFS_Trace\\src\\Data\\PaddockData.js":"136","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\EquipmentReport.js":"137","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\PaddockReport.js":"138","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\FertiliserTable.js":"139","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tabledetails.js":"140","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Fertilisers.js":"141","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Ingoing.js":"142","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Outgoing.js":"143","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\StockTake.js":"144","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Tabledatas.js":"145","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\InventoryFertilizer.js":"146"},{"size":651,"mtime":1641300685352,"results":"147","hashOfConfig":"148"},{"size":375,"mtime":1641300685353,"results":"149","hashOfConfig":"148"},{"size":3478,"mtime":1641300685280,"results":"150","hashOfConfig":"148"},{"size":218,"mtime":1641300685296,"results":"151","hashOfConfig":"148"},{"size":2906,"mtime":1641300685296,"results":"152","hashOfConfig":"148"},{"size":2783,"mtime":1642405578080,"results":"153","hashOfConfig":"148"},{"size":415,"mtime":1641300685301,"results":"154","hashOfConfig":"148"},{"size":3755,"mtime":1641300685301,"results":"155","hashOfConfig":"148"},{"size":2831,"mtime":1641300685301,"results":"156","hashOfConfig":"148"},{"size":2155,"mtime":1641300685300,"results":"157","hashOfConfig":"148"},{"size":405,"mtime":1641300685301,"results":"158","hashOfConfig":"148"},{"size":2917,"mtime":1641300685300,"results":"159","hashOfConfig":"148"},{"size":1198,"mtime":1641300685289,"results":"160","hashOfConfig":"148"},{"size":8440,"mtime":1642478162592,"results":"161","hashOfConfig":"148"},{"size":3173,"mtime":1641300685301,"results":"162","hashOfConfig":"148"},{"size":1237,"mtime":1641300685300,"results":"163","hashOfConfig":"148"},{"size":2970,"mtime":1641300685301,"results":"164","hashOfConfig":"148"},{"size":623,"mtime":1641300685281,"results":"165","hashOfConfig":"148"},{"size":1569,"mtime":1641458070696,"results":"166","hashOfConfig":"148"},{"size":1174,"mtime":1641300685281,"results":"167","hashOfConfig":"148"},{"size":136,"mtime":1641300685286,"results":"168","hashOfConfig":"148"},{"size":5325,"mtime":1641300685296,"results":"169","hashOfConfig":"148"},{"size":7813,"mtime":1642433505219,"results":"170","hashOfConfig":"148"},{"size":747,"mtime":1641300685287,"results":"171","hashOfConfig":"148"},{"size":1951,"mtime":1641300685289,"results":"172","hashOfConfig":"148"},{"size":621,"mtime":1641300685300,"results":"173","hashOfConfig":"148"},{"size":2250,"mtime":1641300685296,"results":"174","hashOfConfig":"148"},{"size":2022,"mtime":1641300685296,"results":"175","hashOfConfig":"148"},{"size":1849,"mtime":1641300685296,"results":"176","hashOfConfig":"148"},{"size":2126,"mtime":1641300685296,"results":"177","hashOfConfig":"148"},{"size":626,"mtime":1641300685286,"results":"178","hashOfConfig":"148"},{"size":379,"mtime":1641300685281,"results":"179","hashOfConfig":"148"},{"size":490,"mtime":1641300685284,"results":"180","hashOfConfig":"148"},{"size":416,"mtime":1641300685284,"results":"181","hashOfConfig":"148"},{"size":1581,"mtime":1641300685283,"results":"182","hashOfConfig":"148"},{"size":651,"mtime":1647696074063,"results":"183","hashOfConfig":"184"},{"size":375,"mtime":1647696074068,"results":"185","hashOfConfig":"184"},{"size":625,"mtime":1647696073991,"results":"186","hashOfConfig":"184"},{"size":3787,"mtime":1647753962421,"results":"187","hashOfConfig":"184"},{"size":218,"mtime":1647696073862,"results":"188","hashOfConfig":"184"},{"size":1198,"mtime":1647696073814,"results":"189","hashOfConfig":"184"},{"size":2553,"mtime":1640954741039,"results":"190","hashOfConfig":"184"},{"size":405,"mtime":1647696073883,"results":"191","hashOfConfig":"184"},{"size":2906,"mtime":1647696073868,"results":"192","hashOfConfig":"184"},{"size":2783,"mtime":1647696073865,"results":"193","hashOfConfig":"184"},{"size":8998,"mtime":1647696073856,"results":"194","hashOfConfig":"184"},{"size":415,"mtime":1647696073879,"results":"195","hashOfConfig":"184"},{"size":2917,"mtime":1647696073876,"results":"196","hashOfConfig":"184"},{"size":3755,"mtime":1647696073885,"results":"197","hashOfConfig":"184"},{"size":4792,"mtime":1647696073828,"results":"198","hashOfConfig":"184"},{"size":2831,"mtime":1647696073886,"results":"199","hashOfConfig":"184"},{"size":4787,"mtime":1647696073824,"results":"200","hashOfConfig":"184"},{"size":2155,"mtime":1647696073874,"results":"201","hashOfConfig":"184"},{"size":5123,"mtime":1647696073858,"results":"202","hashOfConfig":"184"},{"size":4813,"mtime":1647696073825,"results":"203","hashOfConfig":"184"},{"size":8440,"mtime":1647696073945,"results":"204","hashOfConfig":"184"},{"size":454,"mtime":1647696073899,"results":"205","hashOfConfig":"184"},{"size":5015,"mtime":1647696073822,"results":"206","hashOfConfig":"184"},{"size":4805,"mtime":1647696073857,"results":"207","hashOfConfig":"184"},{"size":469,"mtime":1647696073889,"results":"208","hashOfConfig":"184"},{"size":5006,"mtime":1647696073827,"results":"209","hashOfConfig":"184"},{"size":3173,"mtime":1647696073880,"results":"210","hashOfConfig":"184"},{"size":939,"mtime":1640841459531,"results":"211","hashOfConfig":"184"},{"size":2970,"mtime":1647696073883,"results":"212","hashOfConfig":"184"},{"size":1367,"mtime":1647696073890,"results":"213","hashOfConfig":"184"},{"size":747,"mtime":1647696073809,"results":"214","hashOfConfig":"184"},{"size":1154,"mtime":1647696073900,"results":"215","hashOfConfig":"184"},{"size":623,"mtime":1647696073791,"results":"216","hashOfConfig":"184"},{"size":1462,"mtime":1647696073802,"results":"217","hashOfConfig":"184"},{"size":1951,"mtime":1647696073812,"results":"218","hashOfConfig":"184"},{"size":1408,"mtime":1647696073802,"results":"219","hashOfConfig":"184"},{"size":1174,"mtime":1647696073792,"results":"220","hashOfConfig":"184"},{"size":7892,"mtime":1647753508599,"results":"221","hashOfConfig":"184"},{"size":1569,"mtime":1647696073798,"results":"222","hashOfConfig":"184"},{"size":444,"mtime":1647696073833,"results":"223","hashOfConfig":"184"},{"size":1502,"mtime":1647696073793,"results":"224","hashOfConfig":"184"},{"size":10063,"mtime":1647696073830,"results":"225","hashOfConfig":"184"},{"size":1593,"mtime":1647696073799,"results":"226","hashOfConfig":"184"},{"size":1464,"mtime":1647696073797,"results":"227","hashOfConfig":"184"},{"size":444,"mtime":1647696073928,"results":"228","hashOfConfig":"184"},{"size":1674,"mtime":1647696073803,"results":"229","hashOfConfig":"184"},{"size":136,"mtime":1647696073804,"results":"230","hashOfConfig":"184"},{"size":445,"mtime":1647696073909,"results":"231","hashOfConfig":"184"},{"size":8697,"mtime":1647696073907,"results":"232","hashOfConfig":"184"},{"size":7949,"mtime":1647696073926,"results":"233","hashOfConfig":"184"},{"size":1237,"mtime":1647696073874,"results":"234","hashOfConfig":"184"},{"size":1458,"mtime":1647696073794,"results":"235","hashOfConfig":"184"},{"size":5325,"mtime":1647696073870,"results":"236","hashOfConfig":"184"},{"size":1460,"mtime":1647696073800,"results":"237","hashOfConfig":"184"},{"size":591,"mtime":1647696073901,"results":"238","hashOfConfig":"184"},{"size":5814,"mtime":1647707902771,"results":"239","hashOfConfig":"184"},{"size":7976,"mtime":1647696073836,"results":"240","hashOfConfig":"184"},{"size":3402,"mtime":1647696073841,"results":"241","hashOfConfig":"184"},{"size":5499,"mtime":1647696073838,"results":"242","hashOfConfig":"184"},{"size":917,"mtime":1647696073840,"results":"243","hashOfConfig":"184"},{"size":8242,"mtime":1647696073836,"results":"244","hashOfConfig":"184"},{"size":875,"mtime":1647696073926,"results":"245","hashOfConfig":"184"},{"size":1863,"mtime":1647696073848,"results":"246","hashOfConfig":"184"},{"size":875,"mtime":1647696073908,"results":"247","hashOfConfig":"184"},{"size":6574,"mtime":1647696073929,"results":"248","hashOfConfig":"184"},{"size":917,"mtime":1647696073930,"results":"249","hashOfConfig":"184"},{"size":441,"mtime":1647696073930,"results":"250","hashOfConfig":"184"},{"size":1614,"mtime":1647696073933,"results":"251","hashOfConfig":"184"},{"size":621,"mtime":1647696073875,"results":"252","hashOfConfig":"184"},{"size":1450,"mtime":1647696073931,"results":"253","hashOfConfig":"184"},{"size":875,"mtime":1647696073832,"results":"254","hashOfConfig":"184"},{"size":720,"mtime":1647696073892,"results":"255","hashOfConfig":"184"},{"size":918,"mtime":1640856952326,"results":"256","hashOfConfig":"184"},{"size":1861,"mtime":1647696073939,"results":"257","hashOfConfig":"184"},{"size":893,"mtime":1640957450104,"results":"258","hashOfConfig":"184"},{"size":1614,"mtime":1647696073914,"results":"259","hashOfConfig":"184"},{"size":6574,"mtime":1647696073910,"results":"260","hashOfConfig":"184"},{"size":924,"mtime":1640856957908,"results":"261","hashOfConfig":"184"},{"size":917,"mtime":1647696073913,"results":"262","hashOfConfig":"184"},{"size":441,"mtime":1647696073911,"results":"263","hashOfConfig":"184"},{"size":1450,"mtime":1647696073914,"results":"264","hashOfConfig":"184"},{"size":939,"mtime":1640856964002,"results":"265","hashOfConfig":"184"},{"size":1861,"mtime":1647696073920,"results":"266","hashOfConfig":"184"},{"size":2647,"mtime":1646883635458,"results":"267","hashOfConfig":"184"},{"size":3234,"mtime":1647696073903,"results":"268","hashOfConfig":"184"},{"size":1360,"mtime":1647696073904,"results":"269","hashOfConfig":"184"},{"size":3624,"mtime":1647696073902,"results":"270","hashOfConfig":"184"},{"size":2250,"mtime":1647696073872,"results":"271","hashOfConfig":"184"},{"size":3524,"mtime":1647696073895,"results":"272","hashOfConfig":"184"},{"size":3139,"mtime":1647696073895,"results":"273","hashOfConfig":"184"},{"size":3672,"mtime":1647696073894,"results":"274","hashOfConfig":"184"},{"size":2252,"mtime":1647696073893,"results":"275","hashOfConfig":"184"},{"size":1849,"mtime":1647696073870,"results":"276","hashOfConfig":"184"},{"size":2022,"mtime":1647696073872,"results":"277","hashOfConfig":"184"},{"size":2126,"mtime":1647696073871,"results":"278","hashOfConfig":"184"},{"size":255,"mtime":1647696073795,"results":"279","hashOfConfig":"184"},{"size":626,"mtime":1647696073803,"results":"280","hashOfConfig":"184"},{"size":1581,"mtime":1647696073795,"results":"281","hashOfConfig":"184"},{"size":379,"mtime":1647696073793,"results":"282","hashOfConfig":"184"},{"size":416,"mtime":1647696073800,"results":"283","hashOfConfig":"184"},{"size":490,"mtime":1647696073799,"results":"284","hashOfConfig":"184"},{"size":2215,"mtime":1647708021695,"results":"285","hashOfConfig":"184"},{"size":3799,"mtime":1647707941068,"results":"286","hashOfConfig":"184"},{"size":1372,"mtime":1640702218351,"results":"287","hashOfConfig":"184"},{"size":728,"mtime":1640702228153,"results":"288","hashOfConfig":"184"},{"size":2004,"mtime":1640703450157,"results":"289","hashOfConfig":"184"},{"size":3514,"mtime":1640703396591,"results":"290","hashOfConfig":"184"},{"size":2993,"mtime":1640703419363,"results":"291","hashOfConfig":"184"},{"size":3366,"mtime":1640703370263,"results":"292","hashOfConfig":"184"},{"size":1621,"mtime":1640702995879,"results":"293","hashOfConfig":"184"},{"size":441,"mtime":1647753911384,"results":"294","hashOfConfig":"184"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},"1v1fsp0",{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"297"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"297"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"297"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"297"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"297"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"297"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},"yonznj",{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"374"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"374"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"374"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"374"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"374"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"374"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"374"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"374"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"374"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"374"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"374"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"374"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"374"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"374"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"374"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"374"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"374"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"374"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"374"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"374"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"374"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"374"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"374"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"374"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"374"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"374"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"374"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"374"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"374"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"374"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"374"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"374"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"374"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"374"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"374"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"374"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"374"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"374"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"374"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"374"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"374"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"374"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GFS_Trace\\src\\index.js",[],["626","627"],"D:\\GFS_Trace\\src\\reportWebVitals.js",[],"D:\\GFS_Trace\\src\\App.js",["628"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useTranslation, I18nextProvider } from 'react-i18next';\r\nimport Structure from \"./components/Layout/Structure\";\r\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\r\nimport Job from \"./components/pages/Job/job\";\r\nimport Equipments from \"./components/pages/FarmAssets/Equipments/Equipments\";\r\nimport Farms from \"./components/pages/FarmAssets/Farms/farms\";\r\nimport Chemicals from \"./components/pages/FarmAssets/Chemicals/Chemical\";\r\nimport Users from \"./components/pages/FarmAssets/Users/Users\";\r\nimport Fertiliser from \"./components/pages/FarmAssets/Fertiliser/FertiliserTable\";\r\nimport Livestock from \"./components/pages/FarmAssets/Livestock/LiveStock\";\r\nimport WaterLicence from \"./components/pages/FarmAssets/WaterLicence/WaterLicence\";\r\nimport Nozzles from \"./components/pages/FarmAssets/Nozzles/Nozzles\";\r\nimport InventoryChemical from \"./components/pages/Inventory/InventoryChemical/InventoryChemical\";\r\n//import Grain from \"./components/pages/Inventory/Grain/Grain\";\r\nimport Spraylogs from \"./components/pages/Activities/Spraylogs/Spraylogs\";\r\nimport Planting from \"./components/pages/Activities/Planting/Planting\";\r\nimport Spreading from \"./components/pages/Activities/Spreading/Spreading\";\r\nimport Harvest from \"./components/pages/Activities/Harvest/Harvest\";\r\nimport Grazing from \"./components/pages/Activities/Grazing/Grazing\";\r\nimport Irrigation from \"./components/pages/Activities/Irrigation/Irrigation\";\r\nimport Maintenance from \"./components/pages/Activities/Maintenance/Maintenance\";\r\nimport VetTreatment from \"./components/pages/Activities/VetTreatment/VetTreatment\";\r\nimport InventoryWater from \"./components/pages/Inventory/Water/InventoryWater\";\r\nfunction App (){\r\n  const {i18n}=useTranslation();\r\n  \r\n    return (\r\n      <I18nextProvider i18n={i18n}>\r\n      <Router >\r\n        <Structure>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Dashboard/>}/>\r\n            <Route path=\"/Jobs\" element={<Job/>}/>\r\n            <Route path=\"/Equipments\" element={<Equipments/>}/>\r\n            <Route path=\"/Farms\" element={<Farms/>}/>\r\n            <Route path=\"/Chemicals\" element={<Chemicals/>}/>\r\n            <Route path=\"/Users\" element={<Users/>}/>\r\n            <Route path=\"/Fertiliser\" element={<Fertiliser/>}/>\r\n            <Route path=\"/Nozzles\" element={<Nozzles/>}/>\r\n            <Route path=\"/Livestock\" element={<Livestock/>}/>\r\n            <Route path=\"/WaterLicence\" element={<WaterLicence/>}/>\r\n            <Route path=\"/InventoryChemical\" element={<InventoryChemical/>}/>\r\n            <Route path=\"/Spraylogs\" element={<Spraylogs/>}/>\r\n            <Route path=\"/Planting\" element={<Planting/>}/>\r\n            <Route path=\"/Spreading\" element={<Spreading/>}/>\r\n            <Route path=\"/Harvest\" element={<Harvest/>}/>\r\n            <Route path=\"/Grazing\" element={<Grazing/>}/>\r\n            <Route path=\"/InventoryWater\" element={<InventoryWater/>}/>\r\n            <Route path=\"/Irrigation\" element={<Irrigation/>}/>\r\n            <Route path=\"/Maintenance\" element={<Maintenance/>}/>\r\n            <Route path=\"/VetTreatment\" element={<VetTreatment/>}/>\r\n          {/*<Route path=\"/Grain\" element={<Grain/>}/>*/}\r\n           \r\n          </Routes>\r\n          \r\n          </Structure>       \r\n         \r\n      </Router>\r\n      </I18nextProvider>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js",["629","630","631","632","633"],"import React from \"react\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport \"../../Pages.css\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Chip from '@mui/material/Chip';\r\nimport { render } from \"@testing-library/react\";\r\nimport { style } from \"@mui/system\";\r\n\r\n\r\nconst User_types = [\"Owner\", \"Admin\", \"User\"];\r\nconst User_permissions = [\r\n  \"Payroll\",\r\n  \"Add/Edit Users\",\r\n  \"Grain Inventory\",\r\n  \"Grain Contracts\",\r\n  \"Chemical Inventory\",\r\n  \"Fertiliser Inventory\",\r\n  \"Fuel Inventory\",\r\n  \"Water Inventory\",\r\n  \"Spray Logs\",\r\n  \"Spray Log Approval\",\r\n  \"Plantings\",\r\n  \"Spreadings\",\r\n  \"Harvests\",\r\n  \"Paddock Miantainance\",\r\n  \"Irigation\",\r\n  \"Grazing\",\r\n];\r\nconst users_data = [\r\n  {\r\n    Name: \"Alen Siby\",\r\n    user_role: \"Owner\",\r\n    permissions: \"All\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n  {\r\n    Name: \"Align Elsa\",\r\n    user_role: \"User\",\r\n    permissions: \"Payroll, Add/Edit Users, Grain Inventory\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n  {\r\n    Name: \"Ivin Siby\",\r\n    user_role: \"Admin\",\r\n    permissions: \"Payroll, Add/Edit Users, Grain Inventory\",\r\n    Phone: \"7034726499\",\r\n    email: \"alensiby6@gmail.com\",\r\n    Address: \"asdasdnasd,asfjksdlfm,asjfksdnf,684522,kerala,India\",\r\n  },\r\n];\r\nvar chipcolor=\"\";\r\n\r\nexport default function Users() {\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"Name\",\r\n    },\r\n    {\r\n      title: \"User Role\",\r\n      field: \"user_role\",\r\n    render(rowdata){\r\n\r\n        function Switches(rowdata) {\r\n               if(rowdata.user_role===\"Owner\"){\r\n                   chipcolor=\"error\"\r\n               }\r\n               else if(rowdata.user_role===\"User\"){\r\n                   chipcolor=\"primary\"\r\n               }\r\n               else{\r\n                   chipcolor=\"warning\"\r\n               }\r\n                 \r\n                return(\r\n                <div>\r\n                    <Chip color={chipcolor} label={rowdata.user_role} /></div>)\r\n            }\r\n        return(Switches(rowdata))\r\n    },},\r\n    {\r\n      title: \"Permissions\",\r\n      field: \"permissions\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      field: \"Phone\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      field: \"Address\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"table-size\">\r\n      <div className=\"subheader\">\r\n        <h1 style={{ color: \"black\", \"margin-bottom\": \"0px\" }}>Users </h1>\r\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      </div>\r\n      <div className=\"equipment-table\"></div>\r\n      <MaterialTable\r\n          columns={columns}\r\n          data={users_data}\r\n          editable={{\r\n            onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n            onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\r\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n          }}\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            exportButton: false,\r\n            actionsColumnIndex:-1\r\n          }}\r\n          icons={{\r\n            Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n            Edit: () => <CreateIcon color=\"action\" />,\r\n            Delete: () => <DeleteIcon color=\"action\" />\r\n          }}\r\n        ></MaterialTable>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",[],"D:\\GFS_Trace\\src\\components\\Layout\\Structure.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js",["634","635","636"],"import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { MTableCell } from \"material-table\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\nimport { DialogTitle } from '@mui/material';\r\nimport \"./job.css\";\r\nimport '../Pages.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Editjob from './JobEdit/Jobedit';\r\nimport Addjob from './NewJob/Jobnew';\r\nimport SampleContextProvider from './NewJob/context/SampleContext';\r\nimport SampleContextProvider1 from './JobEdit/context/SampleContext';\r\nimport {useTranslation,Trans} from 'react-i18next';\r\n\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {\r\n  jobData_withoutcomplete,\r\n  jobData_withcomplete,\r\n} from \"../../../Data/JobData\";\r\n\r\nexport default function Job() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const handleClickEditOpen = () => {\r\n        setEditOpen(true);\r\n    };\r\n\r\n    const handleEditClose = (event, reason) => {\r\n        setEditOpen(false);\r\n\r\n    };\r\n\r\n  const [selected, toggleselected] = useState(false);\r\n  const {t} =useTranslation();\r\n  \r\n  const columns = [\r\n    {\r\n\r\n      title: t('jobs.status',\"Status\"),\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': <Trans i18nKey=\"jobs.raised\">Raised</Trans>,\r\n      '1': t('jobs.raisedandassigned','Raised And Assigned'),\r\n      '2': t('jobs.inprogress','In Progress'),\r\n      '3': t('jobs.onhold','On Hold'),\r\n      '4': t('jobs.completed','Completed'),\r\n\r\n      } ,\r\n      render: rowData => {\r\n        return <Tooltip title={rowData.status} placement=\"bottom-start\" arrow>\r\n           </Tooltip>            \r\n     },\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n\r\n    { title: t('jobs.priority','Priority'), field: \"priority\" ,\r\n    lookup: { '0': t('jobs.low','Low'), \r\n    '1': t('jobs.normal','Normal'), \r\n    '2': t('jobs.high','High'), \r\n    '3': t('jobs.safety','Safety')},\r\n\r\n    render: rowData => {\r\n      switch (rowData.priority) {\r\n        case '0':\r\n           return <Icon name='angle down'size='large'/>\r\n        case '1':\r\n           return <Icon name='blue angle up'size='large'/>\r\n        case '2':\r\n           return <Icon name='red angle double up'size='large'/>\r\n   \r\n        case '3':\r\n           return <Icon name='orange exclamation triangle'size='large'/>\r\n    default:\r\n      return <></>\r\n    }}\r\n  },\r\n\r\n    { title: t('jobs.description','Description'), field: \"description\" },\r\n    { title: t('jobs.category','Category'), field: \"category\" ,\r\n    lookup: { '0': 'None', '1': 'Equipment', '2': 'Paddock', '3': 'Fuel Tank', '4': 'Silo', '5': 'Livestock'},},\r\n    { title: t('jobs.asset','Asset'), field: \"asset\" },\r\n    { title: t('jobs.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: t('jobs.lastupdate','Last Update'), field: \"lastupdate\", type:\"date\", filtering: false },\r\n\r\n    \r\n  ];\r\n \r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n\r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"jobs.heading\">Jobs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\r\n\r\n      </div>\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? jobData_withcomplete : jobData_withoutcomplete}\r\n          \r\n          localization={{\r\n            toolbar:{\r\n              searchTooltip:t('materialtable.searchtooltip','Search'),\r\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\r\n            },\r\n            header:{\r\n              actions:t('materialtable.headeractions','Actions')\r\n\r\n            },\r\n            body:{\r\n              addTooltip:t('materialtable.bodyaddtooltip','Add'),\r\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\r\n              editTooltip:t('materialtable.edittooltip','Edit'),\r\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\r\n              editRow:{\r\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\r\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\r\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\r\n              },\r\n              filterRow:{\r\n                filterTooltip:t('materialtable.feltertooltip','Filter')\r\n              }\r\n            },\r\n            pagination:{\r\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\r\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\r\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\r\n              \r\n            }\r\n          }}\r\n\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n           components={{\r\n          Cell: (props) => (\r\n            <Tooltip placement=\"bottom\" title={props.value ? props.value : ''}>\r\n              <MTableCell {...props} />\r\n            </Tooltip>       /// Add translation for tooltip also\r\n          ),\r\n        }}\r\n          actions={[\r\n          {\r\n            icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n            isFreeAction: true,\r\n            onClick: (event) => setOpen(true)\r\n          },\r\n          {\r\n            icon: () => <CreateIcon color=\"action\" />,\r\n           \r\n            onClick: (event) => setEditOpen(true)\r\n          },\r\n          {\r\n            icon: () => <DeleteIcon color=\"action\" />\r\n          }\r\n          ]}\r\n        ></MaterialTable>\r\n        <Dialog open={open} onClose={handleClose} maxWidth=\"100\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>Job Details</DialogTitle>\r\n                <DialogContent>\r\n                <SampleContextProvider>\r\n                    <Addjob />\r\n                    </SampleContextProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={editopen} onClose={handleEditClose} maxWidth=\"lg\" scroll=\"paper\">\r\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\r\n                <DialogContent>\r\n                <SampleContextProvider1>\r\n                    <Editjob />\r\n                </SampleContextProvider1>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleEditClose} color=\"secondary\" className=\"float-left\">DELETE</Button>\r\n                    <Button onClick={handleEditClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleEditClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js",["637"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function LsTable() {\r\n  const [type, setType] = useState({});\r\n\r\n  const lsType = [\r\n    { id: 1, title: \"Cattle\" },\r\n    { id: 2, title: \"Bulls\" },\r\n    { id: 3, title: \"Sheep\" },\r\n    { id: 4, title: \"Horses\" },\r\n    { id: 5, title: \"Chickens\" },\r\n    { id: 6, title: \"Pigs\" },\r\n    { id: 7, title: \"Deer\" },\r\n    { id: 8, title: \"Goats\" },\r\n    { id: 9, title: \"Llamas\" },\r\n    { id: 10, title: \"Bees\" },\r\n  ];\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      type: \"1\",\r\n      names: \"abc\",\r\n\r\n      number: \"123\",\r\n      notes: \"xyz\",\r\n    },\r\n    {\r\n      type: \"2\",\r\n\r\n      names: \"pqrs\",\r\n\r\n      number: \"16343\",\r\n      notes: \"xykfz\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",\r\n      lookup: type,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"names\",\r\n      validate: (rowData) => {\r\n        if (rowData.names === undefined || rowData.names === \"\") {\r\n          return \"Required\";\r\n        } else if (rowData.names.length < 3) {\r\n          return \"Name Should Contain Atleast 3 chars\";\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Number\",\r\n      field: \"number\",\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      field: \"notes\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    lsType.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"Livestock\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...data];\r\n              updatedData[(oldRow, data.id)] = newRow;\r\n              setData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          showTitle: false,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n        }}\r\n        icons={{\r\n         \r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js",[],"D:\\GFS_Trace\\src\\Data\\ChemicalData.js",[],"D:\\GFS_Trace\\src\\Data\\JobData.js",[],"D:\\GFS_Trace\\src\\Data\\EquipmentData.js",[],"D:\\GFS_Trace\\src\\Data\\farmData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",[],"D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js",[],"D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js",["638"],"import React from \"react\";\r\nimport farmsimple from \"../../images/logo.jpg\";\r\nimport \"./header.css\";\r\nimport {Trans} from 'react-i18next';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"main-logo\" src={farmsimple} width=\"50\" height=\"50\" />\r\n      <div class=\"logoName\" style={{ color: \"rgb(79, 79, 79)\" }}>\r\n        <b>GFS</b> Trace\r\n      </div>\r\n      <div className=\"spacer\"></div>\r\n      <span className=\"userDetails\">Align Agith </span> |\r\n      <span className=\"userDetails\" style={{ color: \"green\", float: \"right\" }}>\r\n        {\" \"}\r\n        Owner\r\n      </span>\r\n      <button className=\"logout\"><Trans i18nKey=\"header.logout\"> Logout\r\n        </Trans></button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js",["639","640","641"],"\r\nimport {React,useState} from 'react';\r\nimport YoutubeIcon from 'mdi-react/YoutubeIcon';\r\nimport \"./footer.css\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport FacebookIcon from 'mdi-react/FacebookIcon';\r\nimport TwitterIcon from 'mdi-react/TwitterIcon';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n//import EyeIcon from 'mdi-react/EyeIcon';\r\n\r\nconst languageOptions =[\r\n  {key:'English',text:'English',value:'en'},\r\n  {key:'Malayalam',text:'മലയാളം',value:'ml'},\r\n  {key:'Tamil',text:'தமிழ்',value:'tm'}\r\n]\r\n\r\nexport default function Footer() {\r\n  const [language, setlanguage] = useState(\"en\")\r\n  const {i18n}=useTranslation();\r\n  const handleDropdown=(event,lang)=>{\r\n    setlanguage(lang.value)\r\n    i18n.changeLanguage(lang.value)\r\n   \r\n  }\r\n  return(\r\n       \r\n       \r\n      <div className='footer-main'>\r\n        <div><Dropdown\r\n        upward\r\n        selection\r\n        onChange={handleDropdown}\r\n        button\r\n        className=\"icon\"\r\n        labeled\r\n        icon=\"world\"\r\n        value={language}\r\n        scrolling\r\n        options={languageOptions}\r\n        placeholder=\"Language\"\r\n        /></div>\r\n    \r\n      \r\n     <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><FacebookIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><TwitterIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><YoutubeIcon size={24} /></span></a>\r\n      \r\n      <span style={{\"margin-left\": \"10px\", \"align-items\": \"center\", \"color\": \"rgb(79, 79, 79)\", \"top\": \"0\"}}> © 2021 \r\n    \r\n      </span>\r\n    </div>\r\n  \r\n     \r\n      );\r\n}\r\n\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",[],"D:\\GFS_Trace\\src\\Data\\WaterStorageData.js",[],"D:\\GFS_Trace\\src\\Data\\FuelTankData.js",[],"D:\\GFS_Trace\\src\\Data\\PaddockData.js",[],"D:\\GFS_Trace\\src\\Data\\SiloData.js",[],"D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\index.js",[],["642","643"],"D:\\pull gfs\\GFS_Trace\\src\\reportWebVitals.js",[],"D:\\pull gfs\\GFS_Trace\\src\\i18nextInit.js",[],"D:\\pull gfs\\GFS_Trace\\src\\App.js",["644"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\Layout\\Structure.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Custom.js",["645","646","647","648"],"import React from 'react'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport Box from '@mui/material/Box';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport ReportTableDetails from './ReportTableDetails';\r\nimport { Grid } from '@mui/material';\r\n\r\nfunction Custom() {\r\n  const [field, setfield] = React.useState(\"\");\r\n  const [value, setValue] = React.useState([null, null]);\r\n  const handleChange = (event) => {\r\n    setfield(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={2}>\r\n          <h1>Custom Reports</h1>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <br />\r\n          <select class=\"ui dropdown\" style={{ width: 200, backgroundColor: 'green', color: 'white' }} onChange={handleChange}>\r\n            <option value=\"\" >Farms</option>\r\n            <option value={2} >Paddocks</option>\r\n            <option value={3} >Equipment</option>\r\n            <option value={4} >Grain</option>\r\n            <option value={5}>Chemicals</option>\r\n            <option value={6} >Fuel</option>\r\n            <option value={7}>Fertilisers</option>\r\n          </select>\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <div>\r\n              <Typography sx={{ mt: 2, mb: 1 }}>Date Range </Typography>\r\n              <DateRangePicker\r\n                calendars={1}\r\n                value={value}\r\n                onChange={(newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n                renderInput={(startProps, endProps) => (\r\n                  <React.Fragment>\r\n                    <TextField variant=\"standard\" {...startProps}/>\r\n                    <Box sx={{ mx: 2 }}> ~ </Box>\r\n                    <TextField variant=\"standard\" {...endProps} />\r\n                  </React.Fragment>\r\n                )}\r\n\r\n              />\r\n            </div>\r\n          </LocalizationProvider>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      {/* <Segment attached='bottom'> */}\r\n      <div><ReportTableDetails dataValue={field} /></div>\r\n      {/* </Segment> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Custom\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js",["649","650","651","652"],"import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core'\r\nimport { MTableCell } from \"material-table\";\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport '../../Pages.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport {useTranslation,Trans} from 'react-i18next';\r\nimport Addspraylog from './NewSpraylog/Spraylognew';\r\nimport SampleContextProvider from './NewSpraylog/context/SampleContext';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {\r\n    spraylogsData_withoutcomplete,\r\n    spraylogsData_withcomplete,\r\n} from \"../../../../Data/SpraylogsData\";\r\n\r\nexport default function Spraylogs() {\r\n  const {t} =useTranslation();\r\n  const [selected, toggleselected] = useState(false);\r\n  const [description, setdescription] = React.useState(\"\");\r\n  const [bool, setbool] = React.useState(false);\r\n  const [helper, sethelper] = React.useState(\"\");\r\n  //const [s,setS]=React.useState(0);\r\n  \r\n  //const [bool2, setbool2] = React.useState(false);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [items, setitems] = React.useState([]);\r\n  //const [name, setname] = React.useState();\r\n  const [dataedit, setdataedit] = React.useState(\"\");\r\n  \r\n  //const [helper2, sethelper2] = React.useState(\"\");\r\n  \r\n  //const [newitem, setnewitem] = React.useState();\r\n  //const open = Boolean(anchorEl);\r\n  //const [opendescription, setopendescription] = React.useState(false);\r\n  //const [openedit, setopenedit] = React.useState(false);\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    \r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const [openAddSpraylog, setOpenAddSpraylog] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n      setOpenAddSpraylog(true);\r\n  };\r\n    const handleCloseSpraylog = (event, reason) => {\r\n      setOpenAddSpraylog(false);\r\n\r\n    };\r\n\r\n  const handleChange = (event) => {\r\n    setdescription(event.target.value);\r\n    setdataedit(event.target.value)\r\n    if (event.target.value=='') {\r\n        setbool(true)\r\n        sethelper(\"Required\")\r\n    }\r\n    else{\r\n        setbool(false)\r\n        sethelper(\"\")\r\n    }\r\n};\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: t('activities.status','Status'),\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': 'Raised',\r\n      '1': 'Raised and Assigned',\r\n      '2': 'In Progress',\r\n      '3': 'On Hold',\r\n      '4': 'Completed',\r\n      } ,\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n    \r\n{ title: t('activities.contract','Contract'), field: \"contract\",  \r\nlookup: { 'no': 'No',\r\n'yes': 'Yes'}\r\n},\r\n    \r\n    { title: t('activities.approved','Approved'), field: \"approved\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'}\r\n   },\r\n    { title: t('activities.description','Description'), field: \"description\" },\r\n    { title: t('activities.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: t('activities.started','Started'), field: \"started\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    { title: t('activities.completed','Completed '), field: \"completed\", lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    \r\n  ];\r\n \r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"spraylogs.heading\">Spray Logs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\r\n      </div>\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? spraylogsData_withcomplete : spraylogsData_withoutcomplete}\r\n          \r\n          localization={{\r\n            toolbar:{\r\n              searchTooltip:t('materialtable.searchtooltip','Search'),\r\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\r\n            },\r\n            header:{\r\n              actions:t('materialtable.headeractions','Actions')\r\n\r\n            },\r\n            body:{\r\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\r\n              editTooltip:t('materialtable.edittooltip','Edit'),\r\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\r\n              editRow:{\r\n                deleteText:t('materialtable.deletetext','Are you sure you want to delete?'),\r\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\r\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\r\n              },\r\n              filterRow:{\r\n                filterTooltip:t('materialtable.filtertooltip','Filter')\r\n              }\r\n            },\r\n            pagination:{\r\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\r\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\r\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\r\n              \r\n            }\r\n          }}\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n          components={{\r\n            Cell: (props) => (\r\n              <Tooltip placement=\"bottom\" title={props.value ? props.value : ''}>\r\n                <MTableCell {...props} />\r\n              </Tooltip>       /// Add translation for tooltip also\r\n            ),\r\n          }}\r\n            actions={[\r\n            {\r\n              icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n              isFreeAction: true,\r\n              onClick: (event) => setOpen(true),\r\n              tooltip: 'New Item'\r\n            },\r\n            {\r\n              icon: () => <CreateIcon color=\"action\" />,\r\n              tooltip: 'Edit Item'\r\n             \r\n            },\r\n          \r\n            ]}\r\n        ></MaterialTable>\r\n         <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>New Item</DialogTitle>\r\n            <DialogContent>\r\n                <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            value={description}\r\n                            onChange={handleChange}\r\n                            helperText={helper}\r\n                            error={bool}\r\n                            required\r\n                            autocomplete=\"off\"\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                <Button onClick={handleClickOpen} color=\"primary\">SAVE</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          \r\n          <Dialog open={openAddSpraylog} onClose={handleCloseSpraylog} maxWidth=\"100\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>{description}</DialogTitle>\r\n                <DialogContent dividers>\r\n                <SampleContextProvider>\r\n                    <Addspraylog />\r\n                    </SampleContextProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseSpraylog} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleCloseSpraylog} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n           \r\n                            \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js",["653","654","655","656","657"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\job.js",["658","659","660"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js",["661"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\ReportTableDetails.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js",["662"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Chemical.css\"\r\n\r\n\r\nexport default function InventoryChemicalTable()  {\r\n    const [state, setState] = React.useState(\"CHEMICALS\"); \r\n\r\n      return (\r\n        <div className=\"chemical\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='CHEMICALS'\r\n              active={state === 'CHEMICALS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"CHEMICALS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='STOCKTAKE'\r\n              active={state === 'STOCKTAKE'}\r\n              onClick={() => setState(\"STOCKTAKE\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\pull gfs\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js",["663"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js",["664"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Water.css\"\r\n\r\n\r\nexport default function InventoryWaterTable()  {\r\n    const [state, setState] = React.useState(\"STORAGES\"); \r\n\r\n      return (\r\n        <div className=\"water\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='STORAGES'\r\n              active={state === 'STORAGES'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"STORAGES\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\pull gfs\\GFS_Trace\\src\\Data\\ChemicalData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\SpreadingData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js",["665","666","667"],"D:\\pull gfs\\GFS_Trace\\src\\Data\\SpraylogsData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\EquipmentData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\JobData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\context\\SampleContext.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\GrazingData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\Spraylognew.js",["668","669","670","671","672","673","674","675"],"import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { Useform, Form } from './Useform';\r\n\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport SelectCheck from './controls/SelectCheck';\r\nimport *as activityAssign from './services/ActivityAssign';\r\nimport Equipment from './controls/Equipment';\r\nimport Farms from './controls/Farms';\r\nimport Chemicals from './controls/Chemicals';\r\nimport MyDatePicker from './controls/MyDatePicker';\r\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport './destxt.css'\r\nimport { SampleContext } from './context/SampleContext';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport { Switch } from '@mui/material';\r\n\r\n\r\nconst initialValues = {\r\n  \r\n    operators: '',\r\n    equipment: '',\r\n    dueDate: new Date(),\r\n    priority: '',\r\n    started: '',\r\n    completed: '',\r\n    restartjob: '',\r\n    description: \"\",\r\n    notes: \"\",\r\n}\r\n\r\nfunction Jobnew() {\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n    const { bool, setbool } = React.useContext(SampleContext);\r\n    const [status, setstatus] = React.useState('');\r\n    const [startdate, setstartdate] = React.useState('None');\r\n    const [starttime, setstarttime] = React.useState('');\r\n    const [enddate, setenddate] = React.useState('None');\r\n    const [endtime, setendtime] = React.useState('');\r\n    const [img, setimg] = React.useState();\r\n    const date = \"\";\r\n    var d = 3;\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const [selected, toggleselected] = React.useState(false);\r\n    \r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(activityAssign.getStatus()[d - 1].icon);\r\n        if (d == 3 || (status <= 2 && d > 3)) {\r\n            const current = new Date();\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setstartdate(date);\r\n            setstarttime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n        }\r\n        if (d == 5) {\r\n            const current = new Date();\r\n            setChecked(true);\r\n            setbool(true);\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setenddate(date);\r\n            setendtime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setChecked(false);\r\n        setbool(false);\r\n        setenddate('None');\r\n        setendtime('');\r\n        setstatus(3);\r\n        setimg(activityAssign.getStatus()[2].icon);\r\n    }\r\n    \r\n    return (\r\n        <Form>\r\n           \r\n                <Grid item xs={12} sm={11}>\r\n                    \r\n                    <SelectCheck\r\n                        name=\"operators\"\r\n                        label=\"OPERATORS\"\r\n                        value={values.operators}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n                        choice=\"names\"\r\n\r\n                    />\r\n                   \r\n                        <Grid item xs={14} sm={14}>\r\n                            <MyDatePicker\r\n                                name=\"dueDate\"\r\n                                label=\"Due Date\"\r\n                                value={values.dueDate}\r\n                                onChange={handleInputChange}\r\n                                restart={bool}\r\n                            />\r\n                       \r\n                    <br /><br />\r\n                   \r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch \r\n                                    onClick={() => toggleselected(!selected)}\r\n                                    checked={selected}\r\n                                    \r\n                                />} \r\n                                label=\"Contract\" \r\n                                />\r\n        \r\n                            </FormGroup>\r\n                           \r\n                        </Grid>\r\n                    </Grid>\r\n                        \r\n                    \r\n                    <br />\r\n                    <Grid container >\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={6} sm={6}  >\r\n                                <InputLabel>STARTED</InputLabel>\r\n                                <p>{startdate}</p>\r\n                                <p>{starttime}</p>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>COMPLETED</InputLabel>\r\n                                <p>{enddate}</p>\r\n                                <p>{endtime}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid container spacing={0} alignItems=\"center\">\r\n                            <Grid item xs={0} sm={0} md={0}>\r\n                                <br />\r\n                                {img}\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6}>\r\n                                <FormControl\r\n                                    variant=\"standard\">\r\n                                    <InputLabel>STATUS</InputLabel>\r\n                                    <MuiSelect\r\n                                        label=\"STATUS\"\r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={handleChange}\r\n                                        inputProps={{ readOnly: bool }}>\r\n                                        {\r\n                                            activityAssign.getStatus().map(\r\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                            )\r\n                                        }\r\n                                    </MuiSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={5} md={5}>\r\n                                <Fade in={checked}>\r\n                                <Grid item xs={6} sm={6}>\r\n                                    <div align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClick}><b>RE-START JOB</b></Button></div>\r\n                                </Grid>\r\n                                   \r\n                                </Fade>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                    </Grid>\r\n            </Grid>\r\n                    <br />\r\n                    <div className=\"des\">\r\n                        <label>SPRAY EQUIPMENT</label>\r\n                    </div>\r\n                  \r\n                    <Equipment\r\n                        name=\"equipment\"\r\n                        label=\"Equipment\"\r\n                        value={values.equipment}\r\n                        onChange={handleInputChange}\r\n                        options={activityAssign.getCategory()}\r\n                        restart={bool}\r\n                    />\r\n                    <br />\r\n                    \r\n                    <div className=\"des\">\r\n                        <label>FARMS / PADDOCKS</label>\r\n                    </div>\r\n                   \r\n                    \r\n                     <br />\r\n                     <Farms\r\n                                    name=\"farms\"\r\n                                    label=\"Farm\"\r\n                                    value={values.equipment}\r\n                                    onChange={handleInputChange}\r\n                                   \r\n                                    restart={bool}\r\n                                    />\r\n                    \r\n                    \r\n                    \r\n\r\n                    <div className=\"des\">\r\n                        <label>CHEMICALS / ADDITIVES</label>\r\n                    </div>\r\n                    <br />\r\n                    <Chemicals\r\n                                    name=\"chemicals\"\r\n                                    label=\"Chemicals\"\r\n                                    value={values.equipment}\r\n                                    onChange={handleInputChange}\r\n                                   \r\n                                    restart={bool}\r\n                                    />                \r\n                \r\n                     \r\n\r\n                    <div className=\"des\">\r\n                        <label>APPLICATION DETAILS</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\r\n\r\n                    <div className=\"des\">\r\n                        <label>NOTES</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\r\n                    \r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default Jobnew\r\n\r\n","D:\\pull gfs\\GFS_Trace\\src\\Data\\MaintenanceData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\IrrigationData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\VetTreatmentData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\farmData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js",["676","677","678","679","680","681","682","683"],"import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { Useform, Form } from './Useform';\r\nimport Input from './controls/Input';\r\nimport Select from './controls/Select';\r\nimport SelectCheck from './controls/SelectCheck';\r\nimport *as jobAssign from './services/JobAssign';\r\nimport Category from './controls/Category';\r\nimport MyDatePicker from './controls/MyDatePicker';\r\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport './destxt.css'\r\nimport { SampleContext } from './context/SampleContext';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport { border, height } from '@mui/system';\r\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport {Button as MuiButton} from '@mui/material';\r\nimport CircleOutlined from \"@mui/icons-material/CircleOutlined\";\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n    creator: 'Jesteena Jose',\r\n    assigned: 'Oliver Ernst, Peter Jones',\r\n    category: 'Paddock',\r\n    dueDate: new Date(),\r\n    priority: 'High',\r\n    started: 'None',\r\n    completed: 'None',\r\n    restartjob: '',\r\n    description: \"Description\",\r\n    notes: \"Notes\",\r\n}\r\n\r\nfunction Jobedit() {\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n    const [priority, setPriority] = React.useState(1);\r\n    const { bool, setbool } = React.useContext(SampleContext);\r\n    const [status, setstatus] = React.useState(1);\r\n    const [startdate, setstartdate] = React.useState('None');\r\n    const [starttime, setstarttime] = React.useState('');\r\n    const [enddate, setenddate] = React.useState('None');\r\n    const [endtime, setendtime] = React.useState('');\r\n    const [img, setimg] = React.useState(<CircleOutlined sx={{ color: \"#0000CD\" }} />);\r\n    const date = \"\";\r\n    var d = 3;\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(jobAssign.getStatus()[d - 1].icon);\r\n        if (d == 3 || (status <= 2 && d > 3)) {\r\n            const current = new Date();\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setstartdate(date);\r\n            setstarttime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n        }\r\n        if (d == 5) {\r\n            const current = new Date();\r\n            setChecked(true);\r\n            setbool(true);\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setenddate(date);\r\n            setendtime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setChecked(false);\r\n        setbool(false);\r\n        setenddate('None');\r\n        setendtime('');\r\n        setstatus(3);\r\n        setimg(jobAssign.getStatus()[2].icon);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={11}>\r\n                <div className=\"pdf\">\r\n            <MuiButton >\r\n            <PictureAsPdfOutlinedIcon color=\"error\" fontSize=\"Large\"/></MuiButton></div>\r\n            \r\n\r\n            <br />\r\n\r\n                    <Input\r\n                        name=\"creator\"\r\n                        label=\"CREATOR\"\r\n                        value={values.creator}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n                    />\r\n                    <SelectCheck\r\n                        name=\"assigned\"\r\n                        label=\"ASSIGNED\"\r\n                        value={values.assigned}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n\r\n                    />\r\n                    <br /><br />\r\n                    <Category\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={jobAssign.getCategory()}\r\n                        restart={bool}\r\n                    />\r\n                    <Grid container spacing={10}>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <MyDatePicker\r\n                                name=\"dueDate\"\r\n                                label=\"Due Date\"\r\n                                value={values.dueDate}\r\n                                onChange={handleInputChange}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                label=\"PRIORITY\"\r\n                                value={values.priority || 'Low'}\r\n                                onChange={handleInputChange}\r\n                                options={jobAssign.getPriority()}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel >STARTED</InputLabel>\r\n                                \r\n                                <p>{startdate}</p>\r\n                                <p>{starttime}</p>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>COMPLETED</InputLabel>\r\n                                <p>{enddate}</p>\r\n                                <p>{endtime}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid container spacing={0} alignItems=\"center\">\r\n                            <Grid item xs={0} sm={0} md={0}>\r\n                                <br />\r\n                                {img}\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6}>\r\n                                <FormControl\r\n                                    variant=\"standard\">\r\n                                    <InputLabel>STATUS</InputLabel>\r\n                                    <MuiSelect\r\n                                        label=\"STATUS\"\r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={handleChange}\r\n                                        inputProps={{ readOnly: bool }}>\r\n                                        {\r\n                                            jobAssign.getStatus().map(\r\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                            )\r\n                                        }\r\n                                    </MuiSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={5} md={5}>\r\n                                <Fade in={checked}>\r\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\r\n                                </Fade>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                    </Grid>\r\n            </Grid>\r\n                    <br />\r\n                    <div className=\"des\">\r\n                        <label>DESCRIPTION</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool} value={values.description}/>\r\n                    <div className=\"des\">\r\n                        <label>NOTES</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}} value={values.notes}/>\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default Jobedit\r\n\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js",["684","685","686","687"],"import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { Useform, Form } from './Useform';\r\nimport Input from './controls/Input';\r\nimport Select from './controls/Select';\r\nimport SelectCheck from './controls/SelectCheck';\r\nimport *as jobAssign from './services/JobAssign';\r\nimport Category from './controls/Category';\r\nimport MyDatePicker from './controls/MyDatePicker';\r\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport './destxt.css'\r\nimport { SampleContext } from './context/SampleContext';\r\nimport { TextareaAutosize } from '@mui/material';\r\n\r\n\r\n\r\nconst initialValues = {\r\n    creator: '',\r\n    assigned: '',\r\n    category: '',\r\n    dueDate: new Date(),\r\n    priority: '',\r\n    started: '',\r\n    completed: '',\r\n    restartjob: '',\r\n    description: \"\",\r\n    notes: \"\",\r\n}\r\n\r\nfunction Jobnew() {\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n    const { bool, setbool } = React.useContext(SampleContext);\r\n    const [status, setstatus] = React.useState('');\r\n    const [startdate, setstartdate] = React.useState('None');\r\n    const [starttime, setstarttime] = React.useState('');\r\n    const [enddate, setenddate] = React.useState('None');\r\n    const [endtime, setendtime] = React.useState('');\r\n    const [img, setimg] = React.useState();\r\n    const date = \"\";\r\n    var d = 3;\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(jobAssign.getStatus()[d - 1].icon);\r\n        if (d == 3 || (status <= 2 && d > 3)) {\r\n            const current = new Date();\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setstartdate(date);\r\n            setstarttime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n        }\r\n        if (d == 5) {\r\n            const current = new Date();\r\n            setChecked(true);\r\n            setbool(true);\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setenddate(date);\r\n            setendtime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setChecked(false);\r\n        setbool(false);\r\n        setenddate('None');\r\n        setendtime('');\r\n        setstatus(3);\r\n        setimg(jobAssign.getStatus()[2].icon);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={11}>\r\n                    <Input\r\n                        name=\"creator\"\r\n                        label=\"CREATOR\"\r\n                        value={values.creator}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <SelectCheck\r\n                        name=\"assigned\"\r\n                        label=\"ASSIGNED\"\r\n                        value={values.assigned}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n\r\n                    />\r\n                    <br /><br />\r\n                    <Category\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={jobAssign.getCategory()}\r\n                        restart={bool}\r\n                    />\r\n                    <Grid container spacing={10}>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <MyDatePicker\r\n                                name=\"dueDate\"\r\n                                label=\"Due Date\"\r\n                                value={values.dueDate}\r\n                                onChange={handleInputChange}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                label=\"PRIORITY\"\r\n                                value={values.priority}\r\n                                onChange={handleInputChange}\r\n                                options={jobAssign.getPriority()}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>STARTED</InputLabel>\r\n                                <p>{startdate}</p>\r\n                                <p>{starttime}</p>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>COMPLETED</InputLabel>\r\n                                <p>{enddate}</p>\r\n                                <p>{endtime}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid container spacing={0} alignItems=\"center\">\r\n                            <Grid item xs={0} sm={0} md={0}>\r\n                                <br />\r\n                                {img}\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6}>\r\n                                <FormControl\r\n                                    variant=\"standard\">\r\n                                    <InputLabel>STATUS</InputLabel>\r\n                                    <MuiSelect\r\n                                        label=\"STATUS\"\r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={handleChange}\r\n                                        inputProps={{ readOnly: bool }}>\r\n                                        {\r\n                                            jobAssign.getStatus().map(\r\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                            )\r\n                                        }\r\n                                    </MuiSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={5} md={5}>\r\n                                <Fade in={checked}>\r\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\r\n                                </Fade>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                    </Grid>\r\n            </Grid>\r\n                    <br />\r\n                    <div className=\"des\">\r\n                        <label>DESCRIPTION</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\r\n                    <div className=\"des\">\r\n                        <label>NOTES</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default Jobnew\r\n\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\HarvestData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\PlantingData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FarmReport.js",["688","689","690","691","692","693","694","695","696","697","698","699","700"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { farmreport_data } from './ReportTableData';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Grid } from '@mui/material';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport Export from './export.png';\r\nfunction FarmReport() {\r\n  const [data, setData] = React.useState(farmreport_data);\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [activity, setactivity] = React.useState(false);\r\n  let farms = null;\r\n  let column=null;\r\n  const type = [\"fa1\", \"fa2\", \"fa3\"];\r\n  const [field, setfield] = React.useState(\"\");\r\n  const options = [\r\n    { key: 'Approved', text: 'Approved', value: 'Approved' },\r\n    { key: 'Not Approved', text: 'Not Approved', value: 'Not Approved' },\r\n    { key: 'Charged Out', text: 'Charged Out', value: 'Charged Out' },\r\n    { key: 'Not Charged Out', text: 'Not Charged Out', value: 'Not Charged Out' },]\r\n  const handleChange = (event) => {\r\n    setfield(event.target.value);\r\n  };\r\n  const columns_all = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Activity', field: 'activity',\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: \"Farms\", field: \"farms\",\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns_all_activity = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: \"Farms\", field: \"farms\",\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Activity', field: 'activity',\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns_activity = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  if (selected == true) {\r\n    farms = <div><select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\r\n  }\r\n  if (selected == false && activity == false){\r\n      column=columns_all\r\n  }\r\n  else if(selected==false && activity==true){\r\n    column=columns_all_activity\r\n  }\r\n  else if(selected == true && activity == false){\r\n    column=columns\r\n  }\r\n  else if(selected == true && activity == true){\r\n    column=columns_activity\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 2, sm: 3, md: 4 }}>\r\n        <Grid item xs={2}>\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\r\n            <option value=\"\" >Activities - All Farms</option>\r\n            <option value={2} >Activities - Selective</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {farms}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={(event)=>{if (event.target.value==\"\") {\r\n            setactivity(false)\r\n          }\r\n          else{\r\n            setactivity(true)\r\n          }}}>\r\n            <option value=\"\" >All</option>\r\n            <option value={1} >Spray Logs</option>\r\n            <option value={2} >Spreading</option>\r\n            <option value={3} >Planting</option>\r\n            <option value={4} >Maintenance</option>\r\n            <option value={5}>Harvest</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Dropdown multiple selection show options={options}/>\r\n        </Grid>\r\n        </Grid>\r\n        <br/><br/><br/><br/>\r\n      <MaterialTable title=\"Farms\"\r\n        data={data}\r\n        columns={column}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          search: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Chemicals.js",["701","702","703","704","705"],"import React, { useState } from \"react\";\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core'\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport { LocalMovies } from \"@material-ui/icons\";\r\n\r\nexport default function Chemicals() {\r\n\r\n  const [chemical, setchemical] = React.useState(\"\");\r\n  const [rate, setrate] = React.useState(\"\");\r\n  const [batch, setbatch] = React.useState(\"\");\r\n  const [unit, setunit] = React.useState(\"\");\r\n  const [actives, setactives] = React.useState(\"\");\r\n  const [res, setres] = React.useState(\"\");\r\n    \r\n  const [bool, setbool] = React.useState(false);\r\n  const [helper, sethelper] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const chemical_options =[\r\n      {id:'1', chem:'Chem1', actives: \"active1\", resgroup: \"res1\", rate: \"12\", unit: \"L/ha\"},\r\n      {id:'2', chem:'Chem2', actives: \"active2\", resgroup: \"res2\", rate: \"20\", unit: \"Kg/ha\"},\r\n   \r\n  ]\r\n  const units = [\r\n      { id: 1, title: 'ml/ha' },\r\n      { id: 2, title: 'Kg/ha' },\r\n      { id: 3, title: 'L/ha' },\r\n      { id: 4, title: 'lb/ha' },\r\n      { id: 5, title: 'oz/ha' },\r\n      { id: 6, title: 'g/ha' },\r\n      { id: 7, title: 'floz/ac' },\r\n      { id: 8, title: 'qt/ac' },\r\n      { id: 9, title: 'pt/ac' },\r\n      { id: 10, title: 'oz/ac' },\r\n      { id: 11, title: 'lb/ac' },\r\n      { id: 12, title: 'g/ac' },\r\n      { id: 13, title: 'Kg/1000L' },\r\n      { id: 14, title: 't/ha' },\r\n      { id: 15, title: 'L/Kg' },\r\n      { id: 16, title: 'L/t' }\r\n  ];\r\n     \r\n\r\n   \r\n  const handleClose= () => {\r\n      setOpen(false);\r\n\r\n  };\r\n\r\n  const handleChange1 = (event, value) => {\r\n       \r\n    setunit(event.target.value);\r\n    \r\n   \r\n};\r\n\r\nconst handleClickchemical = (event) => {\r\n  setOpen(true)\r\n}\r\n\r\nconst handleOk = (event) => {\r\n  setchemical(chemical);\r\n  \r\n}\r\nconst handleChange = (e, index) => {\r\n  setchemical(chemical_options[index].chem);\r\n  setrate( chemical_options[index].rate);\r\n  setactives( chemical_options[index].actives);\r\n  setunit( chemical_options[index].unit);\r\n  setres( chemical_options[index].resgroup);\r\n  \r\n};\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n   <div> \r\n     <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickchemical}><b>ADD</b></Button></span>\r\n         <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>Chemicals/Additives</DialogTitle>\r\n                <DialogContent>\r\n                  <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                    <InputLabel>Chemical</InputLabel>\r\n                      <MuiSelect\r\n                          label=\"Chemical\"\r\n                          name=\"chem\"\r\n                          value={chemical}\r\n                          displayEmpty>\r\n                          \r\n                          {\r\n                              chemical_options.map(\r\n                                (item, index) => (<MenuItem key={item.id} value={item.chem} onClick={(event) => handleChange(event, index)}>{item.chem}</MenuItem>)\r\n                              )\r\n                          }\r\n                      </MuiSelect>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                          \r\n                              variant=\"standard\"\r\n                              name=\"actives\"\r\n                              \r\n                              label=\"Actives\"\r\n                              value={actives}\r\n                              \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              \r\n                              InputProps={\r\n                                {readOnly: true,}\r\n                              }\r\n                              style = {{width: 420}}\r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"res\"\r\n                              \r\n                              label=\"Resistance Group\"\r\n                              value={res}\r\n                             \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              \r\n                              InputProps={\r\n                                {readOnly: true,}\r\n                              }\r\n                              style = {{width: 420}}\r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"batch\"\r\n                              type=\"number\"\r\n                              label=\"Batch No.\"\r\n                              value={batch}\r\n                              onChange={handleChange1}\r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              style = {{width: 420}}\r\n                            \r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid container alignItems=\"flex-end\">\r\n                      <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"rate\"\r\n                              type=\"number\"\r\n                              label=\"Application rate\"\r\n                              value={rate}\r\n                              \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              style = {{width: 340}}\r\n                          />\r\n                      </Grid>\r\n                        <Grid >\r\n                          <InputLabel>Unit</InputLabel>\r\n                              <MuiSelect\r\n                                  maxLength={200}\r\n                                  label=\"Unit\"\r\n                                  name=\"unit\"\r\n                                  value={unit}\r\n                                  onChange={handleChange1}\r\n                                  displayEmpty>\r\n                                  \r\n                                  {\r\n                                      units.map(\r\n                                          item => (<MenuItem key={item.id} value={item.title}>{item.title}</MenuItem>)\r\n                                      )\r\n                                  }\r\n                                  \r\n                              </MuiSelect>\r\n                      </Grid>\r\n                  </Grid>\r\n                      \r\n                  </FormControl>\r\n                </Box>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                  <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n              </DialogActions>\r\n          </Dialog> \r\n   </div>        \r\n                            \r\n  )     \r\n}\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\SelectCheck.js",["706","707"],"import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\nconst nozzle = [\r\n  'Nozzle1',\r\n  'Nozzle2',\r\n  \r\n  \r\n];\r\nconst paddock = [\r\n  'Paddock1',\r\n  'Paddock2',\r\n  \r\n  \r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  \r\n  const { name, label, value,restart, choice} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  switch(choice){\r\n    case 'names':\r\n      return (\r\n        <FormControl\r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            label={label}\r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {names.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n      case 'nozzle':\r\n      return (\r\n        <FormControl \r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            \r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {nozzle.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n      case 'paddock':\r\n      return (\r\n        <FormControl\r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            label={label}\r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {paddock.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n  }\r\n  \r\n}\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Farms.js",["708","709"],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport Paddock1 from '../services/paddock.png'\r\n\r\nexport default function Farms(props) {\r\n   \r\n    const [farm, setfarm] = React.useState(\"\");\r\n    const [farm1, setfarm1] = React.useState(\"\");\r\n    const [farm2, setfarm2] = React.useState(\"\");\r\n    \r\n    const [paddock2, setpaddock2] = React.useState(\"\");  \r\n    const [paddock, setpaddock] = React.useState(\"\");  \r\n    const [paddock1, setpaddock1] = React.useState(\"\");   \r\n    const [img, setimg] = React.useState('');\r\n    const [openfarm, setopenfarm] = React.useState(false);\r\n    const [bool, setbool] = React.useState(false);\r\n    \r\n    const farm_options =[\r\n        {id:'1', title:'Farm1'},\r\n        {id:'2', title:'Farm2'},\r\n     \r\n    ]\r\n    const paddock_options =[\r\n        {id:'1', title:'Paddock1'},\r\n        {id:'2', title:'Paddock2'},\r\n     \r\n    ]\r\n\r\n    const handleChange = (event, value) => {\r\n       \r\n        setfarm(value.props.children);\r\n        setfarm1(event.target.value);\r\n    };\r\n    const handleClose = () => {\r\n       \r\n        setopenfarm(false);\r\n      \r\n    };\r\n    \r\n   \r\n\r\n    const handleClickfarm = (event) => {\r\n        setopenfarm(true)\r\n    }\r\n\r\n    const handleOk = (event) => {\r\n        setfarm2(farm);\r\n        setpaddock2(paddock);\r\n            setopenfarm(false); \r\n            setimg(Paddock1);\r\n            setbool(true);\r\n        \r\n    }\r\n    const handleChange1 = (event, value) => {\r\n        setpaddock(value.props.children);\r\n        setpaddock1(event.target.value);\r\n    }\r\n   \r\n   const { name, label, restart } = props;\r\n    \r\n    return (\r\n        <div>\r\n           \r\n            <Button style={{display: bool ? 'block' : 'none' }} color=\"inherit\" onClick={handleClickfarm} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={0}>\r\n                        <p>{farm2}</p>\r\n                        <InputLabel>{paddock2}</InputLabel>\r\n                     </Grid>\r\n                </Grid>\r\n            </Button>\r\n           \r\n                           {/* <Grid item xs={0} sm={0}>\r\n                                <div><p>Estimated Total: 0 ha</p></div>\r\n                           </Grid>*/}\r\n                            <Grid item xs={0} sm={0}>\r\n                                <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickfarm}><b>ADD</b></Button></span>\r\n                               \r\n                                <Dialog open={openfarm} onClose={handleClose}>\r\n                                <DialogTitle>Farms/Paddocks</DialogTitle>\r\n                                <DialogContent>\r\n                                <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>{label}</InputLabel>\r\n                            <MuiSelect\r\n                                label=\"Farm\"\r\n                                name=\"farm\"\r\n                                value={farm1}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                \r\n                                {\r\n                                    farm_options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>Paddock</InputLabel>\r\n                            <MuiSelect\r\n                                label=\"Paddock\"\r\n                                name=\"paddock\"\r\n                                value={paddock1}\r\n                                onChange={handleChange1}\r\n                                displayEmpty>\r\n                                \r\n                                {\r\n                                    paddock_options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                    </Box>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                                    <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                            </Grid>\r\n                            \r\n            \r\n        </div>\r\n    );\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\MyDatePicker.js",["710"],"import React from 'react'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\n\r\nexport default function MyDatePicker(props) {\r\n\r\n    const { name, label, value, onChange,restart } = props\r\n\r\n    const convertToDefEventPara=(name,value)=>({\r\n        target:{\r\n            name,value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\r\n                label={label}\r\n                format=\"dd/MM/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date => onChange(convertToDefEventPara(name,date))}\r\n                inputProps={{ readOnly:restart }}\r\n            />\r\n\r\n\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\controls\\Equipment.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725"],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { Useform, Form } from '../Useform';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport SelectCheck from './SelectCheck';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport TextField from '@mui/material/TextField';\r\nimport tractor from '../services/tractor.png'\r\n\r\nexport default function Equipment(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [equipment, setequipment] = React.useState(\"\");\r\n    const [cat, setcat] = React.useState({});\r\n    const [img, setimg] = React.useState(tractor);\r\n    const [img1, setimg1] = React.useState(tractor);\r\n    var changeequipment = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"None\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [rate, setRate] = React.useState('60');\r\n    const [rateunit, setRateunit] = React.useState('l/Ha');\r\n    const [fieldval, setfieldval] = React.useState(\"equipment\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const initialValues = {\r\n  \r\n        nozzles: '',\r\n        equipment: '',\r\n        dueDate: new Date(),\r\n        priority: '',\r\n        started: '',\r\n        completed: '',\r\n        restartjob: '',\r\n        description: \"\",\r\n        notes: \"\",\r\n    }\r\n    \r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n\r\n    const handleChange = (event, value) => {\r\n        setequipment(event.target.value);\r\n        changeequipment = event.target.value;\r\n        setfieldval(value.props.children)\r\n        setcat({})\r\n        flag=0;\r\n        const arr = options.filter(\r\n            a => (a.id === changeequipment)\r\n        )\r\n        if (changeequipment != \"\") {\r\n            setc(arr[0].data);\r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(options[changeequipment - 1].icon);\r\n        }\r\n        else{\r\n            setc({});\r\n            setfieldval(\"equipment\")\r\n            setSubfieldval(\"None\");\r\n            setfieldfarm(\"\");\r\n            setimg1(tractor);\r\n        }\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setcat(values => ({ ...values, [name]: value }))\r\n        console.log(cat);\r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleOk = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            if (subfieldval==\"\") {\r\n                alert(\"No \"+fieldval+\" Selected\")\r\n            }\r\n            else{\r\n                if(fieldfarm!=\"\"){\r\n                    setfield(fieldval);\r\n                    setSubfield(fieldfarm + subfieldval);\r\n                    setimg(img1)\r\n                    setOpen(false);\r\n                }\r\n                else{\r\n                    if(equipment==1 ||equipment==5){\r\n                        setfield(fieldval);\r\n                        setSubfield(fieldfarm + subfieldval);\r\n                        setimg(img1)\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const { name, label, value, onChange, options, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <p>{field}</p>\r\n                        <InputLabel>Nozzles:{subfield}</InputLabel>\r\n                        <p >{rate} {rateunit}</p>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Spray Equipment</DialogTitle>\r\n                <DialogContent >\r\n                    \r\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                    <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"standard\"\r\n        />\r\n                        <SelectCheck\r\n                        name=\"nozzle\"\r\n                        label=\"Nozzles\"\r\n                        value={values.nozzles}\r\n                        onChange={handleInputChange}\r\n                        choice=\"nozzle\"\r\n\r\n                    />\r\n                    <br></br>\r\n                   \r\n                   \r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            name=\"description\"\r\n                            label=\"Operating pressure\"\r\n                            \r\n                            required\r\n                            autocomplete=\"off\"\r\n                        />\r\n                        <br></br>\r\n                            <InputLabel>Droplet size</InputLabel>\r\n                            <MuiSelect\r\n                                label=\"Droplet size\"\r\n                                name={name}\r\n                                value={equipment}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        {\r\n                            Object.entries(c).map(\r\n                                ([key, val]) => (\r\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                        <InputLabel>{key}</InputLabel>\r\n                                        <MuiSelect\r\n                                            name={key}\r\n                                            label={key}\r\n                                            value={cat[key]}\r\n                                            onChange={handleChange1}\r\n                                        >\r\n                                            {\r\n                                                val.map(\r\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\r\n                                                )\r\n                                            }\r\n                                        </MuiSelect>\r\n                                    </FormControl>)\r\n                            )\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={handleOk}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\services\\ActivityAssign.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js",["726","727","728","729","730","731","732","733","734","735"],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport question from './question mark.png'\r\n\r\nexport default function Category(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [category, setcategory] = React.useState(\"\");\r\n    const [cat, setcat] = React.useState({});\r\n    const [img, setimg] = React.useState(question);\r\n    const [img1, setimg1] = React.useState(question);\r\n    var changeCategory = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"CATEGORY\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const handleChange = (event, value) => {\r\n        setcategory(event.target.value);\r\n        changeCategory = event.target.value;\r\n        setfieldval(value.props.children)\r\n        setcat({})\r\n        flag=0;\r\n        const arr = options.filter(\r\n            a => (a.id === changeCategory)\r\n        )\r\n        if (changeCategory != \"\") {\r\n            setc(arr[0].data);\r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(options[changeCategory - 1].icon);\r\n        }\r\n        else{\r\n            setc({});\r\n            setfieldval(\"CATEGORY\")\r\n            setSubfieldval(\"None\");\r\n            setfieldfarm(\"\");\r\n            setimg1(question);\r\n        }\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setcat(values => ({ ...values, [name]: value }))\r\n        console.log(cat);\r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleOk = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            if (subfieldval==\"\") {\r\n                alert(\"No \"+fieldval+\" Selected\")\r\n            }\r\n            else{\r\n                if(fieldfarm!=\"\"){\r\n                    setfield(fieldval);\r\n                    setSubfield(fieldfarm + subfieldval);\r\n                    setimg(img1)\r\n                    setOpen(false);\r\n                }\r\n                else{\r\n                    if(category==1 ||category==5){\r\n                        setfield(fieldval);\r\n                        setSubfield(fieldfarm + subfieldval);\r\n                        setimg(img1)\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const { name, label, value, onChange, options, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <InputLabel>{field}</InputLabel>\r\n                        <p>{subfield}</p>\r\n                    </Grid>\r\n                </Grid>\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Job Category</DialogTitle>\r\n                <DialogContent >\r\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>{label}</InputLabel>\r\n                            <MuiSelect\r\n                                label={label}\r\n                                name={name}\r\n                                value={category}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        {\r\n                            Object.entries(c).map(\r\n                                ([key, val]) => (\r\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                        <InputLabel>{key}</InputLabel>\r\n                                        <MuiSelect\r\n                                            name={key}\r\n                                            label={key}\r\n                                            value={cat[key]}\r\n                                            onChange={handleChange1}\r\n                                        >\r\n                                            {\r\n                                                val.map(\r\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\r\n                                                )\r\n                                            }\r\n                                        </MuiSelect>\r\n                                    </FormControl>)\r\n                            )\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={handleOk}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js",["736"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js",["737","738"],"import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nfunction Input(props) {\r\n    const { name, label, value, onChange } = props\r\n    return (\r\n        <TextField           \r\n            variant=\"standard\"\r\n            name={name}\r\n            label={label}\r\n            value=\"JESTEENA JOSE\"\r\n            InputProps={{\r\n                readOnly: true,\r\n              }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js",["739"],"import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  const { name, label, value,restart} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\">\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect\r\n        label={label}\r\n        multiple\r\n        name={name}\r\n        value={personName}\r\n        onChange={handleChange}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n        inputProps={{ readOnly:restart }}\r\n      >\r\n        {names.map((name) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={personName.indexOf(name) > -1} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </MuiSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js",["740","741"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value, onChange, options,restart } = props;\r\n    const [img, setimg] = React.useState();\r\n    const [status, setstatus] = React.useState('');\r\n    var d = 3;\r\n\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(options[d - 1].icon);\r\n    }\r\n    return (\r\n        <Grid container spacing={0} alignItems=\"center\">\r\n            <Grid item>\r\n                <br />\r\n                {img}\r\n            </Grid>\r\n            <Grid item xs={12} md={10}>\r\n                <FormControl\r\n                    variant=\"standard\">\r\n                    <InputLabel>{label}</InputLabel>\r\n                    <MuiSelect\r\n                        label={label}\r\n                        name={name}\r\n                        value={status}\r\n                        onChange={handleChange}\r\n                        inputProps={{ readOnly:restart }}>\r\n                        {\r\n                            options.map(\r\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                            )\r\n                        }\r\n                    </MuiSelect>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\NewSpraylog\\Useform.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FertiliserReport.js",["742","743"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { fertiliserreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction FertiliserReport() {\r\n    const [data, setData] = React.useState(fertiliserreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Fertilisers', field: 'fertilisers',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Fertiliser\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n            search:false,\r\n            exportButton: true,\r\n          }}\r\n          icons={{\r\n            Export: () => <img src={Export}></img>,\r\n          }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FertiliserReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ChemicalReport.js",["744","745"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { chemicalreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction ChemicalReport() {\r\n    const [data, setData] = React.useState(chemicalreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Chemicals\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChemicalReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js",["746"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js",["747","748","749","750","751","752","753","754","755","756"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FuelReport.js",["757","758"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { fuelreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction FuelReport() {\r\n    const [data, setData] = React.useState(fuelreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Fuel', field: 'fuel',\r\n      },\r\n      {\r\n        title: 'Amount', field: 'amount',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Fuel\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FuelReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js",["759"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js",["760","761"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js",["762","763"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\GrainReport.js",["764","765"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { grainreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction GrainReport() {\r\n    const [data, setData] = React.useState(grainreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Cultivar', field: 'cultivar',\r\n      },\r\n      {\r\n        title: 'Amount', field: 'amount',\r\n      },\r\n      {\r\n        title: 'Operators', field: 'operators',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Grain\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GrainReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ReportTableData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js",["766"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryWaterData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    \r\n    title: 'Water Storage', field: 'water_storage'\r\n  },\r\n  {\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date/Time', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js",["767","768"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { storages_data } from '../../../../../Data/InventoryWaterData'\r\n\r\nexport default function Storages() {\r\n    const [data, setData] = React.useState(storages_data)\r\n    const columns = [{\r\n        title: 'Farms', field: 'farm'\r\n    },\r\n    {\r\n        title: 'Name', field: 'name',\r\n    },\r\n    {\r\n        title: 'Capacity', field: 'capacity',\r\n    }, {\r\n        title: 'Contents', field: 'contents',\r\n    }]\r\n    \r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STORAGES\"\r\n                data={data}\r\n                columns={ columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js",["769"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Water Storage', field: 'water_storage'\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Water Storage', field: 'water_storage'\r\n  },\r\n  {\r\n      title: 'Date/Time', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n},\r\n \r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js",["770"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { stocktake_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function StockTake() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(stocktake_data)\r\n    const columns = [\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Reported', field: 'report',\r\n    }]\r\n    const columns_archived = [\r\n      {\r\n          title: 'Date', field: 'date',\r\n      }, {\r\n          title: 'Operator', field: 'operator',\r\n      },\r\n      {\r\n          title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n          title: 'Reported', field: 'report',\r\n      },\r\n      {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STOCKTAKE\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js",["771"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js",["772"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Supplier', field: 'supplier'\r\n    },\r\n    {\r\n        title: 'Docket No.', field: 'docket',\r\n    },\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Supplier', field: 'supplier'\r\n  },\r\n  {\r\n      title: 'Docket No.', field: 'docket',\r\n  },\r\n  {\r\n      title: 'Date', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js",["773","774"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { chemicals_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Chemicals() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(chemicals_data)\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    }]\r\n    const columns_archived = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CHEMICALS\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived Chemicals\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\InventoryWaterData.js",["775","776","777","778"],"export const storages_data=[\r\n    {\r\n        farm:'abcdef',name:'asdwef',capacity:'5000L',contents:'Empty',\r\n        farm:'farm2',name:'d12ad',capacity:'50000L',contents:'Empty'\r\n    }\r\n];\r\n\r\nexport const ingoing_data=[];\r\n\r\nexport const outgoing_data=[];","D:\\pull gfs\\GFS_Trace\\src\\Data\\WaterStorageData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\InventoryChemicalData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\FuelTankData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\SiloData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\Data\\PaddockData.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\EquipmentReport.js",["779","780","781"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { equipmentreport_data } from './ReportTableData';\r\nimport { Grid } from '@mui/material';\r\nimport Export from './export.png';\r\nfunction EquipmentReport() {\r\n  const [data, setData] = React.useState(equipmentreport_data);\r\n  const [selected, toggleselected] = React.useState(false);\r\n  let options = null;\r\n  const type = [\"cat1\", \"cat2\", \"cat3\"];\r\n  if (selected == true) {\r\n    options = <div><div class=\"default text\">Equipment</div> <select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\r\n  }\r\n  const columns = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',\r\n  },\r\n  {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Task Category', field: 'category',\r\n  },\r\n  {\r\n    title: 'Task Description', field: 'description',\r\n  },\r\n  ]\r\n  const columns_all = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: \"Equipment\", field: \"equipment\",\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',\r\n  },\r\n  {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Task Category', field: 'category',\r\n  },\r\n  {\r\n    title: 'Task Description', field: 'description',\r\n  },\r\n  ]\r\n  return (\r\n    <div>\r\n      <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n        <Grid item xs={2}>\r\n          <br />\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\r\n            <option value=\"\" >Fuel Tickets - All</option>\r\n            <option value={2} >Fuel Ticket</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {options}\r\n        </Grid>\r\n      </Grid>\r\n      <MaterialTable title=\"Equipment\"\r\n        data={data}\r\n        columns={selected ? columns : columns_all}\r\n        options={{\r\n          search: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EquipmentReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\PaddockReport.js",["782","783","784","785","786","787","788"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { paddockreport_data } from './ReportTableData';\r\nimport { Grid } from '@mui/material';\r\nimport Export from './export.png';\r\nfunction PaddockReport() {\r\n    const [data, setData] = React.useState(paddockreport_data)\r\n    const [field,setfield]=React.useState(\"\");\r\n    const [attribute,setattribute]=React.useState(\"\");\r\n    let columns=null;\r\n    const handleChange = (event) => {\r\n      setfield(event.target.value);\r\n    };\r\n    const columns_spray = [{\r\n      title: 'Date', field: 'date',\r\n    },\r\n    {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_spreading = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Fertilisers', field: 'fertilisers',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_maintainance = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Category', field: 'category',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_harvest = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      if(attribute==\"\"){\r\n        columns=columns_spray\r\n      }\r\n      else if(attribute==\"3\" || attribute==\"2\"){\r\n        columns=columns_spreading\r\n      }\r\n      else if(attribute==\"4\"){\r\n        columns=columns_maintainance\r\n      }\r\n      else{\r\n        columns=columns_harvest\r\n      }\r\n    return (\r\n        <div>\r\n           <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n           <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={(e)=>setattribute(e.target.value)}>\r\n            <option value=\"\" >Spray Logs</option>\r\n            <option value={2} >Spreading</option>\r\n            <option value={3} >Planting</option>\r\n            <option value={4} >Maintenance</option>\r\n            <option value={5}>Harvest</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\r\n            <option value=\"\" >abc</option>\r\n            <option value={2} >pqr</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\r\n            <option value=\"\" >xyz</option>\r\n            <option value={2} >wxy</option>\r\n          </select>\r\n        </Grid>\r\n        </Grid>\r\n      <MaterialTable title=\"Paddocks\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PaddockReport\r\n","D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\FertiliserTable.js",["789"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tabledetails.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Fertilisers.js",["790"],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Ingoing.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Outgoing.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\StockTake.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Tabledatas.js",[],"D:\\pull gfs\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\InventoryFertilizer.js",[],{"ruleId":"791","replacedBy":"792"},{"ruleId":"793","replacedBy":"794"},{"ruleId":"795","severity":1,"message":"796","line":1,"column":17,"nodeType":"797","messageId":"798","endLine":1,"endColumn":26},{"ruleId":"795","severity":1,"message":"799","line":2,"column":25,"nodeType":"797","messageId":"798","endLine":2,"endColumn":31},{"ruleId":"795","severity":1,"message":"800","line":8,"column":10,"nodeType":"797","messageId":"798","endLine":8,"endColumn":16},{"ruleId":"795","severity":1,"message":"801","line":9,"column":10,"nodeType":"797","messageId":"798","endLine":9,"endColumn":15},{"ruleId":"795","severity":1,"message":"802","line":12,"column":7,"nodeType":"797","messageId":"798","endLine":12,"endColumn":17},{"ruleId":"795","severity":1,"message":"803","line":13,"column":7,"nodeType":"797","messageId":"798","endLine":13,"endColumn":23},{"ruleId":"795","severity":1,"message":"804","line":28,"column":11,"nodeType":"797","messageId":"798","endLine":28,"endColumn":26},{"ruleId":"795","severity":1,"message":"805","line":36,"column":11,"nodeType":"797","messageId":"798","endLine":36,"endColumn":30},{"ruleId":"806","severity":1,"message":"807","line":66,"column":7,"nodeType":"808","messageId":"809","endLine":66,"endColumn":13},{"ruleId":"810","severity":1,"message":"811","line":72,"column":6,"nodeType":"812","endLine":72,"endColumn":8,"suggestions":"813"},{"ruleId":"814","severity":1,"message":"815","line":9,"column":7,"nodeType":"816","endLine":9,"endColumn":76},{"ruleId":"817","severity":1,"message":"818","line":45,"column":6,"nodeType":"816","endLine":45,"endColumn":125},{"ruleId":"817","severity":1,"message":"818","line":47,"column":7,"nodeType":"816","endLine":47,"endColumn":126},{"ruleId":"817","severity":1,"message":"818","line":49,"column":7,"nodeType":"816","endLine":49,"endColumn":126},{"ruleId":"791","replacedBy":"819"},{"ruleId":"793","replacedBy":"820"},{"ruleId":"795","severity":1,"message":"796","line":1,"column":17,"nodeType":"797","messageId":"798","endLine":1,"endColumn":26},{"ruleId":"795","severity":1,"message":"821","line":2,"column":8,"nodeType":"797","messageId":"798","endLine":2,"endColumn":16},{"ruleId":"795","severity":1,"message":"822","line":3,"column":8,"nodeType":"797","messageId":"798","endLine":3,"endColumn":19},{"ruleId":"795","severity":1,"message":"823","line":4,"column":8,"nodeType":"797","messageId":"798","endLine":4,"endColumn":14},{"ruleId":"795","severity":1,"message":"824","line":11,"column":10,"nodeType":"797","messageId":"798","endLine":11,"endColumn":17},{"ruleId":"795","severity":1,"message":"825","line":32,"column":10,"nodeType":"797","messageId":"798","endLine":32,"endColumn":15},{"ruleId":"795","severity":1,"message":"826","line":32,"column":17,"nodeType":"797","messageId":"798","endLine":32,"endColumn":25},{"ruleId":"795","severity":1,"message":"827","line":34,"column":10,"nodeType":"797","messageId":"798","endLine":34,"endColumn":18},{"ruleId":"828","severity":1,"message":"829","line":63,"column":27,"nodeType":"830","messageId":"809","endLine":63,"endColumn":29},{"ruleId":"795","severity":1,"message":"799","line":2,"column":25,"nodeType":"797","messageId":"798","endLine":2,"endColumn":31},{"ruleId":"795","severity":1,"message":"800","line":8,"column":10,"nodeType":"797","messageId":"798","endLine":8,"endColumn":16},{"ruleId":"795","severity":1,"message":"801","line":9,"column":10,"nodeType":"797","messageId":"798","endLine":9,"endColumn":15},{"ruleId":"795","severity":1,"message":"802","line":12,"column":7,"nodeType":"797","messageId":"798","endLine":12,"endColumn":17},{"ruleId":"795","severity":1,"message":"803","line":13,"column":7,"nodeType":"797","messageId":"798","endLine":13,"endColumn":23},{"ruleId":"795","severity":1,"message":"804","line":28,"column":11,"nodeType":"797","messageId":"798","endLine":28,"endColumn":26},{"ruleId":"795","severity":1,"message":"805","line":36,"column":11,"nodeType":"797","messageId":"798","endLine":36,"endColumn":30},{"ruleId":"806","severity":1,"message":"807","line":66,"column":7,"nodeType":"808","messageId":"809","endLine":66,"endColumn":13},{"ruleId":"810","severity":1,"message":"811","line":72,"column":6,"nodeType":"812","endLine":72,"endColumn":8,"suggestions":"831"},{"ruleId":"795","severity":1,"message":"832","line":1,"column":16,"nodeType":"797","messageId":"798","endLine":1,"endColumn":24},{"ruleId":"814","severity":1,"message":"815","line":9,"column":7,"nodeType":"816","endLine":9,"endColumn":76},{"ruleId":"795","severity":1,"message":"832","line":1,"column":16,"nodeType":"797","messageId":"798","endLine":1,"endColumn":24},{"ruleId":"817","severity":1,"message":"818","line":45,"column":6,"nodeType":"816","endLine":45,"endColumn":125},{"ruleId":"817","severity":1,"message":"818","line":47,"column":7,"nodeType":"816","endLine":47,"endColumn":126},{"ruleId":"817","severity":1,"message":"818","line":49,"column":7,"nodeType":"816","endLine":49,"endColumn":126},{"ruleId":"795","severity":1,"message":"833","line":7,"column":8,"nodeType":"797","messageId":"798","endLine":7,"endColumn":14},{"ruleId":"795","severity":1,"message":"834","line":8,"column":8,"nodeType":"797","messageId":"798","endLine":8,"endColumn":21},{"ruleId":"795","severity":1,"message":"835","line":9,"column":8,"nodeType":"797","messageId":"798","endLine":9,"endColumn":21},{"ruleId":"795","severity":1,"message":"836","line":10,"column":8,"nodeType":"797","messageId":"798","endLine":10,"endColumn":19},{"ruleId":"795","severity":1,"message":"837","line":41,"column":9,"nodeType":"797","messageId":"798","endLine":41,"endColumn":18},{"ruleId":"795","severity":1,"message":"838","line":52,"column":11,"nodeType":"797","messageId":"798","endLine":52,"endColumn":15},{"ruleId":"828","severity":1,"message":"829","line":62,"column":15,"nodeType":"830","messageId":"809","endLine":62,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":75,"column":15,"nodeType":"830","messageId":"809","endLine":75,"endColumn":17},{"ruleId":"795","severity":1,"message":"839","line":14,"column":10,"nodeType":"797","messageId":"798","endLine":14,"endColumn":16},{"ruleId":"795","severity":1,"message":"840","line":14,"column":18,"nodeType":"797","messageId":"798","endLine":14,"endColumn":24},{"ruleId":"795","severity":1,"message":"837","line":39,"column":9,"nodeType":"797","messageId":"798","endLine":39,"endColumn":18},{"ruleId":"795","severity":1,"message":"841","line":43,"column":12,"nodeType":"797","messageId":"798","endLine":43,"endColumn":20},{"ruleId":"795","severity":1,"message":"842","line":43,"column":22,"nodeType":"797","messageId":"798","endLine":43,"endColumn":33},{"ruleId":"795","severity":1,"message":"838","line":51,"column":11,"nodeType":"797","messageId":"798","endLine":51,"endColumn":15},{"ruleId":"828","severity":1,"message":"829","line":59,"column":15,"nodeType":"830","messageId":"809","endLine":59,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":72,"column":15,"nodeType":"830","messageId":"809","endLine":72,"endColumn":17},{"ruleId":"795","severity":1,"message":"837","line":34,"column":9,"nodeType":"797","messageId":"798","endLine":34,"endColumn":18},{"ruleId":"795","severity":1,"message":"838","line":45,"column":11,"nodeType":"797","messageId":"798","endLine":45,"endColumn":15},{"ruleId":"828","severity":1,"message":"829","line":53,"column":15,"nodeType":"830","messageId":"809","endLine":53,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":66,"column":15,"nodeType":"830","messageId":"809","endLine":66,"endColumn":17},{"ruleId":"795","severity":1,"message":"843","line":16,"column":10,"nodeType":"797","messageId":"798","endLine":16,"endColumn":15},{"ruleId":"795","severity":1,"message":"844","line":22,"column":9,"nodeType":"797","messageId":"798","endLine":22,"endColumn":21},{"ruleId":"828","severity":1,"message":"829","line":125,"column":16,"nodeType":"830","messageId":"809","endLine":125,"endColumn":18},{"ruleId":"828","severity":1,"message":"829","line":128,"column":16,"nodeType":"830","messageId":"809","endLine":128,"endColumn":18},{"ruleId":"828","severity":1,"message":"829","line":128,"column":37,"nodeType":"830","messageId":"809","endLine":128,"endColumn":39},{"ruleId":"828","severity":1,"message":"829","line":131,"column":19,"nodeType":"830","messageId":"809","endLine":131,"endColumn":21},{"ruleId":"828","severity":1,"message":"829","line":131,"column":38,"nodeType":"830","messageId":"809","endLine":131,"endColumn":40},{"ruleId":"828","severity":1,"message":"829","line":134,"column":20,"nodeType":"830","messageId":"809","endLine":134,"endColumn":22},{"ruleId":"828","severity":1,"message":"829","line":134,"column":40,"nodeType":"830","messageId":"809","endLine":134,"endColumn":42},{"ruleId":"828","severity":1,"message":"829","line":137,"column":20,"nodeType":"830","messageId":"809","endLine":137,"endColumn":22},{"ruleId":"828","severity":1,"message":"829","line":137,"column":40,"nodeType":"830","messageId":"809","endLine":137,"endColumn":42},{"ruleId":"828","severity":1,"message":"829","line":153,"column":104,"nodeType":"830","messageId":"809","endLine":153,"endColumn":106},{"ruleId":"814","severity":1,"message":"815","line":205,"column":25,"nodeType":"816","endLine":205,"endColumn":43},{"ruleId":"795","severity":1,"message":"832","line":1,"column":17,"nodeType":"797","messageId":"798","endLine":1,"endColumn":25},{"ruleId":"795","severity":1,"message":"845","line":11,"column":10,"nodeType":"797","messageId":"798","endLine":11,"endColumn":21},{"ruleId":"795","severity":1,"message":"846","line":17,"column":17,"nodeType":"797","messageId":"798","endLine":17,"endColumn":25},{"ruleId":"795","severity":1,"message":"847","line":22,"column":16,"nodeType":"797","messageId":"798","endLine":22,"endColumn":23},{"ruleId":"795","severity":1,"message":"848","line":23,"column":18,"nodeType":"797","messageId":"798","endLine":23,"endColumn":27},{"ruleId":"795","severity":1,"message":"849","line":42,"column":24,"nodeType":"797","messageId":"798","endLine":42,"endColumn":29},{"ruleId":"850","severity":1,"message":"851","line":54,"column":3,"nodeType":"852","messageId":"853","endLine":127,"endColumn":4},{"ruleId":"795","severity":1,"message":"854","line":66,"column":12,"nodeType":"797","messageId":"798","endLine":66,"endColumn":16},{"ruleId":"795","severity":1,"message":"855","line":66,"column":25,"nodeType":"797","messageId":"798","endLine":66,"endColumn":32},{"ruleId":"795","severity":1,"message":"856","line":2,"column":55,"nodeType":"797","messageId":"798","endLine":2,"endColumn":71},{"ruleId":"795","severity":1,"message":"857","line":4,"column":19,"nodeType":"797","messageId":"798","endLine":4,"endColumn":23},{"ruleId":"795","severity":1,"message":"858","line":22,"column":9,"nodeType":"797","messageId":"798","endLine":22,"endColumn":13},{"ruleId":"795","severity":1,"message":"859","line":23,"column":11,"nodeType":"797","messageId":"798","endLine":23,"endColumn":14},{"ruleId":"795","severity":1,"message":"860","line":27,"column":18,"nodeType":"797","messageId":"798","endLine":27,"endColumn":25},{"ruleId":"795","severity":1,"message":"861","line":28,"column":22,"nodeType":"797","messageId":"798","endLine":28,"endColumn":33},{"ruleId":"795","severity":1,"message":"837","line":48,"column":9,"nodeType":"797","messageId":"798","endLine":48,"endColumn":18},{"ruleId":"828","severity":1,"message":"862","line":62,"column":29,"nodeType":"830","messageId":"809","endLine":62,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":82,"column":18,"nodeType":"830","messageId":"809","endLine":82,"endColumn":20},{"ruleId":"828","severity":1,"message":"829","line":104,"column":28,"nodeType":"830","messageId":"809","endLine":104,"endColumn":30},{"ruleId":"828","severity":1,"message":"862","line":108,"column":29,"nodeType":"830","messageId":"809","endLine":108,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":115,"column":33,"nodeType":"830","messageId":"809","endLine":115,"endColumn":35},{"ruleId":"828","severity":1,"message":"829","line":115,"column":48,"nodeType":"830","messageId":"809","endLine":115,"endColumn":50},{"ruleId":"795","severity":1,"message":"863","line":127,"column":19,"nodeType":"797","messageId":"798","endLine":127,"endColumn":24},{"ruleId":"795","severity":1,"message":"849","line":127,"column":26,"nodeType":"797","messageId":"798","endLine":127,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":127,"column":33,"nodeType":"797","messageId":"798","endLine":127,"endColumn":41},{"ruleId":"795","severity":1,"message":"858","line":19,"column":9,"nodeType":"797","messageId":"798","endLine":19,"endColumn":13},{"ruleId":"795","severity":1,"message":"859","line":20,"column":11,"nodeType":"797","messageId":"798","endLine":20,"endColumn":14},{"ruleId":"828","severity":1,"message":"862","line":37,"column":28,"nodeType":"830","messageId":"809","endLine":37,"endColumn":30},{"ruleId":"828","severity":1,"message":"829","line":57,"column":18,"nodeType":"830","messageId":"809","endLine":57,"endColumn":20},{"ruleId":"828","severity":1,"message":"829","line":79,"column":28,"nodeType":"830","messageId":"809","endLine":79,"endColumn":30},{"ruleId":"828","severity":1,"message":"862","line":83,"column":29,"nodeType":"830","messageId":"809","endLine":83,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":90,"column":32,"nodeType":"830","messageId":"809","endLine":90,"endColumn":34},{"ruleId":"828","severity":1,"message":"829","line":90,"column":46,"nodeType":"830","messageId":"809","endLine":90,"endColumn":48},{"ruleId":"795","severity":1,"message":"849","line":102,"column":26,"nodeType":"797","messageId":"798","endLine":102,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":102,"column":33,"nodeType":"797","messageId":"798","endLine":102,"endColumn":41},{"ruleId":"795","severity":1,"message":"856","line":2,"column":55,"nodeType":"797","messageId":"798","endLine":2,"endColumn":71},{"ruleId":"795","severity":1,"message":"849","line":5,"column":26,"nodeType":"797","messageId":"798","endLine":5,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":5,"column":33,"nodeType":"797","messageId":"798","endLine":5,"endColumn":41},{"ruleId":"795","severity":1,"message":"849","line":28,"column":24,"nodeType":"797","messageId":"798","endLine":28,"endColumn":29},{"ruleId":"795","severity":1,"message":"849","line":6,"column":26,"nodeType":"797","messageId":"798","endLine":6,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":6,"column":33,"nodeType":"797","messageId":"798","endLine":6,"endColumn":41},{"ruleId":"795","severity":1,"message":"865","line":6,"column":18,"nodeType":"797","messageId":"798","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":30,"column":27,"nodeType":"816","endLine":30,"endColumn":45},{"ruleId":"795","severity":1,"message":"865","line":6,"column":18,"nodeType":"797","messageId":"798","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":30,"column":25,"nodeType":"816","endLine":30,"endColumn":43},{"ruleId":"795","severity":1,"message":"849","line":28,"column":24,"nodeType":"797","messageId":"798","endLine":28,"endColumn":29},{"ruleId":"795","severity":1,"message":"858","line":19,"column":9,"nodeType":"797","messageId":"798","endLine":19,"endColumn":13},{"ruleId":"795","severity":1,"message":"859","line":20,"column":11,"nodeType":"797","messageId":"798","endLine":20,"endColumn":14},{"ruleId":"828","severity":1,"message":"862","line":37,"column":28,"nodeType":"830","messageId":"809","endLine":37,"endColumn":30},{"ruleId":"828","severity":1,"message":"829","line":57,"column":18,"nodeType":"830","messageId":"809","endLine":57,"endColumn":20},{"ruleId":"828","severity":1,"message":"829","line":79,"column":28,"nodeType":"830","messageId":"809","endLine":79,"endColumn":30},{"ruleId":"828","severity":1,"message":"862","line":83,"column":29,"nodeType":"830","messageId":"809","endLine":83,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":90,"column":32,"nodeType":"830","messageId":"809","endLine":90,"endColumn":34},{"ruleId":"828","severity":1,"message":"829","line":90,"column":46,"nodeType":"830","messageId":"809","endLine":90,"endColumn":48},{"ruleId":"795","severity":1,"message":"849","line":102,"column":26,"nodeType":"797","messageId":"798","endLine":102,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":102,"column":33,"nodeType":"797","messageId":"798","endLine":102,"endColumn":41},{"ruleId":"795","severity":1,"message":"865","line":6,"column":18,"nodeType":"797","messageId":"798","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":33,"column":25,"nodeType":"816","endLine":33,"endColumn":43},{"ruleId":"795","severity":1,"message":"856","line":2,"column":55,"nodeType":"797","messageId":"798","endLine":2,"endColumn":71},{"ruleId":"795","severity":1,"message":"849","line":5,"column":26,"nodeType":"797","messageId":"798","endLine":5,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":5,"column":33,"nodeType":"797","messageId":"798","endLine":5,"endColumn":41},{"ruleId":"795","severity":1,"message":"849","line":6,"column":26,"nodeType":"797","messageId":"798","endLine":6,"endColumn":31},{"ruleId":"795","severity":1,"message":"864","line":6,"column":33,"nodeType":"797","messageId":"798","endLine":6,"endColumn":41},{"ruleId":"795","severity":1,"message":"865","line":6,"column":18,"nodeType":"797","messageId":"798","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":33,"column":25,"nodeType":"816","endLine":33,"endColumn":43},{"ruleId":"814","severity":1,"message":"815","line":107,"column":25,"nodeType":"816","endLine":107,"endColumn":43},{"ruleId":"795","severity":1,"message":"865","line":7,"column":18,"nodeType":"797","messageId":"798","endLine":7,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":41,"column":35,"nodeType":"816","endLine":41,"endColumn":53},{"ruleId":"814","severity":1,"message":"815","line":98,"column":35,"nodeType":"816","endLine":98,"endColumn":53},{"ruleId":"814","severity":1,"message":"815","line":92,"column":35,"nodeType":"816","endLine":92,"endColumn":53},{"ruleId":"814","severity":1,"message":"815","line":103,"column":25,"nodeType":"816","endLine":103,"endColumn":43},{"ruleId":"814","severity":1,"message":"815","line":102,"column":35,"nodeType":"816","endLine":102,"endColumn":53},{"ruleId":"795","severity":1,"message":"865","line":9,"column":18,"nodeType":"797","messageId":"798","endLine":9,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":65,"column":35,"nodeType":"816","endLine":65,"endColumn":53},{"ruleId":"806","severity":1,"message":"866","line":4,"column":9,"nodeType":"808","messageId":"809","endLine":4,"endColumn":13},{"ruleId":"806","severity":1,"message":"867","line":4,"column":22,"nodeType":"808","messageId":"809","endLine":4,"endColumn":26},{"ruleId":"806","severity":1,"message":"868","line":4,"column":35,"nodeType":"808","messageId":"809","endLine":4,"endColumn":43},{"ruleId":"806","severity":1,"message":"869","line":4,"column":53,"nodeType":"808","messageId":"809","endLine":4,"endColumn":61},{"ruleId":"795","severity":1,"message":"865","line":7,"column":16,"nodeType":"797","messageId":"798","endLine":7,"endColumn":23},{"ruleId":"828","severity":1,"message":"829","line":11,"column":16,"nodeType":"830","messageId":"809","endLine":11,"endColumn":18},{"ruleId":"814","severity":1,"message":"815","line":77,"column":25,"nodeType":"816","endLine":77,"endColumn":43},{"ruleId":"795","severity":1,"message":"865","line":7,"column":18,"nodeType":"797","messageId":"798","endLine":7,"endColumn":25},{"ruleId":"795","severity":1,"message":"843","line":8,"column":12,"nodeType":"797","messageId":"798","endLine":8,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":87,"column":19,"nodeType":"830","messageId":"809","endLine":87,"endColumn":21},{"ruleId":"828","severity":1,"message":"829","line":90,"column":24,"nodeType":"830","messageId":"809","endLine":90,"endColumn":26},{"ruleId":"828","severity":1,"message":"829","line":90,"column":42,"nodeType":"830","messageId":"809","endLine":90,"endColumn":44},{"ruleId":"828","severity":1,"message":"829","line":93,"column":24,"nodeType":"830","messageId":"809","endLine":93,"endColumn":26},{"ruleId":"814","severity":1,"message":"815","line":132,"column":25,"nodeType":"816","endLine":132,"endColumn":43},{"ruleId":"795","severity":1,"message":"832","line":1,"column":16,"nodeType":"797","messageId":"798","endLine":1,"endColumn":24},{"ruleId":"795","severity":1,"message":"865","line":8,"column":18,"nodeType":"797","messageId":"798","endLine":8,"endColumn":25},"no-native-reassign",["870"],"no-negated-in-lhs",["871"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Column' is defined but never used.","'render' is defined but never used.","'style' is defined but never used.","'User_types' is assigned a value but never used.","'User_permissions' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClickEditOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'render'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lsType'. Either include it or remove the dependency array.","ArrayExpression",["872"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["870"],["871"],"'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'Segment' is defined but never used.","'items' is assigned a value but never used.","'setitems' is assigned a value but never used.","'dataedit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["873"],"'useState' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","'border' is defined but never used.","'height' is defined but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","'field' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'LocalMovies' is defined but never used.","'setbatch' is assigned a value but never used.","'setbool' is assigned a value but never used.","'sethelper' is assigned a value but never used.","'value' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'name' is assigned a value but never used.","'restart' is assigned a value but never used.","'MobileDatePicker' is defined but never used.","'Form' is defined but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","'setRate' is assigned a value but never used.","'setRateunit' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'label' is assigned a value but never used.","'onChange' is assigned a value but never used.","'setData' is assigned a value but never used.","Duplicate key 'farm'.","Duplicate key 'name'.","Duplicate key 'capacity'.","Duplicate key 'contents'.","no-global-assign","no-unsafe-negation",{"desc":"874","fix":"875"},{"desc":"874","fix":"876"},"Update the dependencies array to be: [lsType]",{"range":"877","text":"878"},{"range":"879","text":"878"},[1657,1659],"[lsType]",[1657,1659]]