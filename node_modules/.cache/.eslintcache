[{"D:\\GFS_Trace\\src\\index.js":"1","D:\\GFS_Trace\\src\\i18nextInit.js":"2","D:\\GFS_Trace\\src\\reportWebVitals.js":"3","D:\\GFS_Trace\\src\\App.js":"4","D:\\GFS_Trace\\src\\components\\Layout\\Structure.js":"5","D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js":"6","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"7","D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js":"8","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js":"9","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"10","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"11","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"12","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js":"13","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js":"14","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js":"15","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js":"16","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js":"17","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js":"18","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js":"19","D:\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js":"20","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js":"21","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js":"22","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js":"23","D:\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js":"24","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Custom.js":"25","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js":"26","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryReport\\Inventoryreport.js":"27","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\InventoryFertilizer.js":"28","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js":"29","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"30","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js":"31","D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js":"32","D:\\GFS_Trace\\src\\Data\\JobData.js":"33","D:\\GFS_Trace\\src\\Data\\EquipmentData.js":"34","D:\\GFS_Trace\\src\\Data\\ChemicalData.js":"35","D:\\GFS_Trace\\src\\Data\\MaintenanceData.js":"36","D:\\GFS_Trace\\src\\Data\\farmData.js":"37","D:\\GFS_Trace\\src\\Data\\SpreadingData.js":"38","D:\\GFS_Trace\\src\\Data\\SpraylogsData.js":"39","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js":"40","D:\\GFS_Trace\\src\\Data\\IrrigationData.js":"41","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"42","D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js":"43","D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js":"44","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js":"45","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js":"46","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js":"47","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\FertiliserTable.js":"48","D:\\GFS_Trace\\src\\Data\\UserData.js":"49","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\ReportTableDetails.js":"50","D:\\GFS_Trace\\src\\Data\\VetTreatmentData.js":"51","D:\\GFS_Trace\\src\\Data\\PlantingData.js":"52","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"53","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js":"54","D:\\GFS_Trace\\src\\Data\\GrazingData.js":"55","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tabledetails.js":"56","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ChemicalReport.js":"57","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\GrainReport.js":"58","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FarmReport.js":"59","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FertiliserReport.js":"60","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FuelReport.js":"61","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\EquipmentReport.js":"62","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\PaddockReport.js":"63","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js":"64","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js":"65","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js":"66","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js":"67","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js":"68","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js":"69","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js":"70","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js":"71","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js":"72","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js":"73","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js":"74","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js":"75","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js":"76","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js":"77","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js":"78","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"79","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"80","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"81","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js":"82","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\StockTake.js":"83","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Outgoing.js":"84","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Fertilisers.js":"85","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Ingoing.js":"86","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ReportTableData.js":"87","D:\\GFS_Trace\\src\\Data\\WaterStorageData.js":"88","D:\\GFS_Trace\\src\\Data\\SiloData.js":"89","D:\\GFS_Trace\\src\\Data\\FuelTankData.js":"90","D:\\GFS_Trace\\src\\Data\\PaddockData.js":"91","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js":"92","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js":"93","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js":"94","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Tabledatas.js":"95","D:\\GFS_Trace\\src\\Data\\InventoryWaterData.js":"96","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js":"97","D:\\GFS_Trace\\src\\Data\\HarvestData.js":"98","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js":"99","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js":"100","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js":"101","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js":"102","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js":"103","D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js":"104","D:\\GFS_Trace\\src\\components\\pages\\Job\\Useform.js":"105","D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\SelectCheck.js":"106","D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\MyDatePicker.js":"107","D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\Select.js":"108","D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\Category.js":"109","D:\\GFS_Trace\\src\\components\\pages\\Job\\services\\JobAssign.js":"110"},{"size":651,"mtime":1652352653311,"results":"111","hashOfConfig":"112"},{"size":625,"mtime":1652352653255,"results":"113","hashOfConfig":"112"},{"size":375,"mtime":1652352653312,"results":"114","hashOfConfig":"112"},{"size":3957,"mtime":1652352653174,"results":"115","hashOfConfig":"112"},{"size":1198,"mtime":1652352653174,"results":"116","hashOfConfig":"112"},{"size":218,"mtime":1652352653190,"results":"117","hashOfConfig":"112"},{"size":2906,"mtime":1652352653190,"results":"118","hashOfConfig":"112"},{"size":15156,"mtime":1652463526605,"results":"119","hashOfConfig":"112"},{"size":415,"mtime":1652352653190,"results":"120","hashOfConfig":"112"},{"size":2155,"mtime":1652352653190,"results":"121","hashOfConfig":"112"},{"size":2917,"mtime":1652352653190,"results":"122","hashOfConfig":"112"},{"size":2783,"mtime":1652352653190,"results":"123","hashOfConfig":"112"},{"size":405,"mtime":1652352653190,"results":"124","hashOfConfig":"112"},{"size":3423,"mtime":1652109677665,"results":"125","hashOfConfig":"112"},{"size":469,"mtime":1652352653207,"results":"126","hashOfConfig":"112"},{"size":2831,"mtime":1652352653190,"results":"127","hashOfConfig":"112"},{"size":3654,"mtime":1652108821041,"results":"128","hashOfConfig":"112"},{"size":454,"mtime":1652352653212,"results":"129","hashOfConfig":"112"},{"size":3427,"mtime":1652109018452,"results":"130","hashOfConfig":"112"},{"size":3734,"mtime":1652109026817,"results":"131","hashOfConfig":"112"},{"size":3462,"mtime":1652108700383,"results":"132","hashOfConfig":"112"},{"size":3441,"mtime":1652108928987,"results":"133","hashOfConfig":"112"},{"size":3450,"mtime":1652108045055,"results":"134","hashOfConfig":"112"},{"size":3616,"mtime":1652108966561,"results":"135","hashOfConfig":"112"},{"size":2553,"mtime":1652352653190,"results":"136","hashOfConfig":"112"},{"size":10254,"mtime":1652352653190,"results":"137","hashOfConfig":"112"},{"size":614,"mtime":1652352653211,"results":"138","hashOfConfig":"112"},{"size":441,"mtime":1652352653190,"results":"139","hashOfConfig":"112"},{"size":3173,"mtime":1652352653190,"results":"140","hashOfConfig":"112"},{"size":1237,"mtime":1652352653190,"results":"141","hashOfConfig":"112"},{"size":2970,"mtime":1652352653190,"results":"142","hashOfConfig":"112"},{"size":1951,"mtime":1652352653174,"results":"143","hashOfConfig":"112"},{"size":1569,"mtime":1652352653174,"results":"144","hashOfConfig":"112"},{"size":1174,"mtime":1652352653174,"results":"145","hashOfConfig":"112"},{"size":623,"mtime":1652352653174,"results":"146","hashOfConfig":"112"},{"size":1593,"mtime":1652352653174,"results":"147","hashOfConfig":"112"},{"size":136,"mtime":1652352653174,"results":"148","hashOfConfig":"112"},{"size":1462,"mtime":1652352653174,"results":"149","hashOfConfig":"112"},{"size":1408,"mtime":1652352653174,"results":"150","hashOfConfig":"112"},{"size":444,"mtime":1652352653225,"results":"151","hashOfConfig":"112"},{"size":1464,"mtime":1652352653174,"results":"152","hashOfConfig":"112"},{"size":5325,"mtime":1652352653190,"results":"153","hashOfConfig":"112"},{"size":7934,"mtime":1652352653174,"results":"154","hashOfConfig":"112"},{"size":636,"mtime":1652352653174,"results":"155","hashOfConfig":"112"},{"size":7949,"mtime":1652433820874,"results":"156","hashOfConfig":"112"},{"size":8697,"mtime":1652352653214,"results":"157","hashOfConfig":"112"},{"size":445,"mtime":1652352653214,"results":"158","hashOfConfig":"112"},{"size":1372,"mtime":1652352653190,"results":"159","hashOfConfig":"112"},{"size":1555,"mtime":1652352653174,"results":"160","hashOfConfig":"112"},{"size":939,"mtime":1652352653190,"results":"161","hashOfConfig":"112"},{"size":1674,"mtime":1652352653174,"results":"162","hashOfConfig":"112"},{"size":1460,"mtime":1652352653174,"results":"163","hashOfConfig":"112"},{"size":621,"mtime":1652352653190,"results":"164","hashOfConfig":"112"},{"size":1154,"mtime":1652352653212,"results":"165","hashOfConfig":"112"},{"size":1502,"mtime":1652352653174,"results":"166","hashOfConfig":"112"},{"size":728,"mtime":1652352653190,"results":"167","hashOfConfig":"112"},{"size":893,"mtime":1652352653190,"results":"168","hashOfConfig":"112"},{"size":939,"mtime":1652352653190,"results":"169","hashOfConfig":"112"},{"size":5814,"mtime":1652352653190,"results":"170","hashOfConfig":"112"},{"size":918,"mtime":1652352653190,"results":"171","hashOfConfig":"112"},{"size":924,"mtime":1652352653190,"results":"172","hashOfConfig":"112"},{"size":2215,"mtime":1652352653190,"results":"173","hashOfConfig":"112"},{"size":3799,"mtime":1652352653190,"results":"174","hashOfConfig":"112"},{"size":875,"mtime":1652352653214,"results":"175","hashOfConfig":"112"},{"size":875,"mtime":1652352653224,"results":"176","hashOfConfig":"112"},{"size":917,"mtime":1652352653214,"results":"177","hashOfConfig":"112"},{"size":1614,"mtime":1652352653214,"results":"178","hashOfConfig":"112"},{"size":6574,"mtime":1652352653214,"results":"179","hashOfConfig":"112"},{"size":441,"mtime":1652352653214,"results":"180","hashOfConfig":"112"},{"size":1450,"mtime":1652352653214,"results":"181","hashOfConfig":"112"},{"size":6574,"mtime":1652352653226,"results":"182","hashOfConfig":"112"},{"size":1861,"mtime":1652352653222,"results":"183","hashOfConfig":"112"},{"size":917,"mtime":1652352653227,"results":"184","hashOfConfig":"112"},{"size":1861,"mtime":1652352653231,"results":"185","hashOfConfig":"112"},{"size":1450,"mtime":1652352653227,"results":"186","hashOfConfig":"112"},{"size":1614,"mtime":1652352653227,"results":"187","hashOfConfig":"112"},{"size":441,"mtime":1652352653226,"results":"188","hashOfConfig":"112"},{"size":2250,"mtime":1652352653190,"results":"189","hashOfConfig":"112"},{"size":2022,"mtime":1652352653190,"results":"190","hashOfConfig":"112"},{"size":1849,"mtime":1652352653190,"results":"191","hashOfConfig":"112"},{"size":2126,"mtime":1652352653190,"results":"192","hashOfConfig":"112"},{"size":591,"mtime":1652352653212,"results":"193","hashOfConfig":"112"},{"size":3366,"mtime":1652352653206,"results":"194","hashOfConfig":"112"},{"size":2993,"mtime":1652352653205,"results":"195","hashOfConfig":"112"},{"size":2004,"mtime":1652352653190,"results":"196","hashOfConfig":"112"},{"size":3514,"mtime":1652352653205,"results":"197","hashOfConfig":"112"},{"size":2647,"mtime":1652352653190,"results":"198","hashOfConfig":"112"},{"size":626,"mtime":1652352653174,"results":"199","hashOfConfig":"112"},{"size":416,"mtime":1652352653174,"results":"200","hashOfConfig":"112"},{"size":379,"mtime":1652352653174,"results":"201","hashOfConfig":"112"},{"size":490,"mtime":1652352653174,"results":"202","hashOfConfig":"112"},{"size":3036,"mtime":1652420700964,"results":"203","hashOfConfig":"112"},{"size":3937,"mtime":1652420533455,"results":"204","hashOfConfig":"112"},{"size":3489,"mtime":1652420789604,"results":"205","hashOfConfig":"112"},{"size":1621,"mtime":1652352653206,"results":"206","hashOfConfig":"112"},{"size":255,"mtime":1652352653174,"results":"207","hashOfConfig":"112"},{"size":1367,"mtime":1652352653207,"results":"208","hashOfConfig":"112"},{"size":1458,"mtime":1652352653174,"results":"209","hashOfConfig":"112"},{"size":720,"mtime":1652352653207,"results":"210","hashOfConfig":"112"},{"size":3524,"mtime":1652352653210,"results":"211","hashOfConfig":"112"},{"size":2252,"mtime":1652352653207,"results":"212","hashOfConfig":"112"},{"size":3139,"mtime":1652352653207,"results":"213","hashOfConfig":"112"},{"size":3672,"mtime":1652352653207,"results":"214","hashOfConfig":"112"},{"size":1581,"mtime":1652352653174,"results":"215","hashOfConfig":"112"},{"size":658,"mtime":1652444231750,"results":"216","hashOfConfig":"112"},{"size":1624,"mtime":1652453135532,"results":"217","hashOfConfig":"112"},{"size":917,"mtime":1652352653227,"results":"218","hashOfConfig":"112"},{"size":1539,"mtime":1652459609983,"results":"219","hashOfConfig":"112"},{"size":6574,"mtime":1652352653226,"results":"220","hashOfConfig":"112"},{"size":1861,"mtime":1652352653231,"results":"221","hashOfConfig":"112"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"1v1fsp0",{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"224"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"224"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"224"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"224"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"224"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"224"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"224"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"224"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"224"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"224"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"224"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"224"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"224"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"224"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"224"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"224"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"224"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"224"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"224"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"224"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"224"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"224"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"224"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"224"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"224"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"224"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"224"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"224"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"224"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"224"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"224"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"224"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"224"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"224"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"224"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"224"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"224"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"D:\\GFS_Trace\\src\\index.js",[],["473","474"],"D:\\GFS_Trace\\src\\i18nextInit.js",[],"D:\\GFS_Trace\\src\\reportWebVitals.js",[],"D:\\GFS_Trace\\src\\App.js",["475"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useTranslation, I18nextProvider } from 'react-i18next';\r\nimport Structure from \"./components/Layout/Structure\";\r\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\r\nimport Job from \"./components/pages/Job/job\";\r\nimport Equipments from \"./components/pages/FarmAssets/Equipments/Equipments\";\r\nimport Farms from \"./components/pages/FarmAssets/Farms/farms\";\r\nimport Chemicals from \"./components/pages/FarmAssets/Chemicals/Chemical\";\r\nimport Users from \"./components/pages/FarmAssets/Users/Users\";\r\nimport Fertiliser from \"./components/pages/FarmAssets/Fertiliser/FertiliserTable\";\r\nimport Livestock from \"./components/pages/FarmAssets/Livestock/LiveStock\";\r\nimport WaterLicence from \"./components/pages/FarmAssets/WaterLicence/WaterLicence\";\r\nimport Nozzles from \"./components/pages/FarmAssets/Nozzles/Nozzles\";\r\nimport InventoryChemical from \"./components/pages/Inventory/InventoryChemical/InventoryChemical\";\r\n//import Grain from \"./components/pages/Inventory/Grain/Grain\";\r\nimport Spraylogs from \"./components/pages/Activities/Spraylogs/Spraylogs\";\r\nimport Planting from \"./components/pages/Activities/Planting/Planting\";\r\nimport Spreading from \"./components/pages/Activities/Spreading/Spreading\";\r\nimport Harvest from \"./components/pages/Activities/Harvest/Harvest\";\r\nimport Grazing from \"./components/pages/Activities/Grazing/Grazing\";\r\nimport Irrigation from \"./components/pages/Activities/Irrigation/Irrigation\";\r\nimport Maintenance from \"./components/pages/Activities/Maintenance/Maintenance\";\r\nimport VetTreatment from \"./components/pages/Activities/VetTreatment/VetTreatment\";\r\nimport InventoryWater from \"./components/pages/Inventory/Water/InventoryWater\";  \r\nimport Custom from \"./components/pages/CustomReport/Custom\";\r\n\r\nimport InventoryFertilizer from \"./components/pages/Inventory/FertilizerInventory/InventoryFertilizer\";\r\nimport Inventoryreport from \"./components/pages/Inventory/InventoryReport/Inventoryreport\";\r\nfunction App (){\r\n  const {i18n}=useTranslation();\r\n  \r\n    return (\r\n      <I18nextProvider i18n={i18n}>\r\n      <Router >\r\n        <Structure>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Dashboard/>}/>\r\n            <Route path=\"/Jobs\" element={<Job/>}/>\r\n            <Route path=\"/Equipments\" element={<Equipments/>}/>\r\n            <Route path=\"/Farms\" element={<Farms/>}/>\r\n            <Route path=\"/Chemicals\" element={<Chemicals/>}/>\r\n            <Route path=\"/Users\" element={<Users/>}/>\r\n            <Route path=\"/Fertiliser\" element={<Fertiliser/>}/>\r\n            <Route path=\"/Nozzles\" element={<Nozzles/>}/>\r\n            <Route path=\"/Livestock\" element={<Livestock/>}/>\r\n            <Route path=\"/WaterLicence\" element={<WaterLicence/>}/>\r\n            <Route path=\"/InventoryChemical\" element={<InventoryChemical/>}/>\r\n            <Route path=\"/InventoryFertilizer\" element={<InventoryFertilizer/>}/>\r\n            <Route path=\"/Spraylogs\" element={<Spraylogs/>}/>\r\n            <Route path=\"/Planting\" element={<Planting/>}/>\r\n            <Route path=\"/Spreading\" element={<Spreading/>}/>\r\n            <Route path=\"/Harvest\" element={<Harvest/>}/>\r\n            <Route path=\"/Grazing\" element={<Grazing/>}/>\r\n            <Route path=\"/InventoryWater\" element={<InventoryWater/>}/>\r\n            <Route path=\"/Irrigation\" element={<Irrigation/>}/>\r\n            <Route path=\"/Maintenance\" element={<Maintenance/>}/>\r\n            <Route path=\"/VetTreatment\" element={<VetTreatment/>}/>\r\n            <Route path=\"/Custom\" element={<Custom/>}/>\r\n            <Route path=\"/InventoryReport\" element={<Inventoryreport/>}/>\r\n          {/*<Route path=\"/Grain\" element={<Grain/>}/>*/}\r\n           \r\n          </Routes>\r\n          \r\n          </Structure>       \r\n         \r\n      </Router>\r\n      </I18nextProvider>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\GFS_Trace\\src\\components\\Layout\\Structure.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\job.js",["476","477","478","479","480","481","482"],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LiveStock.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\Nozzles.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Harvest\\Harvest.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemical.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\WaterLicence\\WaterLicence.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Grazing\\Grazing.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWater.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Planting\\Planting.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\VetTreatment\\VetTreatment.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spreading\\Spreading.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Irrigation\\Irrigation.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Spraylogs\\Spraylogs.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Activities\\Maintenance\\Maintenance.js",[],"D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Custom.js",["483","484","485","486"],"import React from 'react'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport Box from '@mui/material/Box';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport ReportTableDetails from './ReportTableDetails';\r\nimport { Grid } from '@mui/material';\r\n\r\nfunction Custom() {\r\n  const [field, setfield] = React.useState(\"\");\r\n  const [value, setValue] = React.useState([null, null]);\r\n  const handleChange = (event) => {\r\n    setfield(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={2}>\r\n          <h1>Custom Reports</h1>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <br />\r\n          <select class=\"ui dropdown\" style={{ width: 200, backgroundColor: 'green', color: 'white' }} onChange={handleChange}>\r\n            <option value=\"\" >Farms</option>\r\n            <option value={2} >Paddocks</option>\r\n            <option value={3} >Equipment</option>\r\n            <option value={4} >Grain</option>\r\n            <option value={5}>Chemicals</option>\r\n            <option value={6} >Fuel</option>\r\n            <option value={7}>Fertilisers</option>\r\n          </select>\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <div>\r\n              <Typography sx={{ mt: 2, mb: 1 }}>Date Range </Typography>\r\n              <DateRangePicker\r\n                calendars={1}\r\n                value={value}\r\n                onChange={(newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n                renderInput={(startProps, endProps) => (\r\n                  <React.Fragment>\r\n                    <TextField variant=\"standard\" {...startProps}/>\r\n                    <Box sx={{ mx: 2 }}> ~ </Box>\r\n                    <TextField variant=\"standard\" {...endProps} />\r\n                  </React.Fragment>\r\n                )}\r\n\r\n              />\r\n            </div>\r\n          </LocalizationProvider>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      {/* <Segment attached='bottom'> */}\r\n      <div><ReportTableDetails dataValue={field} /></div>\r\n      {/* </Segment> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Custom\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Users\\Users.js",["487"],"import React from \"react\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport \"../../Pages.css\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport AddCircleRoundedIcon from \"@mui/icons-material/AddCircleRounded\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport UserData from \"../../../../Data/UserData\";\r\nimport { Modal, Button, Dropdown, Form } from \"semantic-ui-react\";\r\n\r\nconst options = [\r\n  { key: \"payroll\", text: \"Payroll\", value: \"Payroll\" },\r\n  { key: \"add/editusers\", text: \"Add/Edit Users\", value: \"Add/Edit Users\" },\r\n  { key: \"graininventory\", text: \"Grain Inventory\", value: \"Grain Inventory\" },\r\n  { key: \"graincontracts\", text: \"Grain Contracts\", value: \"Grain Contracts\" },\r\n  {\r\n    key: \"chemicalinventory\",\r\n    text: \"Chemical Inventory\",\r\n    value: \"Chemical Inventory\",\r\n  },\r\n  {\r\n    key: \"fertiliserinventory\",\r\n    text: \"Fertiliser Inventory\",\r\n    value: \"Fertiliser Inventory\",\r\n  },\r\n  { key: \"fuelinventory\", text: \"Fuel Inventory\", value: \"Fuel Inventory\" },\r\n  { key: \"waterinventory\", text: \"Water Inventory\", value: \"Water Inventory\" },\r\n  { key: \"spraylogs\", text: \"Spray Logs\", value: \"Spray Logs\" },\r\n  {\r\n    key: \"spraylogapproval\",\r\n    text: \"Spray Log Approval\",\r\n    value: \"Spray Log Approval\",\r\n  },\r\n  { key: \"plantings\", text: \"Plantings\", value: \"Plantings\" },\r\n  { key: \"spreadings\", text: \"Spreadings\", value: \"Spreadings\" },\r\n  { key: \"harvests\", text: \"Harvests\", value: \"Harvests\" },\r\n  {\r\n    key: \"paddockmiantainance\",\r\n    text: \"Paddock Miantainances\",\r\n    value: \"Paddock Maintainances\",\r\n  },\r\n  { key: \"irigation\", text: \"Irrigation\", value: \"Irrigation\" },\r\n  { key: \"grazing\", text: \"Grazing\", value: \"Grazing\" },\r\n];\r\nconst roles = [\r\n  { key: \"User\", text: \"User\", value: \"User\" },\r\n  { key: \"admin\", text: \"Admin\", value: \"Admin\" },\r\n];\r\n\r\nvar chipcolor = \"\";\r\n\r\nexport default function Users() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [confopen, setconfOpen] = React.useState(false);\r\n  const [rowdatas, setrowdatas] = React.useState({});\r\n  const [newedit, setnewedit] = React.useState(true);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      render: (rowData) => rowData.first_name + \" \" + rowData.last_name,\r\n    },\r\n    {\r\n      title: \"User Role\",\r\n      field: \"user_role\",\r\n      render(rowdata) {\r\n        function Switches(rowdata) {\r\n          if (rowdata.user_role === \"Owner\") {\r\n            chipcolor = \"error\";\r\n          } else if (rowdata.user_role === \"User\") {\r\n            chipcolor = \"primary\";\r\n          } else {\r\n            chipcolor = \"warning\";\r\n          }\r\n\r\n          return (\r\n            <div>\r\n              <Chip color={chipcolor} label={rowdata.user_role} />\r\n            </div>\r\n          );\r\n        }\r\n        return Switches(rowdata);\r\n      },\r\n    },\r\n    {\r\n      title: \"Permissions\",\r\n      field: \"permissions\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      field: \"Phone\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n\r\n      render: (rowData) =>\r\n        rowData.address_line1 +\r\n        \" \" +\r\n        rowData.address_line2 +\r\n        \" \" +\r\n        rowData.town +\r\n        \" \" +\r\n        rowData.state +\r\n        \" \" +\r\n        rowData.pin_code +\r\n        \" \" +\r\n        rowData.country,\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"table-size\">\r\n      <div className=\"subheader\">\r\n        <h1 style={{ color: \"black\", \"margin-bottom\": \"0px\" }}>Users </h1>\r\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      </div>\r\n      <Modal onClose={() => setOpen(false)} open={open} as={Form}>\r\n        <Modal.Header>\r\n          {newedit === true ? \"New User\" : \"Edit User\"}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                fluid\r\n                required\r\n                label=\"First name \"\r\n                placeholder=\"First name\"\r\n                id=\"form-input-first-name\"\r\n                defaultValue={rowdatas.first_name}\r\n              />\r\n              <Form.Input\r\n                required\r\n                fluid\r\n                label=\"Last name \"\r\n                placeholder=\"Last name\"\r\n                id=\"form-input-last-name\"\r\n                defaultValue={rowdatas.last_name}\r\n              />\r\n            </Form.Group>\r\n            {rowdatas.user_role === \"Owner\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Form.Group inline>\r\n                <Form.Field required>\r\n                  <label>User Roles</label>\r\n                  <Dropdown\r\n                    widths={5}\r\n                    fluid\r\n                    clearable\r\n                    selection\r\n                    options={roles}\r\n                    defaultValue={(roles.value = rowdatas.user_role)}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>User Permissions</label>\r\n                  <Dropdown\r\n                    multiple\r\n                    fluid\r\n                    selection\r\n                    options={options}\r\n                    defaultValue={(options.values = rowdatas.permissions)}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Form.Input\r\n              fluid\r\n              width={6}\r\n              label=\"Phone Number\"\r\n              placeholder=\"Ph No\"\r\n              id=\"form-input-phone\"\r\n              defaultValue={rowdatas.Phone}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              width={6}\r\n              label=\"Email Address\"\r\n              placeholder=\"Email\"\r\n              id=\"form-input-email\"\r\n              defaultValue={rowdatas.email}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              width={6}\r\n              label=\"Address line 1\"\r\n              placeholder=\"line1\"\r\n              id=\"form-input-address-line1\"\r\n              defaultValue={rowdatas.address_line1}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              width={6}\r\n              label=\"Address line 2\"\r\n              placeholder=\"line2\"\r\n              id=\"form-input-address-line2\"\r\n              defaultValue={rowdatas.address_line2}\r\n            />\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                fluid\r\n                label=\"Town\"\r\n                placeholder=\"town\"\r\n                id=\"form-input-town\"\r\n                defaultValue={rowdatas.town}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                label=\"State\"\r\n                placeholder=\"state\"\r\n                id=\"form-input-state\"\r\n                defaultValue={rowdatas.state}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                fluid\r\n                label=\"Pin Code\"\r\n                placeholder=\"Pin\"\r\n                id=\"form-input-pincode\"\r\n                defaultValue={rowdatas.pin_code}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                label=\"Country\"\r\n                placeholder=\"country\"\r\n                id=\"form-input-Country\"\r\n                defaultValue={rowdatas.country}\r\n              />\r\n            </Form.Group>\r\n            <Form.Field>\r\n              <label>* indicates required fields</label>\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button type=\"submit\" color=\"black\" onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            content=\"Save\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n              setconfOpen(true);\r\n            }}\r\n            positive\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <Modal size=\"tiny\" onClose={() => setconfOpen(false)} open={confopen}>\r\n        <Modal.Header>Confirm Login</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Email</label>\r\n              <input placeholder=\"Username\" />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Password</label>\r\n              <input placeholder=\"password\" type=\"password\" />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            content=\"Login\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={() => setconfOpen(false)}\r\n            positive\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n      <div className=\"equipment-table\"></div>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={UserData}\r\n        editable={{\r\n          onRowDelete: (selectedRow) => new Promise(() => {}),\r\n        }}\r\n        options={{\r\n          showTitle: false,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: false,\r\n          actionsColumnIndex: -1,\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: () => <CreateIcon color=\"action\" />,\r\n            onClick: (rowData, e) => {\r\n              setnewedit(false);\r\n              setrowdatas(e);\r\n              setOpen(true);\r\n            },\r\n          },\r\n          {\r\n            icon: () => (\r\n              <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />\r\n            ),\r\n            tooltip: \"Add User\",\r\n            isFreeAction: true,\r\n            onClick: () => {\r\n              setnewedit(true);\r\n              setrowdatas({});\r\n              setOpen(true);\r\n            },\r\n          },\r\n        ]}\r\n        icons={{\r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />,\r\n        }}\r\n      ></MaterialTable>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryReport\\Inventoryreport.js",["488"],"import React from \"react\";\r\nimport \"../../Pages.css\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport GearIcon from \"mdi-react/GearIcon\";\r\n\r\nexport default function Inventoryreport() {\r\n  return (\r\n    <div className=\"table-size\">\r\n      <div className=\"subheader\">\r\n        <h1 style={{ color: \"black\" }}>Inventory Reports </h1>\r\n        <span>&nbsp;&nbsp;</span>\r\n        <div className=\"icon-align\">\r\n          <GearIcon\r\n            style={{ cursor: \"pointer\", color: \"black\" }}\r\n            onClick={console.log(\"modal opened\")}\r\n          ></GearIcon>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\InventoryFertilizer.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Livestock\\LsTable.js",["489"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function LsTable() {\r\n  const [type, setType] = useState({});\r\n\r\n  const lsType = [\r\n    { id: 1, title: \"Cattle\" },\r\n    { id: 2, title: \"Bulls\" },\r\n    { id: 3, title: \"Sheep\" },\r\n    { id: 4, title: \"Horses\" },\r\n    { id: 5, title: \"Chickens\" },\r\n    { id: 6, title: \"Pigs\" },\r\n    { id: 7, title: \"Deer\" },\r\n    { id: 8, title: \"Goats\" },\r\n    { id: 9, title: \"Llamas\" },\r\n    { id: 10, title: \"Bees\" },\r\n  ];\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      type: \"1\",\r\n      names: \"abc\",\r\n\r\n      number: \"123\",\r\n      notes: \"xyz\",\r\n    },\r\n    {\r\n      type: \"2\",\r\n\r\n      names: \"pqrs\",\r\n\r\n      number: \"16343\",\r\n      notes: \"xykfz\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",\r\n      lookup: type,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"names\",\r\n      validate: (rowData) => {\r\n        if (rowData.names === undefined || rowData.names === \"\") {\r\n          return \"Required\";\r\n        } else if (rowData.names.length < 3) {\r\n          return \"Name Should Contain Atleast 3 chars\";\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Number\",\r\n      field: \"number\",\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      field: \"notes\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    lsType.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"Livestock\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...data];\r\n              updatedData[(oldRow, data.id)] = newRow;\r\n              setData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          showTitle: false,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n        }}\r\n        icons={{\r\n         \r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Nozzles\\NTable.js",[],"D:\\GFS_Trace\\src\\components\\HeaderFooter\\footer.js",["490","491","492"],"\r\nimport {React,useState} from 'react';\r\nimport YoutubeIcon from 'mdi-react/YoutubeIcon';\r\nimport \"./footer.css\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport FacebookIcon from 'mdi-react/FacebookIcon';\r\nimport TwitterIcon from 'mdi-react/TwitterIcon';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n//import EyeIcon from 'mdi-react/EyeIcon';\r\n\r\nconst languageOptions =[\r\n  {key:'English',text:'English',value:'en'},\r\n  {key:'Malayalam',text:'മലയാളം',value:'ml'},\r\n  {key:'Tamil',text:'தமிழ்',value:'tm'}\r\n]\r\n\r\nexport default function Footer() {\r\n  const [language, setlanguage] = useState(\"en\")\r\n  const {i18n}=useTranslation();\r\n  const handleDropdown=(event,lang)=>{\r\n    setlanguage(lang.value)\r\n    i18n.changeLanguage(lang.value)\r\n   \r\n  }\r\n  return(\r\n       \r\n       \r\n      <div className='footer-main'>\r\n        <div><Dropdown\r\n        upward\r\n        selection\r\n        onChange={handleDropdown}\r\n        button\r\n        className=\"icon\"\r\n        labeled\r\n        icon=\"world\"\r\n        value={language}\r\n        scrolling\r\n        options={languageOptions}\r\n        placeholder=\"Language\"\r\n        /></div>\r\n    \r\n      \r\n     <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><FacebookIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><TwitterIcon size={24} /></span></a>\r\n      \r\n      <a href=\"#\" className=\"margin-one footer-button footer-button-icon footer-button-round button-color button-size-small\"><span className=\"footer-icon\"><YoutubeIcon size={24} /></span></a>\r\n      \r\n      <span style={{\"margin-left\": \"10px\", \"align-items\": \"center\", \"color\": \"rgb(79, 79, 79)\", \"top\": \"0\"}}> © 2021 \r\n    \r\n      </span>\r\n    </div>\r\n  \r\n     \r\n      );\r\n}\r\n\r\n","D:\\GFS_Trace\\src\\Data\\JobData.js",[],"D:\\GFS_Trace\\src\\Data\\EquipmentData.js",[],"D:\\GFS_Trace\\src\\Data\\ChemicalData.js",[],"D:\\GFS_Trace\\src\\Data\\MaintenanceData.js",[],"D:\\GFS_Trace\\src\\Data\\farmData.js",[],"D:\\GFS_Trace\\src\\Data\\SpreadingData.js",[],"D:\\GFS_Trace\\src\\Data\\SpraylogsData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js",[],"D:\\GFS_Trace\\src\\Data\\IrrigationData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",[],"D:\\GFS_Trace\\src\\components\\Sidebar\\Navbar.js",[],"D:\\GFS_Trace\\src\\components\\HeaderFooter\\Header.js",["493"],"import React from \"react\";\r\nimport farmsimple from \"../../images/logo.jpg\";\r\nimport \"./header.css\";\r\nimport {Trans} from 'react-i18next';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"main-logo\" src={farmsimple} width=\"50\" height=\"50\" />\r\n      <div class=\"logoName\" style={{ color: \"rgb(79, 79, 79)\" }}>\r\n        <b>GFS</b> Trace\r\n      </div>\r\n      <div className=\"spacer\"></div>\r\n      <span className=\"userDetails\">Align Agith </span> |\r\n      \r\n     \r\n      <button className=\"logout\"><Trans i18nKey=\"header.logout\"> Logout\r\n        </Trans></button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Jobnew.js",["494","495","496","497"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Jobedit.js",["498","499","500","501","502","503","504","505"],"import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport { Useform, Form } from './Useform';\r\nimport Input from './controls/Input';\r\nimport Select from './controls/Select';\r\nimport SelectCheck from './controls/SelectCheck';\r\nimport *as jobAssign from './services/JobAssign';\r\nimport Category from './controls/Category';\r\nimport MyDatePicker from './controls/MyDatePicker';\r\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport './destxt.css'\r\nimport { SampleContext } from './context/SampleContext';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport { border, height } from '@mui/system';\r\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport {Button as MuiButton} from '@mui/material';\r\nimport CircleOutlined from \"@mui/icons-material/CircleOutlined\";\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n    creator: 'Jesteena Jose',\r\n    assigned: 'Oliver Ernst, Peter Jones',\r\n    category: 'Paddock',\r\n    dueDate: new Date(),\r\n    priority: 'High',\r\n    started: 'None',\r\n    completed: 'None',\r\n    restartjob: '',\r\n    description: \"Description\",\r\n    notes: \"Notes\",\r\n}\r\n\r\nfunction Jobedit() {\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n    const [priority, setPriority] = React.useState(1);\r\n    const { bool, setbool } = React.useContext(SampleContext);\r\n    const [status, setstatus] = React.useState(1);\r\n    const [startdate, setstartdate] = React.useState('None');\r\n    const [starttime, setstarttime] = React.useState('');\r\n    const [enddate, setenddate] = React.useState('None');\r\n    const [endtime, setendtime] = React.useState('');\r\n    const [img, setimg] = React.useState(<CircleOutlined sx={{ color: \"#0000CD\" }} />);\r\n    const date = \"\";\r\n    var d = 3;\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(jobAssign.getStatus()[d - 1].icon);\r\n        if (d == 3 || (status <= 2 && d > 3)) {\r\n            const current = new Date();\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setstartdate(date);\r\n            setstarttime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n        }\r\n        if (d == 5) {\r\n            const current = new Date();\r\n            setChecked(true);\r\n            setbool(true);\r\n            const date = current.toLocaleDateString('en-GB',\r\n                {\r\n                    day: '2-digit', month: 'long', year: 'numeric'\r\n                }).replace(/ /g, ' ');\r\n            setenddate(date);\r\n            setendtime(current.toLocaleTimeString(\"en-US\",\r\n                {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                }));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setChecked(false);\r\n        setbool(false);\r\n        setenddate('None');\r\n        setendtime('');\r\n        setstatus(3);\r\n        setimg(jobAssign.getStatus()[2].icon);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={11}>\r\n                <div className=\"pdf\">\r\n            <MuiButton >\r\n            <PictureAsPdfOutlinedIcon color=\"error\" fontSize=\"Large\"/></MuiButton></div>\r\n            \r\n\r\n            <br />\r\n\r\n                    <Input\r\n                        name=\"creator\"\r\n                        label=\"CREATOR\"\r\n                        value={values.creator}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n                    />\r\n                    <SelectCheck\r\n                        name=\"assigned\"\r\n                        label=\"ASSIGNED\"\r\n                        value={values.assigned}\r\n                        onChange={handleInputChange}\r\n                        restart={bool}\r\n\r\n                    />\r\n                    <br /><br />\r\n                    <Category\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={jobAssign.getCategory()}\r\n                        restart={bool}\r\n                    />\r\n                    <Grid container spacing={10}>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <MyDatePicker\r\n                                name=\"dueDate\"\r\n                                label=\"Due Date\"\r\n                                value={values.dueDate}\r\n                                onChange={handleInputChange}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                label=\"PRIORITY\"\r\n                                value={values.priority || 'Low'}\r\n                                onChange={handleInputChange}\r\n                                options={jobAssign.getPriority()}\r\n                                restart={bool}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel >STARTED</InputLabel>\r\n                                \r\n                                <p>{startdate}</p>\r\n                                <p>{starttime}</p>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>COMPLETED</InputLabel>\r\n                                <p>{enddate}</p>\r\n                                <p>{endtime}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid container spacing={0} alignItems=\"center\">\r\n                            <Grid item xs={0} sm={0} md={0}>\r\n                                <br />\r\n                                {img}\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6}>\r\n                                <FormControl\r\n                                    variant=\"standard\">\r\n                                    <InputLabel>STATUS</InputLabel>\r\n                                    <MuiSelect\r\n                                        label=\"STATUS\"\r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={handleChange}\r\n                                        inputProps={{ readOnly: bool }}>\r\n                                        {\r\n                                            jobAssign.getStatus().map(\r\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                            )\r\n                                        }\r\n                                    </MuiSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={5} md={5}>\r\n                                <Fade in={checked}>\r\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\r\n                                </Fade>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                    </Grid>\r\n            </Grid>\r\n                    <br />\r\n                    <div className=\"des\">\r\n                        <label>DESCRIPTION</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool} value={values.description}/>\r\n                    <div className=\"des\">\r\n                        <label>NOTES</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}} value={values.notes}/>\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default Jobedit\r\n\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\FertiliserTable.js",["506"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Fertiliser.css\"\r\n\r\n\r\nexport default function FertiliserTable()  {\r\n    const [state, setState] = React.useState(\"FERTILISERS\"); \r\n\r\n      return (\r\n        <div className=\"fertiliser\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='FERTILISERS'\r\n              active={state === 'FERTILISERS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"FERTILISERS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='STOKETAKE'\r\n              active={state === 'STOCKTAKE'}\r\n              onClick={() => setState(\"STOCKTAKE\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\GFS_Trace\\src\\Data\\UserData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\ReportTableDetails.js",[],"D:\\GFS_Trace\\src\\Data\\VetTreatmentData.js",[],"D:\\GFS_Trace\\src\\Data\\PlantingData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\InventoryWaterTable.js",["507"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Water.css\"\r\n\r\n\r\nexport default function InventoryWaterTable()  {\r\n    const [state, setState] = React.useState(\"STORAGES\"); \r\n\r\n      return (\r\n        <div className=\"water\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='STORAGES'\r\n              active={state === 'STORAGES'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"STORAGES\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\GFS_Trace\\src\\Data\\GrazingData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tabledetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ChemicalReport.js",["508","509"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { chemicalreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction ChemicalReport() {\r\n    const [data, setData] = React.useState(chemicalreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Chemicals\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChemicalReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\GrainReport.js",["510","511"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { grainreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction GrainReport() {\r\n    const [data, setData] = React.useState(grainreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Cultivar', field: 'cultivar',\r\n      },\r\n      {\r\n        title: 'Amount', field: 'amount',\r\n      },\r\n      {\r\n        title: 'Operators', field: 'operators',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Grain\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GrainReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FarmReport.js",["512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { farmreport_data } from './ReportTableData';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Grid } from '@mui/material';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport Export from './export.png';\r\nfunction FarmReport() {\r\n  const [data, setData] = React.useState(farmreport_data);\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [activity, setactivity] = React.useState(false);\r\n  let farms = null;\r\n  let column=null;\r\n  const type = [\"fa1\", \"fa2\", \"fa3\"];\r\n  const [field, setfield] = React.useState(\"\");\r\n  const options = [\r\n    { key: 'Approved', text: 'Approved', value: 'Approved' },\r\n    { key: 'Not Approved', text: 'Not Approved', value: 'Not Approved' },\r\n    { key: 'Charged Out', text: 'Charged Out', value: 'Charged Out' },\r\n    { key: 'Not Charged Out', text: 'Not Charged Out', value: 'Not Charged Out' },]\r\n  const handleChange = (event) => {\r\n    setfield(event.target.value);\r\n  };\r\n  const columns_all = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Activity', field: 'activity',\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: \"Farms\", field: \"farms\",\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns_all_activity = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: \"Farms\", field: \"farms\",\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Activity', field: 'activity',\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  const columns_activity = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Status', field: 'status',\r\n  },\r\n  {\r\n    title: \"Contract\", field: \"contract\",\r\n  },\r\n  {\r\n    title: 'Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Paddocks', field: 'paddocks',\r\n  },\r\n  {\r\n    title: 'Area', field: 'area',\r\n  },\r\n  {\r\n    title: 'Completed', field: 'completed',\r\n  },\r\n  ]\r\n  if (selected == true) {\r\n    farms = <div><select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\r\n  }\r\n  if (selected == false && activity == false){\r\n      column=columns_all\r\n  }\r\n  else if(selected==false && activity==true){\r\n    column=columns_all_activity\r\n  }\r\n  else if(selected == true && activity == false){\r\n    column=columns\r\n  }\r\n  else if(selected == true && activity == true){\r\n    column=columns_activity\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 2, sm: 3, md: 4 }}>\r\n        <Grid item xs={2}>\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\r\n            <option value=\"\" >Activities - All Farms</option>\r\n            <option value={2} >Activities - Selective</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {farms}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={(event)=>{if (event.target.value==\"\") {\r\n            setactivity(false)\r\n          }\r\n          else{\r\n            setactivity(true)\r\n          }}}>\r\n            <option value=\"\" >All</option>\r\n            <option value={1} >Spray Logs</option>\r\n            <option value={2} >Spreading</option>\r\n            <option value={3} >Planting</option>\r\n            <option value={4} >Maintenance</option>\r\n            <option value={5}>Harvest</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Dropdown multiple selection show options={options}/>\r\n        </Grid>\r\n        </Grid>\r\n        <br/><br/><br/><br/>\r\n      <MaterialTable title=\"Farms\"\r\n        data={data}\r\n        columns={column}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          search: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FertiliserReport.js",["525","526"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { fertiliserreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction FertiliserReport() {\r\n    const [data, setData] = React.useState(fertiliserreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Fertilisers', field: 'fertilisers',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Fertiliser\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n            search:false,\r\n            exportButton: true,\r\n          }}\r\n          icons={{\r\n            Export: () => <img src={Export}></img>,\r\n          }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FertiliserReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\FuelReport.js",["527","528"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { fuelreport_data } from './ReportTableData';\r\nimport Export from './export.png';\r\nfunction FuelReport() {\r\n    const [data, setData] = React.useState(fuelreport_data)\r\n    const columns = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: \"Category\", field: \"category\",\r\n      },\r\n      {\r\n        title: 'Fuel', field: 'fuel',\r\n      },\r\n      {\r\n        title: 'Amount', field: 'amount',\r\n      },\r\n      {\r\n        title: 'Operator', field: 'operator',\r\n      },\r\n      ]\r\n    return (\r\n        <div>\r\n      <MaterialTable title=\"Fuel\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FuelReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\EquipmentReport.js",["529","530","531"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { equipmentreport_data } from './ReportTableData';\r\nimport { Grid } from '@mui/material';\r\nimport Export from './export.png';\r\nfunction EquipmentReport() {\r\n  const [data, setData] = React.useState(equipmentreport_data);\r\n  const [selected, toggleselected] = React.useState(false);\r\n  let options = null;\r\n  const type = [\"cat1\", \"cat2\", \"cat3\"];\r\n  if (selected == true) {\r\n    options = <div><div class=\"default text\">Equipment</div> <select class=\"ui dropdown\" style={{ width: 200 }}>{type.map((el) => <option key={el}>{el}</option>)}</select></div>;\r\n  }\r\n  const columns = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',\r\n  },\r\n  {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Task Category', field: 'category',\r\n  },\r\n  {\r\n    title: 'Task Description', field: 'description',\r\n  },\r\n  ]\r\n  const columns_all = [{\r\n    title: 'Date', field: 'date',\r\n  },\r\n  {\r\n    title: \"Equipment\", field: \"equipment\",\r\n  },\r\n  {\r\n    title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Type', field: 'type',\r\n  },\r\n  {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Task Category', field: 'category',\r\n  },\r\n  {\r\n    title: 'Task Description', field: 'description',\r\n  },\r\n  ]\r\n  return (\r\n    <div>\r\n      <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n        <Grid item xs={2}>\r\n          <br />\r\n          <select class=\"ui dropdown\" style={{ width: 200 }} onChange={() => toggleselected(!selected)}>\r\n            <option value=\"\" >Fuel Tickets - All</option>\r\n            <option value={2} >Fuel Ticket</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {options}\r\n        </Grid>\r\n      </Grid>\r\n      <MaterialTable title=\"Equipment\"\r\n        data={data}\r\n        columns={selected ? columns : columns_all}\r\n        options={{\r\n          search: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EquipmentReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\PaddockReport.js",["532","533","534","535","536","537","538"],"import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { paddockreport_data } from './ReportTableData';\r\nimport { Grid } from '@mui/material';\r\nimport Export from './export.png';\r\nfunction PaddockReport() {\r\n    const [data, setData] = React.useState(paddockreport_data)\r\n    const [field,setfield]=React.useState(\"\");\r\n    const [attribute,setattribute]=React.useState(\"\");\r\n    let columns=null;\r\n    const handleChange = (event) => {\r\n      setfield(event.target.value);\r\n    };\r\n    const columns_spray = [{\r\n      title: 'Date', field: 'date',\r\n    },\r\n    {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_spreading = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Fertilisers', field: 'fertilisers',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_maintainance = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Category', field: 'category',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      const columns_harvest = [{\r\n        title: 'Date', field: 'date',\r\n      },\r\n      {\r\n        title: 'Status', field: 'status',\r\n      },\r\n      {\r\n        title: \"Contract\", field: \"contract\",\r\n      },\r\n      {\r\n        title: 'Description', field: 'description',\r\n      },\r\n      {\r\n        title: 'Completed', field: 'completed',\r\n      },\r\n      ]\r\n      if(attribute==\"\"){\r\n        columns=columns_spray\r\n      }\r\n      else if(attribute==\"3\" || attribute==\"2\"){\r\n        columns=columns_spreading\r\n      }\r\n      else if(attribute==\"4\"){\r\n        columns=columns_maintainance\r\n      }\r\n      else{\r\n        columns=columns_harvest\r\n      }\r\n    return (\r\n        <div>\r\n           <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n           <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={(e)=>setattribute(e.target.value)}>\r\n            <option value=\"\" >Spray Logs</option>\r\n            <option value={2} >Spreading</option>\r\n            <option value={3} >Planting</option>\r\n            <option value={4} >Maintenance</option>\r\n            <option value={5}>Harvest</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\r\n            <option value=\"\" >abc</option>\r\n            <option value={2} >pqr</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        <select class=\"ui dropdown\" style={{ width: 200}} onChange={handleChange}>\r\n            <option value=\"\" >xyz</option>\r\n            <option value={2} >wxy</option>\r\n          </select>\r\n        </Grid>\r\n        </Grid>\r\n      <MaterialTable title=\"Paddocks\"\r\n        data={data}\r\n        columns={columns}\r\n        options={{\r\n          search:false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PaddockReport\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\Useform.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\Useform.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\MyDatePicker.js",["539"],"import React from 'react'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\n\r\nexport default function MyDatePicker(props) {\r\n\r\n    const { name, label, value, onChange,restart } = props\r\n\r\n    const convertToDefEventPara=(name,value)=>({\r\n        target:{\r\n            name,value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\r\n                label={label}\r\n                format=\"dd/MM/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date => onChange(convertToDefEventPara(name,date))}\r\n                inputProps={{ readOnly:restart }}\r\n            />\r\n\r\n\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\SelectCheck.js",["540"],"import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  const { name, label, value,restart} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\">\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect\r\n        label={label}\r\n        multiple\r\n        name={name}\r\n        value={personName}\r\n        onChange={handleChange}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n        inputProps={{ readOnly:restart }}\r\n      >\r\n        {names.map((name) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={personName.indexOf(name) > -1} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </MuiSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Category.js",["541","542","543","544","545","546","547","548","549","550"],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport question from './question mark.png'\r\n\r\nexport default function Category(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [category, setcategory] = React.useState(\"\");\r\n    const [cat, setcat] = React.useState({});\r\n    const [img, setimg] = React.useState(question);\r\n    const [img1, setimg1] = React.useState(question);\r\n    var changeCategory = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"CATEGORY\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const handleChange = (event, value) => {\r\n        setcategory(event.target.value);\r\n        changeCategory = event.target.value;\r\n        setfieldval(value.props.children)\r\n        setcat({})\r\n        flag=0;\r\n        const arr = options.filter(\r\n            a => (a.id === changeCategory)\r\n        )\r\n        if (changeCategory != \"\") {\r\n            setc(arr[0].data);\r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(options[changeCategory - 1].icon);\r\n        }\r\n        else{\r\n            setc({});\r\n            setfieldval(\"CATEGORY\")\r\n            setSubfieldval(\"None\");\r\n            setfieldfarm(\"\");\r\n            setimg1(question);\r\n        }\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setcat(values => ({ ...values, [name]: value }))\r\n        console.log(cat);\r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleOk = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            if (subfieldval==\"\") {\r\n                alert(\"No \"+fieldval+\" Selected\")\r\n            }\r\n            else{\r\n                if(fieldfarm!=\"\"){\r\n                    setfield(fieldval);\r\n                    setSubfield(fieldfarm + subfieldval);\r\n                    setimg(img1)\r\n                    setOpen(false);\r\n                }\r\n                else{\r\n                    if(category==1 ||category==5){\r\n                        setfield(fieldval);\r\n                        setSubfield(fieldfarm + subfieldval);\r\n                        setimg(img1)\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const { name, label, value, onChange, options, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <InputLabel>{field}</InputLabel>\r\n                        <p>{subfield}</p>\r\n                    </Grid>\r\n                </Grid>\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Job Category</DialogTitle>\r\n                <DialogContent >\r\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>{label}</InputLabel>\r\n                            <MuiSelect\r\n                                label={label}\r\n                                name={name}\r\n                                value={category}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        {\r\n                            Object.entries(c).map(\r\n                                ([key, val]) => (\r\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                        <InputLabel>{key}</InputLabel>\r\n                                        <MuiSelect\r\n                                            name={key}\r\n                                            label={key}\r\n                                            value={cat[key]}\r\n                                            onChange={handleChange1}\r\n                                        >\r\n                                            {\r\n                                                val.map(\r\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\r\n                                                )\r\n                                            }\r\n                                        </MuiSelect>\r\n                                    </FormControl>)\r\n                            )\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={handleOk}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Input.js",["551","552"],"import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nfunction Input(props) {\r\n    const { name, label, value, onChange } = props\r\n    return (\r\n        <TextField           \r\n            variant=\"standard\"\r\n            name={name}\r\n            label={label}\r\n            value=\"JESTEENA JOSE\"\r\n            InputProps={{\r\n                readOnly: true,\r\n              }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\controls\\Select.js",["553","554"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value, onChange, options,restart } = props;\r\n    const [img, setimg] = React.useState();\r\n    const [status, setstatus] = React.useState('');\r\n    var d = 3;\r\n\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n        d = event.target.value;\r\n        setimg(options[d - 1].icon);\r\n    }\r\n    return (\r\n        <Grid container spacing={0} alignItems=\"center\">\r\n            <Grid item>\r\n                <br />\r\n                {img}\r\n            </Grid>\r\n            <Grid item xs={12} md={10}>\r\n                <FormControl\r\n                    variant=\"standard\">\r\n                    <InputLabel>{label}</InputLabel>\r\n                    <MuiSelect\r\n                        label={label}\r\n                        name={name}\r\n                        value={status}\r\n                        onChange={handleChange}\r\n                        inputProps={{ readOnly:restart }}>\r\n                        {\r\n                            options.map(\r\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                            )\r\n                        }\r\n                    </MuiSelect>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Category.js",["555","556","557","558","559","560","561","562","563","564"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\JobEdit\\services\\JobAssign.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\MyDatePicker.js",["565"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\services\\JobAssign.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Select.js",["566","567"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\SelectCheck.js",["568"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\NewJob\\controls\\Input.js",["569","570"],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\WaterStorageTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tabledetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\StockTake.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Outgoing.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Fertilisers.js",["571"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { fertiliser_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Fertilisers() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(fertiliser_data)\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Form', field: 'form',\r\n    },\r\n    {\r\n        title: 'Nutrients', field: 'nutrients',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    }]\r\n    const columns_archived = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Form', field: 'form',\r\n    },\r\n    {\r\n        title: 'Nutrients', field: 'nutrients',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"FERTILISERS\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived Fertilisers\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Ingoing.js",[],"D:\\GFS_Trace\\src\\components\\pages\\CustomReport\\Tables\\ReportTableData.js",[],"D:\\GFS_Trace\\src\\Data\\WaterStorageData.js",[],"D:\\GFS_Trace\\src\\Data\\SiloData.js",[],"D:\\GFS_Trace\\src\\Data\\FuelTankData.js",[],"D:\\GFS_Trace\\src\\Data\\PaddockData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Storages.js",["572"],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Ingoing.js",["573"],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\Water\\Tables\\Outgoing.js",["574"],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\FertilizerInventory\\Tables\\Tabledatas.js",[],"D:\\GFS_Trace\\src\\Data\\InventoryWaterData.js",["575","576","577","578"],"export const storages_data=[\r\n    {\r\n        farm:'abcdef',name:'asdwef',capacity:'5000L',contents:'Empty',\r\n        farm:'farm2',name:'d12ad',capacity:'50000L',contents:'Empty'\r\n    }\r\n];\r\n\r\nexport const ingoing_data=[];\r\n\r\nexport const outgoing_data=[];","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\InventoryChemicalTable.js",["579"],"import React, {useState} from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport {Menu} from 'semantic-ui-react';\r\nimport TableDetails from './Tabledetails'\r\nimport \"./Chemical.css\"\r\n\r\n\r\nexport default function InventoryChemicalTable()  {\r\n    const [state, setState] = React.useState(\"CHEMICALS\"); \r\n\r\n      return (\r\n        <div className=\"chemical\">\r\n          <Menu pointing>\r\n            <Menu.Item\r\n              name='CHEMICALS'\r\n              active={state === 'CHEMICALS'}\r\n             color=\"green\"\r\n             onClick={() => setState(\"CHEMICALS\")}\r\n            />\r\n            <Menu.Item\r\n              name='INGOING'\r\n              active={state === 'INGOING'}\r\n              onClick={() => setState(\"INGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='OUTGOING'\r\n              active={state === 'OUTGOING'}\r\n              onClick={() => setState(\"OUTGOING\")}\r\n              color=\"green\"\r\n            />\r\n            <Menu.Item\r\n              name='STOCKTAKE'\r\n              active={state === 'STOCKTAKE'}\r\n              onClick={() => setState(\"STOCKTAKE\")}\r\n              color=\"green\"\r\n            />\r\n          \r\n           \r\n          </Menu>\r\n          <Segment attached='bottom'>\r\n         <TableDetails dataValue={state}/>\r\n        </Segment>\r\n         \r\n        </div>\r\n    );\r\n  }","D:\\GFS_Trace\\src\\Data\\HarvestData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tabledetails.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\StockTake.js",["580"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { stocktake_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function StockTake() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(stocktake_data)\r\n    const columns = [\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Reported', field: 'report',\r\n    }]\r\n    const columns_archived = [\r\n      {\r\n          title: 'Date', field: 'date',\r\n      }, {\r\n          title: 'Operator', field: 'operator',\r\n      },\r\n      {\r\n          title: 'Chemicals', field: 'chemicals',\r\n      },\r\n      {\r\n          title: 'Reported', field: 'report',\r\n      },\r\n      {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STOCKTAKE\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Chemicals.js",["581","582"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport { chemicals_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Chemicals() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(chemicals_data)\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    }]\r\n    const columns_archived = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Resistance Group', field: 'resistancegrp',\r\n    },\r\n    {\r\n        title: 'Actives', field: 'actives',\r\n    }, {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: \"Archived\",\r\n        field: \"archived\",\r\n      },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CHEMICALS\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived Chemicals\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Outgoing.js",["583"],"import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { outgoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Outgoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [data, setData] = React.useState(outgoing_data)\r\n  const columns = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  }]\r\n  const columns_archived = [{\r\n    title: 'Job Type', field: 'type'\r\n  },\r\n  {\r\n    title: 'Job Description', field: 'description',\r\n  },\r\n  {\r\n    title: 'Date', field: 'date',\r\n  }, {\r\n    title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n    title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"OUTGOING\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived Tickets\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","D:\\GFS_Trace\\src\\components\\pages\\Inventory\\InventoryChemical\\Tables\\Ingoing.js",["584"],"import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryChemicalData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Supplier', field: 'supplier'\r\n    },\r\n    {\r\n        title: 'Docket No.', field: 'docket',\r\n    },\r\n    {\r\n        title: 'Date', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Chemicals', field: 'chemicals',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Supplier', field: 'supplier'\r\n  },\r\n  {\r\n      title: 'Docket No.', field: 'docket',\r\n  },\r\n  {\r\n      title: 'Date', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Chemicals', field: 'chemicals',\r\n  },\r\n  {\r\n      title: 'Notes', field: 'notes',\r\n  },\r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}","D:\\GFS_Trace\\src\\Data\\InventoryChemicalData.js",[],"D:\\GFS_Trace\\src\\components\\pages\\Job\\Useform.js",["585","586"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\SelectCheck.js",["587"],"import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  const { name, label, value,restart} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  return (\r\n    <FormControl fullWidth\r\n      variant=\"standard\">\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect\r\n        label={label}\r\n        multiple\r\n        name={name}\r\n        value={personName}\r\n        onChange={handleChange}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n        inputProps={{ readOnly:restart }}\r\n      >\r\n        {names.map((name) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={personName.indexOf(name) > -1} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </MuiSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n","D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\MyDatePicker.js",["588"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\Select.js",["589","590"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\controls\\Category.js",["591","592","593","594","595","596","597","598","599","600"],"D:\\GFS_Trace\\src\\components\\pages\\Job\\services\\JobAssign.js",[],{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","replacedBy":"604"},{"ruleId":"605","severity":1,"message":"606","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":26},{"ruleId":"605","severity":1,"message":"609","line":3,"column":47,"nodeType":"607","messageId":"608","endLine":3,"endColumn":52},{"ruleId":"605","severity":1,"message":"610","line":42,"column":11,"nodeType":"607","messageId":"608","endLine":42,"endColumn":26},{"ruleId":"611","severity":1,"message":"612","line":70,"column":7,"nodeType":"613","messageId":"614","endLine":70,"endColumn":13},{"ruleId":"605","severity":1,"message":"615","line":124,"column":5,"nodeType":"607","messageId":"608","endLine":124,"endColumn":14},{"ruleId":"605","severity":1,"message":"616","line":135,"column":7,"nodeType":"607","messageId":"608","endLine":135,"endColumn":11},{"ruleId":"617","severity":1,"message":"618","line":143,"column":11,"nodeType":"619","messageId":"614","endLine":143,"endColumn":13},{"ruleId":"617","severity":1,"message":"618","line":156,"column":11,"nodeType":"619","messageId":"614","endLine":156,"endColumn":13},{"ruleId":"605","severity":1,"message":"620","line":2,"column":8,"nodeType":"607","messageId":"608","endLine":2,"endColumn":16},{"ruleId":"605","severity":1,"message":"621","line":3,"column":8,"nodeType":"607","messageId":"608","endLine":3,"endColumn":19},{"ruleId":"605","severity":1,"message":"622","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":14},{"ruleId":"605","severity":1,"message":"623","line":11,"column":10,"nodeType":"607","messageId":"608","endLine":11,"endColumn":17},{"ruleId":"605","severity":1,"message":"624","line":2,"column":25,"nodeType":"607","messageId":"608","endLine":2,"endColumn":31},{"ruleId":"605","severity":1,"message":"625","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":18},{"ruleId":"626","severity":1,"message":"627","line":72,"column":6,"nodeType":"628","endLine":72,"endColumn":8,"suggestions":"629"},{"ruleId":"630","severity":1,"message":"631","line":45,"column":6,"nodeType":"632","endLine":45,"endColumn":125},{"ruleId":"630","severity":1,"message":"631","line":47,"column":7,"nodeType":"632","endLine":47,"endColumn":126},{"ruleId":"630","severity":1,"message":"631","line":49,"column":7,"nodeType":"632","endLine":49,"endColumn":126},{"ruleId":"633","severity":1,"message":"634","line":9,"column":7,"nodeType":"632","endLine":9,"endColumn":76},{"ruleId":"605","severity":1,"message":"615","line":34,"column":9,"nodeType":"607","messageId":"608","endLine":34,"endColumn":18},{"ruleId":"605","severity":1,"message":"616","line":45,"column":11,"nodeType":"607","messageId":"608","endLine":45,"endColumn":15},{"ruleId":"617","severity":1,"message":"618","line":53,"column":15,"nodeType":"619","messageId":"614","endLine":53,"endColumn":17},{"ruleId":"617","severity":1,"message":"618","line":66,"column":15,"nodeType":"619","messageId":"614","endLine":66,"endColumn":17},{"ruleId":"605","severity":1,"message":"635","line":14,"column":10,"nodeType":"607","messageId":"608","endLine":14,"endColumn":16},{"ruleId":"605","severity":1,"message":"636","line":14,"column":18,"nodeType":"607","messageId":"608","endLine":14,"endColumn":24},{"ruleId":"605","severity":1,"message":"615","line":39,"column":9,"nodeType":"607","messageId":"608","endLine":39,"endColumn":18},{"ruleId":"605","severity":1,"message":"637","line":43,"column":12,"nodeType":"607","messageId":"608","endLine":43,"endColumn":20},{"ruleId":"605","severity":1,"message":"638","line":43,"column":22,"nodeType":"607","messageId":"608","endLine":43,"endColumn":33},{"ruleId":"605","severity":1,"message":"616","line":51,"column":11,"nodeType":"607","messageId":"608","endLine":51,"endColumn":15},{"ruleId":"617","severity":1,"message":"618","line":59,"column":15,"nodeType":"619","messageId":"614","endLine":59,"endColumn":17},{"ruleId":"617","severity":1,"message":"618","line":72,"column":15,"nodeType":"619","messageId":"614","endLine":72,"endColumn":17},{"ruleId":"605","severity":1,"message":"639","line":1,"column":16,"nodeType":"607","messageId":"608","endLine":1,"endColumn":24},{"ruleId":"605","severity":1,"message":"639","line":1,"column":16,"nodeType":"607","messageId":"608","endLine":1,"endColumn":24},{"ruleId":"605","severity":1,"message":"640","line":6,"column":18,"nodeType":"607","messageId":"608","endLine":6,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":30,"column":25,"nodeType":"632","endLine":30,"endColumn":43},{"ruleId":"605","severity":1,"message":"640","line":6,"column":18,"nodeType":"607","messageId":"608","endLine":6,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":33,"column":25,"nodeType":"632","endLine":33,"endColumn":43},{"ruleId":"605","severity":1,"message":"641","line":16,"column":10,"nodeType":"607","messageId":"608","endLine":16,"endColumn":15},{"ruleId":"605","severity":1,"message":"642","line":22,"column":9,"nodeType":"607","messageId":"608","endLine":22,"endColumn":21},{"ruleId":"617","severity":1,"message":"618","line":125,"column":16,"nodeType":"619","messageId":"614","endLine":125,"endColumn":18},{"ruleId":"617","severity":1,"message":"618","line":128,"column":16,"nodeType":"619","messageId":"614","endLine":128,"endColumn":18},{"ruleId":"617","severity":1,"message":"618","line":128,"column":37,"nodeType":"619","messageId":"614","endLine":128,"endColumn":39},{"ruleId":"617","severity":1,"message":"618","line":131,"column":19,"nodeType":"619","messageId":"614","endLine":131,"endColumn":21},{"ruleId":"617","severity":1,"message":"618","line":131,"column":38,"nodeType":"619","messageId":"614","endLine":131,"endColumn":40},{"ruleId":"617","severity":1,"message":"618","line":134,"column":20,"nodeType":"619","messageId":"614","endLine":134,"endColumn":22},{"ruleId":"617","severity":1,"message":"618","line":134,"column":40,"nodeType":"619","messageId":"614","endLine":134,"endColumn":42},{"ruleId":"617","severity":1,"message":"618","line":137,"column":20,"nodeType":"619","messageId":"614","endLine":137,"endColumn":22},{"ruleId":"617","severity":1,"message":"618","line":137,"column":40,"nodeType":"619","messageId":"614","endLine":137,"endColumn":42},{"ruleId":"617","severity":1,"message":"618","line":153,"column":104,"nodeType":"619","messageId":"614","endLine":153,"endColumn":106},{"ruleId":"633","severity":1,"message":"634","line":205,"column":25,"nodeType":"632","endLine":205,"endColumn":43},{"ruleId":"605","severity":1,"message":"640","line":6,"column":18,"nodeType":"607","messageId":"608","endLine":6,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":30,"column":27,"nodeType":"632","endLine":30,"endColumn":45},{"ruleId":"605","severity":1,"message":"640","line":6,"column":18,"nodeType":"607","messageId":"608","endLine":6,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":33,"column":25,"nodeType":"632","endLine":33,"endColumn":43},{"ruleId":"605","severity":1,"message":"640","line":7,"column":16,"nodeType":"607","messageId":"608","endLine":7,"endColumn":23},{"ruleId":"617","severity":1,"message":"618","line":11,"column":16,"nodeType":"619","messageId":"614","endLine":11,"endColumn":18},{"ruleId":"633","severity":1,"message":"634","line":77,"column":25,"nodeType":"632","endLine":77,"endColumn":43},{"ruleId":"605","severity":1,"message":"640","line":7,"column":18,"nodeType":"607","messageId":"608","endLine":7,"endColumn":25},{"ruleId":"605","severity":1,"message":"641","line":8,"column":12,"nodeType":"607","messageId":"608","endLine":8,"endColumn":17},{"ruleId":"617","severity":1,"message":"618","line":87,"column":19,"nodeType":"619","messageId":"614","endLine":87,"endColumn":21},{"ruleId":"617","severity":1,"message":"618","line":90,"column":24,"nodeType":"619","messageId":"614","endLine":90,"endColumn":26},{"ruleId":"617","severity":1,"message":"618","line":90,"column":42,"nodeType":"619","messageId":"614","endLine":90,"endColumn":44},{"ruleId":"617","severity":1,"message":"618","line":93,"column":24,"nodeType":"619","messageId":"614","endLine":93,"endColumn":26},{"ruleId":"633","severity":1,"message":"634","line":132,"column":25,"nodeType":"632","endLine":132,"endColumn":43},{"ruleId":"605","severity":1,"message":"643","line":2,"column":55,"nodeType":"607","messageId":"608","endLine":2,"endColumn":71},{"ruleId":"605","severity":1,"message":"644","line":28,"column":24,"nodeType":"607","messageId":"608","endLine":28,"endColumn":29},{"ruleId":"605","severity":1,"message":"645","line":19,"column":9,"nodeType":"607","messageId":"608","endLine":19,"endColumn":13},{"ruleId":"605","severity":1,"message":"646","line":20,"column":11,"nodeType":"607","messageId":"608","endLine":20,"endColumn":14},{"ruleId":"617","severity":1,"message":"647","line":37,"column":28,"nodeType":"619","messageId":"614","endLine":37,"endColumn":30},{"ruleId":"617","severity":1,"message":"618","line":57,"column":18,"nodeType":"619","messageId":"614","endLine":57,"endColumn":20},{"ruleId":"617","severity":1,"message":"618","line":79,"column":28,"nodeType":"619","messageId":"614","endLine":79,"endColumn":30},{"ruleId":"617","severity":1,"message":"647","line":83,"column":29,"nodeType":"619","messageId":"614","endLine":83,"endColumn":31},{"ruleId":"617","severity":1,"message":"618","line":90,"column":32,"nodeType":"619","messageId":"614","endLine":90,"endColumn":34},{"ruleId":"617","severity":1,"message":"618","line":90,"column":46,"nodeType":"619","messageId":"614","endLine":90,"endColumn":48},{"ruleId":"605","severity":1,"message":"644","line":102,"column":26,"nodeType":"607","messageId":"608","endLine":102,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":102,"column":33,"nodeType":"607","messageId":"608","endLine":102,"endColumn":41},{"ruleId":"605","severity":1,"message":"644","line":5,"column":26,"nodeType":"607","messageId":"608","endLine":5,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":5,"column":33,"nodeType":"607","messageId":"608","endLine":5,"endColumn":41},{"ruleId":"605","severity":1,"message":"644","line":6,"column":26,"nodeType":"607","messageId":"608","endLine":6,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":6,"column":33,"nodeType":"607","messageId":"608","endLine":6,"endColumn":41},{"ruleId":"605","severity":1,"message":"645","line":19,"column":9,"nodeType":"607","messageId":"608","endLine":19,"endColumn":13},{"ruleId":"605","severity":1,"message":"646","line":20,"column":11,"nodeType":"607","messageId":"608","endLine":20,"endColumn":14},{"ruleId":"617","severity":1,"message":"647","line":37,"column":28,"nodeType":"619","messageId":"614","endLine":37,"endColumn":30},{"ruleId":"617","severity":1,"message":"618","line":57,"column":18,"nodeType":"619","messageId":"614","endLine":57,"endColumn":20},{"ruleId":"617","severity":1,"message":"618","line":79,"column":28,"nodeType":"619","messageId":"614","endLine":79,"endColumn":30},{"ruleId":"617","severity":1,"message":"647","line":83,"column":29,"nodeType":"619","messageId":"614","endLine":83,"endColumn":31},{"ruleId":"617","severity":1,"message":"618","line":90,"column":32,"nodeType":"619","messageId":"614","endLine":90,"endColumn":34},{"ruleId":"617","severity":1,"message":"618","line":90,"column":46,"nodeType":"619","messageId":"614","endLine":90,"endColumn":48},{"ruleId":"605","severity":1,"message":"644","line":102,"column":26,"nodeType":"607","messageId":"608","endLine":102,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":102,"column":33,"nodeType":"607","messageId":"608","endLine":102,"endColumn":41},{"ruleId":"605","severity":1,"message":"643","line":2,"column":55,"nodeType":"607","messageId":"608","endLine":2,"endColumn":71},{"ruleId":"605","severity":1,"message":"644","line":6,"column":26,"nodeType":"607","messageId":"608","endLine":6,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":6,"column":33,"nodeType":"607","messageId":"608","endLine":6,"endColumn":41},{"ruleId":"605","severity":1,"message":"644","line":28,"column":24,"nodeType":"607","messageId":"608","endLine":28,"endColumn":29},{"ruleId":"605","severity":1,"message":"644","line":5,"column":26,"nodeType":"607","messageId":"608","endLine":5,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":5,"column":33,"nodeType":"607","messageId":"608","endLine":5,"endColumn":41},{"ruleId":"605","severity":1,"message":"640","line":8,"column":18,"nodeType":"607","messageId":"608","endLine":8,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":69,"column":35,"nodeType":"632","endLine":69,"endColumn":53},{"ruleId":"633","severity":1,"message":"634","line":101,"column":35,"nodeType":"632","endLine":101,"endColumn":53},{"ruleId":"633","severity":1,"message":"634","line":109,"column":25,"nodeType":"632","endLine":109,"endColumn":43},{"ruleId":"611","severity":1,"message":"649","line":4,"column":9,"nodeType":"613","messageId":"614","endLine":4,"endColumn":13},{"ruleId":"611","severity":1,"message":"650","line":4,"column":22,"nodeType":"613","messageId":"614","endLine":4,"endColumn":26},{"ruleId":"611","severity":1,"message":"651","line":4,"column":35,"nodeType":"613","messageId":"614","endLine":4,"endColumn":43},{"ruleId":"611","severity":1,"message":"652","line":4,"column":53,"nodeType":"613","messageId":"614","endLine":4,"endColumn":61},{"ruleId":"605","severity":1,"message":"639","line":1,"column":16,"nodeType":"607","messageId":"608","endLine":1,"endColumn":24},{"ruleId":"633","severity":1,"message":"634","line":92,"column":35,"nodeType":"632","endLine":92,"endColumn":53},{"ruleId":"605","severity":1,"message":"640","line":9,"column":18,"nodeType":"607","messageId":"608","endLine":9,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":65,"column":35,"nodeType":"632","endLine":65,"endColumn":53},{"ruleId":"633","severity":1,"message":"634","line":103,"column":25,"nodeType":"632","endLine":103,"endColumn":43},{"ruleId":"633","severity":1,"message":"634","line":102,"column":35,"nodeType":"632","endLine":102,"endColumn":53},{"ruleId":"605","severity":1,"message":"653","line":1,"column":8,"nodeType":"607","messageId":"608","endLine":1,"endColumn":13},{"ruleId":"605","severity":1,"message":"654","line":24,"column":7,"nodeType":"607","messageId":"608","endLine":24,"endColumn":16},{"ruleId":"605","severity":1,"message":"644","line":28,"column":24,"nodeType":"607","messageId":"608","endLine":28,"endColumn":29},{"ruleId":"605","severity":1,"message":"643","line":2,"column":55,"nodeType":"607","messageId":"608","endLine":2,"endColumn":71},{"ruleId":"605","severity":1,"message":"644","line":7,"column":26,"nodeType":"607","messageId":"608","endLine":7,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":7,"column":33,"nodeType":"607","messageId":"608","endLine":7,"endColumn":41},{"ruleId":"605","severity":1,"message":"645","line":19,"column":9,"nodeType":"607","messageId":"608","endLine":19,"endColumn":13},{"ruleId":"605","severity":1,"message":"646","line":20,"column":11,"nodeType":"607","messageId":"608","endLine":20,"endColumn":14},{"ruleId":"617","severity":1,"message":"647","line":37,"column":28,"nodeType":"619","messageId":"614","endLine":37,"endColumn":30},{"ruleId":"617","severity":1,"message":"618","line":57,"column":18,"nodeType":"619","messageId":"614","endLine":57,"endColumn":20},{"ruleId":"617","severity":1,"message":"618","line":79,"column":28,"nodeType":"619","messageId":"614","endLine":79,"endColumn":30},{"ruleId":"617","severity":1,"message":"647","line":83,"column":29,"nodeType":"619","messageId":"614","endLine":83,"endColumn":31},{"ruleId":"617","severity":1,"message":"618","line":90,"column":32,"nodeType":"619","messageId":"614","endLine":90,"endColumn":34},{"ruleId":"617","severity":1,"message":"618","line":90,"column":46,"nodeType":"619","messageId":"614","endLine":90,"endColumn":48},{"ruleId":"605","severity":1,"message":"644","line":102,"column":26,"nodeType":"607","messageId":"608","endLine":102,"endColumn":31},{"ruleId":"605","severity":1,"message":"648","line":102,"column":33,"nodeType":"607","messageId":"608","endLine":102,"endColumn":41},"no-native-reassign",["655"],"no-negated-in-lhs",["656"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'render'.","ObjectExpression","unexpected","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'Segment' is defined but never used.","'Column' is defined but never used.","'FaFilter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lsType'. Either include it or remove the dependency array.","ArrayExpression",["657"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'border' is defined but never used.","'height' is defined but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","'useState' is defined but never used.","'setData' is assigned a value but never used.","'field' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'MobileDatePicker' is defined but never used.","'value' is assigned a value but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'onChange' is assigned a value but never used.","Duplicate key 'farm'.","Duplicate key 'name'.","Duplicate key 'capacity'.","Duplicate key 'contents'.","'React' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"658","fix":"659"},"Update the dependencies array to be: [lsType]",{"range":"660","text":"661"},[1657,1659],"[lsType]"]