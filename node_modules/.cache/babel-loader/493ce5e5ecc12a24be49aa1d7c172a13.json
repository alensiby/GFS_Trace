{"ast":null,"code":"var _jsxFileName = \"D:\\\\pull gfs\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\SelectCheck.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Kelly Snyder'];\nconst nozzle = ['Nozzle1', 'Nozzle2'];\nconst paddock = ['Paddock1', 'Paddock2'];\nexport default function SelectCheck(props) {\n  _s();\n\n  const {\n    name,\n    label,\n    value,\n    restart,\n    choice\n  } = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  switch (choice) {\n    case 'names':\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n          label: label,\n          multiple: true,\n          name: name,\n          value: personName,\n          onChange: handleChange,\n          renderValue: selected => selected.join(', '),\n          MenuProps: MenuProps,\n          inputProps: {\n            readOnly: restart\n          },\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: personName.indexOf(name) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n\n    case 'nozzle':\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n          multiple: true,\n          name: name,\n          value: personName,\n          onChange: handleChange,\n          renderValue: selected => selected.join(', '),\n          MenuProps: MenuProps,\n          inputProps: {\n            readOnly: restart\n          },\n          children: nozzle.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: personName.indexOf(name) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n\n    case 'paddock':\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n          label: label,\n          multiple: true,\n          name: name,\n          value: personName,\n          onChange: handleChange,\n          renderValue: selected => selected.join(', '),\n          MenuProps: MenuProps,\n          inputProps: {\n            readOnly: restart\n          },\n          children: paddock.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: personName.indexOf(name) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n  }\n}\n\n_s(SelectCheck, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = SelectCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCheck\");","map":{"version":3,"sources":["D:/pull gfs/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/SelectCheck.js"],"names":["React","FormControl","InputLabel","MenuItem","Select","MuiSelect","ListItemText","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","nozzle","paddock","SelectCheck","props","name","label","value","restart","choice","personName","setPersonName","useState","handleChange","event","target","split","selected","join","readOnly","map","indexOf"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\nconst nozzle = [\r\n  'Nozzle1',\r\n  'Nozzle2',\r\n  \r\n  \r\n];\r\nconst paddock = [\r\n  'Paddock1',\r\n  'Paddock2',\r\n  \r\n  \r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  \r\n  const { name, label, value,restart, choice} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  switch(choice){\r\n    case 'names':\r\n      return (\r\n        <FormControl\r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            label={label}\r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {names.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n      case 'nozzle':\r\n      return (\r\n        <FormControl \r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            \r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {nozzle.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n      case 'paddock':\r\n      return (\r\n        <FormControl\r\n          variant=\"standard\">\r\n          <InputLabel>{label}</InputLabel>\r\n          <MuiSelect\r\n            label={label}\r\n            multiple\r\n            name={name}\r\n            value={personName}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n            inputProps={{ readOnly:restart }}\r\n          >\r\n            {paddock.map((name) => (\r\n              <MenuItem key={name} value={name}>\r\n                <Checkbox checked={personName.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </MuiSelect>\r\n        </FormControl>\r\n      )\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}