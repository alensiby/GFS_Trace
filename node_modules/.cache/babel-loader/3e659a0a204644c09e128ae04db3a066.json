{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Chemicals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport Chemical_img from '../services/chemical.png';\nimport ChemicalData from '../../../../../../Data/ChemicalData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chemicals() {\n  _s();\n\n  const [bool, setbool] = React.useState(false);\n  const [helper, sethelper] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [openedit, setopenedit] = React.useState(false);\n  const units = [{\n    id: 1,\n    title: 'ml/ha'\n  }, {\n    id: 2,\n    title: 'Kg/ha'\n  }, {\n    id: 3,\n    title: 'L/ha'\n  }, {\n    id: 4,\n    title: 'lb/ha'\n  }, {\n    id: 5,\n    title: 'oz/ha'\n  }, {\n    id: 6,\n    title: 'g/ha'\n  }, {\n    id: 7,\n    title: 'floz/ac'\n  }, {\n    id: 8,\n    title: 'qt/ac'\n  }, {\n    id: 9,\n    title: 'pt/ac'\n  }, {\n    id: 10,\n    title: 'oz/ac'\n  }, {\n    id: 11,\n    title: 'lb/ac'\n  }, {\n    id: 12,\n    title: 'g/ac'\n  }, {\n    id: 13,\n    title: 'Kg/1000L'\n  }, {\n    id: 14,\n    title: 't/ha'\n  }, {\n    id: 15,\n    title: 'L/Kg'\n  }, {\n    id: 16,\n    title: 'L/t'\n  }];\n  const SpraylogChemicalData = [{\n    id: 1,\n    chemname: 'Lagon',\n    actives: 'Aclonifene',\n    group: '3',\n    batch: '1234',\n    runit: 'ml/ha',\n    rate: '23',\n    estTotal: '0.8',\n    tunit: 'ml'\n  }, {\n    id: 2,\n    chemname: 'Actara',\n    actives: 'Thiamethoxam',\n    group: '1',\n    batch: '7634',\n    runit: 'Kg/ha',\n    rate: '20',\n    estTotal: '3.6',\n    tunit: 'Kg'\n  }, {\n    id: 3,\n    chemname: 'Imidan',\n    actives: 'Phosmet',\n    group: '4',\n    batch: '1234',\n    runit: 'L/ha',\n    rate: '12',\n    estTotal: '.02',\n    tunit: 'L'\n  }];\n  const [allValues, setAllValues] = React.useState({\n    chemname: '',\n    actives: '',\n    group: '',\n    runit: '',\n    rate: '',\n    batch: ''\n  });\n  const [EditValues, setEditValues] = React.useState({\n    chemname: '',\n    actives: '',\n    group: '',\n    runit: '',\n    rate: '',\n    batch: ''\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setopenedit(false);\n  };\n\n  const handleRemove = () => {\n    setopenedit(false);\n  };\n\n  const handleChange1 = (e, value) => {\n    setAllValues({ ...allValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChange2 = (e, value) => {\n    setEditValues({ ...EditValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleClickchemical = event => {\n    setOpen(true);\n  };\n\n  const handleOk = event => {\n    setopenedit(false);\n    setOpen(false);\n  };\n\n  const handleChange = (e, index) => {\n    setAllValues(prevState => ({ ...prevState,\n      chemname: ChemicalData[index].name\n    }));\n    setAllValues(prevState => ({ ...prevState,\n      actives: ChemicalData[index].actives\n    }));\n    setAllValues(prevState => ({ ...prevState,\n      group: ChemicalData[index].group\n    }));\n    setAllValues(prevState => ({ ...prevState,\n      rate: ChemicalData[index].rate\n    }));\n    setAllValues(prevState => ({ ...prevState,\n      runit: ChemicalData[index].runit\n    }));\n  };\n\n  const handleChangeEdit = (e, index) => {\n    setEditValues(prevState => ({ ...prevState,\n      chemname: ChemicalData[index].name\n    }));\n    setEditValues(prevState => ({ ...prevState,\n      actives: ChemicalData[index].actives\n    }));\n    setEditValues(prevState => ({ ...prevState,\n      group: ChemicalData[index].group\n    }));\n    setEditValues(prevState => ({ ...prevState,\n      batch: \" \"\n    }));\n    setEditValues(prevState => ({ ...prevState,\n      rate: ChemicalData[index].rate\n    }));\n    setEditValues(prevState => ({ ...prevState,\n      runit: ChemicalData[index].runit\n    }));\n  };\n\n  const handleEdit = (e, d) => {\n    setEditValues(d);\n    setopenedit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [SpraylogChemicalData.map(data => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => handleEdit(e, data),\n      color: \"inherit\",\n      size: \"large\",\n      fullWidth: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 0,\n          md: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Chemical_img,\n            className: \"img\",\n            alt: \"tractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 0,\n          style: {\n            \"textTransform\": \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              \"margin-bottom\": \"0px\"\n            },\n            children: data.chemname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: [data.rate, \" \", data.runit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Estimated total: \", data.estTotal, data.tunit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"primary\",\n        onClick: handleClickchemical,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Chemicals/Additives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'grid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Chemical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              label: \"Chemical\",\n              name: \"chemname\",\n              value: allValues.chemname,\n              displayEmpty: true,\n              children: ChemicalData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.name,\n                onClick: event => handleChange(event, index),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"actives\",\n                label: \"Actives\",\n                value: allValues.actives,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"group\",\n                label: \"Resistance Group\",\n                value: allValues.group,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"batch\",\n                type: \"number\",\n                label: \"Batch No.\",\n                value: allValues.batch,\n                onChange: handleChange1,\n                error: bool,\n                helperText: helper,\n                autocomplete: \"off\",\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"standard\",\n                  name: \"rate\",\n                  type: \"number\",\n                  label: \"Application rate\",\n                  value: allValues.rate,\n                  onChange: handleChange1,\n                  error: bool,\n                  helperText: helper,\n                  autocomplete: \"off\",\n                  style: {\n                    width: 340\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                style: {\n                  \"margin-left\": \"20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                  minLength: 300,\n                  label: \"Unit\",\n                  name: \"unit\",\n                  value: allValues.runit,\n                  onChange: handleChange1,\n                  displayEmpty: true,\n                  children: units.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.title,\n                    children: item.title\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 52\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openedit,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Chemicals/Additives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'grid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Chemical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              label: \"Chemical\",\n              name: \"chemname\",\n              value: EditValues.chemname,\n              displayEmpty: true,\n              children: ChemicalData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.name,\n                onClick: event => handleChangeEdit(event, index),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"actives\",\n                label: \"Actives\",\n                value: EditValues.actives,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"group\",\n                label: \"Resistance Group\",\n                value: EditValues.group,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"batch\",\n                type: \"number\",\n                label: \"Batch No.\",\n                value: EditValues.batch,\n                onChange: handleChange2,\n                error: bool,\n                helperText: helper,\n                autocomplete: \"off\",\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"standard\",\n                  name: \"rate\",\n                  type: \"number\",\n                  label: \"Application rate\",\n                  value: EditValues.rate,\n                  onChange: handleChange2,\n                  error: bool,\n                  helperText: helper,\n                  autocomplete: \"off\",\n                  style: {\n                    width: 340\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                style: {\n                  \"margin-left\": \"0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                  minLength: 300,\n                  label: \"Unit\",\n                  name: \"runit\",\n                  value: EditValues.runit,\n                  onChange: handleChange2,\n                  displayEmpty: true,\n                  children: units.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.title,\n                    children: item.title\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 52\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRemove,\n          color: \"secondary\",\n          children: \"REMOVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Chemicals, \"OHPDqA3K+gLIbUpMfYf1A8lUtvo=\");\n\n_c = Chemicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chemicals\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Chemicals.js"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","TextField","DialogTitle","Box","FormControl","InputLabel","MenuItem","Grid","Select","MuiSelect","Chemical_img","ChemicalData","Chemicals","bool","setbool","helper","sethelper","open","setOpen","openedit","setopenedit","units","id","title","SpraylogChemicalData","chemname","actives","group","batch","runit","rate","estTotal","tunit","allValues","setAllValues","EditValues","setEditValues","handleClose","handleRemove","handleChange1","e","value","target","name","handleChange2","handleClickchemical","event","handleOk","handleChange","index","prevState","handleChangeEdit","handleEdit","d","map","data","display","m","minWidth","item","readOnly","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,SAAvD,QAAwE,mBAAxE;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqCC,MAAM,IAAIC,SAA/C,QAAgE,mBAAhE;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BzB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AAEA,QAAMyB,KAAK,GAAG,CACV;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GADU,EAEV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAFU,EAGV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAHU,EAIV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAJU,EAKV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GALU,EAMV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GANU,EAOV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAPU,EAQV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GARU,EASV;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GATU,EAUV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAVU,EAWV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAXU,EAYV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAZU,EAaV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAbU,EAcV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAdU,EAeV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAfU,EAgBV;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAhBU,CAAd;AAkBA,QAAMC,oBAAoB,GAAG,CAC3B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,QAAQ,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,YAArC;AAAmDC,IAAAA,KAAK,EAAE,GAA1D;AAA+DC,IAAAA,KAAK,EAAC,MAArE;AAA6EC,IAAAA,KAAK,EAAE,OAApF;AAA6FC,IAAAA,IAAI,EAAE,IAAnG;AAAyGC,IAAAA,QAAQ,EAAE,KAAnH;AAA0HC,IAAAA,KAAK,EAAE;AAAjI,GAD2B,EAE3B;AAAEV,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,QAAQ,EAAE,QAAnB;AAA6BC,IAAAA,OAAO,EAAE,cAAtC;AAAsDC,IAAAA,KAAK,EAAE,GAA7D;AAAkEC,IAAAA,KAAK,EAAC,MAAxE;AAAgFC,IAAAA,KAAK,EAAE,OAAvF;AAAgGC,IAAAA,IAAI,EAAE,IAAtG;AAA4GC,IAAAA,QAAQ,EAAE,KAAtH;AAA6HC,IAAAA,KAAK,EAAE;AAApI,GAF2B,EAG3B;AAAEV,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,QAAQ,EAAE,QAAnB;AAA6BC,IAAAA,OAAO,EAAE,SAAtC;AAAiDC,IAAAA,KAAK,EAAE,GAAxD;AAA6DC,IAAAA,KAAK,EAAC,MAAnE;AAA2EC,IAAAA,KAAK,EAAE,MAAlF;AAA0FC,IAAAA,IAAI,EAAE,IAAhG;AAAsGC,IAAAA,QAAQ,EAAE,KAAhH;AAAuHC,IAAAA,KAAK,EAAE;AAA9H,GAH2B,CAA7B;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BvC,KAAK,CAACC,QAAN,CAC/B;AACE6B,IAAAA,QAAQ,EAAE,EADZ;AAEEC,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEE,IAAAA,KAAK,EAAE,EAJT;AAKEC,IAAAA,IAAI,EAAE,EALR;AAMEF,IAAAA,KAAK,EAAE;AANT,GAD+B,CAAjC;AAUA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA6BzC,KAAK,CAACC,QAAN,CACjC;AACE6B,IAAAA,QAAQ,EAAE,EADZ;AAEEC,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEE,IAAAA,KAAK,EAAE,EAJT;AAKEC,IAAAA,IAAI,EAAE,EALR;AAMEF,IAAAA,KAAK,EAAE;AANT,GADiC,CAAnC;;AAWA,QAAMS,WAAW,GAAE,MAAM;AACrBnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAIA,QAAMkB,YAAY,GAAE,MAAM;AACxBlB,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEH,GAHC;;AAIA,QAAMmB,aAAa,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClCP,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACO,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASD;AAAzC,KAAD,CAAZ;AACH,GAFC;;AAGF,QAAMG,aAAa,GAAG,CAACJ,CAAD,EAAIC,KAAJ,KAAc;AAClCL,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASD;AAA1C,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMI,mBAAmB,GAAIC,KAAD,IAAW;AACrC5B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAM6B,QAAQ,GAAID,KAAD,IAAW;AAC1B1B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAIA,QAAM8B,YAAY,GAAG,CAACR,CAAD,EAAIS,KAAJ,KAAc;AAEjCf,IAAAA,YAAY,CAACgB,SAAS,KAAK,EACzB,GAAGA,SADsB;AACXzB,MAAAA,QAAQ,EAAEd,YAAY,CAACsC,KAAD,CAAZ,CAAoBN;AADnB,KAAL,CAAV,CAAZ;AAEAT,IAAAA,YAAY,CAACgB,SAAS,KAAK,EACzB,GAAGA,SADsB;AACXxB,MAAAA,OAAO,EAAEf,YAAY,CAACsC,KAAD,CAAZ,CAAoBvB;AADlB,KAAL,CAAV,CAAZ;AAEAQ,IAAAA,YAAY,CAACgB,SAAS,KAAK,EACzB,GAAGA,SADsB;AACXvB,MAAAA,KAAK,EAAEhB,YAAY,CAACsC,KAAD,CAAZ,CAAoBtB;AADhB,KAAL,CAAV,CAAZ;AAEAO,IAAAA,YAAY,CAACgB,SAAS,KAAK,EACzB,GAAGA,SADsB;AACXpB,MAAAA,IAAI,EAAEnB,YAAY,CAACsC,KAAD,CAAZ,CAAoBnB;AADf,KAAL,CAAV,CAAZ;AAEAI,IAAAA,YAAY,CAACgB,SAAS,KAAK,EACzB,GAAGA,SADsB;AACXrB,MAAAA,KAAK,EAAElB,YAAY,CAACsC,KAAD,CAAZ,CAAoBpB;AADhB,KAAL,CAAV,CAAZ;AAGD,GAbD;;AAcA,QAAMsB,gBAAgB,GAAG,CAACX,CAAD,EAAIS,KAAJ,KAAc;AAErCb,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC1B,GAAGA,SADuB;AACZzB,MAAAA,QAAQ,EAAEd,YAAY,CAACsC,KAAD,CAAZ,CAAoBN;AADlB,KAAL,CAAV,CAAb;AAEEP,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC5B,GAAGA,SADyB;AACdxB,MAAAA,OAAO,EAAEf,YAAY,CAACsC,KAAD,CAAZ,CAAoBvB;AADf,KAAL,CAAV,CAAb;AAEAU,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC5B,GAAGA,SADyB;AACdvB,MAAAA,KAAK,EAAEhB,YAAY,CAACsC,KAAD,CAAZ,CAAoBtB;AADb,KAAL,CAAV,CAAb;AAEAS,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC1B,GAAGA,SADuB;AACZtB,MAAAA,KAAK,EAAE;AADK,KAAL,CAAV,CAAb;AAEAQ,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC5B,GAAGA,SADyB;AACdpB,MAAAA,IAAI,EAAEnB,YAAY,CAACsC,KAAD,CAAZ,CAAoBnB;AADZ,KAAL,CAAV,CAAb;AAEAM,IAAAA,aAAa,CAACc,SAAS,KAAK,EAC5B,GAAGA,SADyB;AACdrB,MAAAA,KAAK,EAAElB,YAAY,CAACsC,KAAD,CAAZ,CAAoBpB;AADb,KAAL,CAAV,CAAb;AAGH,GAfD;;AAiBA,QAAMuB,UAAU,GAAG,CAACZ,CAAD,EAAGa,CAAH,KAAO;AACxBjB,IAAAA,aAAa,CAACiB,CAAD,CAAb;AACAjC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,GAHF;;AAQE,sBACC;AAAA,eACGI,oBAAoB,CAAC8B,GAArB,CAA0BC,IAAD,iBAC1B,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGf,CAAD,IAAKY,UAAU,CAACZ,CAAD,EAAGe,IAAH,CAAhC;AAA0C,MAAA,KAAK,EAAC,SAAhD;AAA0D,MAAA,IAAI,EAAC,OAA/D;AAAuE,MAAA,SAAS,EAAC,MAAjF;AAAA,6BACW,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,CAA7B;AAAA,iCACI;AAAK,YAAA,GAAG,EAAE7C,YAAV;AAAwB,YAAA,SAAS,EAAC,KAAlC;AAAwC,YAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAwB,UAAA,KAAK,EAAE;AAAC,6BAAiB;AAAlB,WAA/B;AAAA,kCACI;AAAG,YAAA,KAAK,EAAE;AAAC,+BAAiB;AAAlB,aAAV;AAAA,sBAAqC6C,IAAI,CAAC9B;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,uBAAa8B,IAAI,CAACzB,IAAlB,OAAyByB,IAAI,CAAC1B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4CAAsB0B,IAAI,CAACxB,QAA3B,EAAqCwB,IAAI,CAACvB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,YADC,CADH,eAeE;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAA,6BAAoB,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,KAAK,EAAC,SAA7B;AAAuC,QAAA,OAAO,EAAEa,mBAAhD;AAAA,+BAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArE;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBM,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE5B,IAAd;AAAoB,MAAA,OAAO,EAAEoB,WAA7B;AAAA,8BACG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEO,QAAC,aAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,EAAE,EAAE;AAAEmB,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAAA,kCACA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEC,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,UADV;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,KAAK,EAAEzB,SAAS,CAACR,QAHrB;AAII,cAAA,YAAY,MAJhB;AAAA,wBAMQd,YAAY,CAAC2C,GAAb,CACE,CAACK,IAAD,EAAOV,KAAP,kBAAkB,QAAC,QAAD;AAAwB,gBAAA,KAAK,EAAEU,IAAI,CAAChB,IAApC;AAA0C,gBAAA,OAAO,EAAGG,KAAD,IAAWE,YAAY,CAACF,KAAD,EAAQG,KAAR,CAA1E;AAAA,0BAA2FU,IAAI,CAAChB;AAAhG,iBAAegB,IAAI,CAACrC,EAApB;AAAA;AAAA;AAAA;AAAA,sBADpB;AANR;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAeA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEmC,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,SAFT;AAGI,gBAAA,KAAK,EAAC,SAHV;AAII,gBAAA,KAAK,EAAEzB,SAAS,CAACP,OAJrB;AAKI,gBAAA,YAAY,EAAC,KALjB;AAMI,gBAAA,UAAU,EACR;AAACkC,kBAAAA,QAAQ,EAAE;AAAX,iBAPN;AASI,gBAAA,KAAK,EAAI;AAACC,kBAAAA,KAAK,EAAE;AAAR;AATb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAfA,eA8BA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,KAAK,EAAC,kBAHV;AAII,gBAAA,KAAK,EAAEzB,SAAS,CAACN,KAJrB;AAKI,gBAAA,YAAY,EAAC,KALjB;AAMI,gBAAA,UAAU,EACR;AAACiC,kBAAAA,QAAQ,EAAE;AAAX,iBAPN;AASI,gBAAA,KAAK,EAAI;AAACC,kBAAAA,KAAK,EAAE;AAAR;AATb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA9BA,eA6CA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,IAAI,EAAC,QAHT;AAII,gBAAA,KAAK,EAAC,WAJV;AAKI,gBAAA,KAAK,EAAEzB,SAAS,CAACL,KALrB;AAMI,gBAAA,QAAQ,EAAEW,aANd;AAOI,gBAAA,KAAK,EAAE1B,IAPX;AAQI,gBAAA,UAAU,EAAEE,MARhB;AASI,gBAAA,YAAY,EAAC,KATjB;AAUI,gBAAA,KAAK,EAAI;AAAC8C,kBAAAA,KAAK,EAAE;AAAR;AAVb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA7CA,eA8DA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,UAAU,EAAC,UAA3B;AAAA,sCACI,QAAC,IAAD;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,OAAO,EAAC,UADZ;AAEI,kBAAA,IAAI,EAAC,MAFT;AAGI,kBAAA,IAAI,EAAC,QAHT;AAII,kBAAA,KAAK,EAAC,kBAJV;AAKI,kBAAA,KAAK,EAAEzB,SAAS,CAACH,IALrB;AAMI,kBAAA,QAAQ,EAAES,aANd;AAOI,kBAAA,KAAK,EAAE1B,IAPX;AAQI,kBAAA,UAAU,EAAEE,MARhB;AASI,kBAAA,YAAY,EAAC,KATjB;AAUI,kBAAA,KAAK,EAAI;AAAC8C,oBAAAA,KAAK,EAAE;AAAR;AAVb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAeM,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAC,iCAAe;AAAhB,iBAAb;AAAA,wCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEM,QAAC,SAAD;AACI,kBAAA,SAAS,EAAE,GADf;AAEI,kBAAA,KAAK,EAAC,MAFV;AAGI,kBAAA,IAAI,EAAC,MAHT;AAII,kBAAA,KAAK,EAAE5B,SAAS,CAACJ,KAJrB;AAKI,kBAAA,QAAQ,EAAEU,aALd;AAMI,kBAAA,YAAY,MANhB;AAAA,4BAQQlB,KAAK,CAACiC,GAAN,CACIK,IAAI,iBAAK,QAAC,QAAD;AAAwB,oBAAA,KAAK,EAAEA,IAAI,CAACpC,KAApC;AAAA,8BAA4CoC,IAAI,CAACpC;AAAjD,qBAAeoC,IAAI,CAACrC,EAApB;AAAA;AAAA;AAAA;AAAA,0BADb;AARR;AAAA;AAAA;AAAA;AAAA,wBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFP,eAuGK,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEe,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEU,QAAjB;AAA2B,UAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvGL;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBN,eA4HO,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE5B,QAAd;AAAwB,MAAA,OAAO,EAAEkB,WAAjC;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACA,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,EAAE,EAAE;AAAEmB,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAAA,kCACM,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEC,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,UADV;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,KAAK,EAAEvB,UAAU,CAACV,QAHtB;AAII,cAAA,YAAY,MAJhB;AAAA,wBAMQd,YAAY,CAAC2C,GAAb,CACE,CAACK,IAAD,EAAOV,KAAP,kBAAkB,QAAC,QAAD;AAAwB,gBAAA,KAAK,EAAEU,IAAI,CAAChB,IAApC;AAA0C,gBAAA,OAAO,EAAGG,KAAD,IAAWK,gBAAgB,CAACL,KAAD,EAAQG,KAAR,CAA9E;AAAA,0BAA+FU,IAAI,CAAChB;AAApG,iBAAegB,IAAI,CAACrC,EAApB;AAAA;AAAA;AAAA;AAAA,sBADpB;AANR;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN,eAeM,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEmC,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,SAFT;AAGI,gBAAA,KAAK,EAAC,SAHV;AAII,gBAAA,KAAK,EAAEvB,UAAU,CAACT,OAJtB;AAKI,gBAAA,YAAY,EAAC,KALjB;AAMI,gBAAA,UAAU,EACR;AAACkC,kBAAAA,QAAQ,EAAE;AAAX,iBAPN;AASI,gBAAA,KAAK,EAAI;AAACC,kBAAAA,KAAK,EAAE;AAAR;AATb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAfN,eA8BM,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,KAAK,EAAC,kBAHV;AAII,gBAAA,KAAK,EAAEvB,UAAU,CAACR,KAJtB;AAKI,gBAAA,YAAY,EAAC,KALjB;AAMI,gBAAA,UAAU,EACR;AAACiC,kBAAAA,QAAQ,EAAE;AAAX,iBAPN;AASI,gBAAA,KAAK,EAAI;AAACC,kBAAAA,KAAK,EAAE;AAAR;AATb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA9BN,eA6CM,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAA,qCACQ,QAAC,SAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,IAAI,EAAC,QAHT;AAII,gBAAA,KAAK,EAAC,WAJV;AAKI,gBAAA,KAAK,EAAEvB,UAAU,CAACP,KALtB;AAMI,gBAAA,QAAQ,EAAEgB,aANd;AAOI,gBAAA,KAAK,EAAE/B,IAPX;AAQI,gBAAA,UAAU,EAAEE,MARhB;AASI,gBAAA,YAAY,EAAC,KATjB;AAUI,gBAAA,KAAK,EAAI;AAAC8C,kBAAAA,KAAK,EAAE;AAAR;AAVb;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA7CN,eA8DM,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,EAAE,EAAE;AAAEJ,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,QAAQ,EAAE;AAAlB,aAApC;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,UAAU,EAAC,UAA3B;AAAA,sCACI,QAAC,IAAD;AAAA,uCACI,QAAC,SAAD;AACI,kBAAA,OAAO,EAAC,UADZ;AAEI,kBAAA,IAAI,EAAC,MAFT;AAGI,kBAAA,IAAI,EAAC,QAHT;AAII,kBAAA,KAAK,EAAC,kBAJV;AAKI,kBAAA,KAAK,EAAEvB,UAAU,CAACL,IALtB;AAMI,kBAAA,QAAQ,EAAEc,aANd;AAOI,kBAAA,KAAK,EAAE/B,IAPX;AAQI,kBAAA,UAAU,EAAEE,MARhB;AASI,kBAAA,YAAY,EAAC,KATjB;AAUI,kBAAA,KAAK,EAAI;AAAC8C,oBAAAA,KAAK,EAAE;AAAR;AAVb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAeM,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAC,iCAAe;AAAhB,iBAAb;AAAA,wCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEM,QAAC,SAAD;AACI,kBAAA,SAAS,EAAE,GADf;AAEI,kBAAA,KAAK,EAAC,MAFV;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,KAAK,EAAE1B,UAAU,CAACN,KAJtB;AAKI,kBAAA,QAAQ,EAAEe,aALd;AAMI,kBAAA,YAAY,MANhB;AAAA,4BAQQvB,KAAK,CAACiC,GAAN,CACIK,IAAI,iBAAK,QAAC,QAAD;AAAwB,oBAAA,KAAK,EAAEA,IAAI,CAACpC,KAApC;AAAA,8BAA4CoC,IAAI,CAACpC;AAAjD,qBAAeoC,IAAI,CAACrC,EAApB;AAAA;AAAA;AAAA;AAAA,0BADb;AARR;AAAA;AAAA;AAAA;AAAA,wBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA9DN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF,eAuGE,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEgB,YAAjB;AAA+B,UAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEU,QAAjB;AAA2B,UAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvGF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5HP;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6OD;;GA/VuBnC,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core'\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport Chemical_img from '../services/chemical.png'\nimport ChemicalData from '../../../../../../Data/ChemicalData';\n\nexport default function Chemicals() {\n\n  const [bool, setbool] = React.useState(false);\n  const [helper, sethelper] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [openedit, setopenedit] = React.useState(false);\n  \n  const units = [\n      { id: 1, title: 'ml/ha' },\n      { id: 2, title: 'Kg/ha' },\n      { id: 3, title: 'L/ha' },\n      { id: 4, title: 'lb/ha' },\n      { id: 5, title: 'oz/ha' },\n      { id: 6, title: 'g/ha' },\n      { id: 7, title: 'floz/ac' },\n      { id: 8, title: 'qt/ac' },\n      { id: 9, title: 'pt/ac' },\n      { id: 10, title: 'oz/ac' },\n      { id: 11, title: 'lb/ac' },\n      { id: 12, title: 'g/ac' },\n      { id: 13, title: 'Kg/1000L' },\n      { id: 14, title: 't/ha' },\n      { id: 15, title: 'L/Kg' },\n      { id: 16, title: 'L/t' }\n  ];\n  const SpraylogChemicalData = [\n    { id: 1, chemname: 'Lagon', actives: 'Aclonifene', group: '3', batch:'1234', runit: 'ml/ha', rate: '23', estTotal: '0.8', tunit: 'ml' },\n    { id: 2, chemname: 'Actara', actives: 'Thiamethoxam', group: '1', batch:'7634', runit: 'Kg/ha', rate: '20', estTotal: '3.6', tunit: 'Kg' },\n    { id: 3, chemname: 'Imidan', actives: 'Phosmet', group: '4', batch:'1234', runit: 'L/ha', rate: '12', estTotal: '.02', tunit: 'L' }\n];\n     \n  const [allValues, setAllValues]= React.useState(\n    {\n      chemname: '',\n      actives: '', \n      group: '', \n      runit: '', \n      rate: '',\n      batch: ''\n    }\n  );\n  const [EditValues, setEditValues]= React.useState(\n    {\n      chemname: '',\n      actives: '', \n      group: '', \n      runit: '', \n      rate: '',\n      batch: ''\n    }\n  );\n   \n  const handleClose= () => {\n      setOpen(false);\n      setopenedit(false)\n  };\n  const handleRemove= () => {\n    setopenedit(false);\n\n};\n  const handleChange1 = (e, value) => {     \n    setAllValues({...allValues, [e.target.name]: e.target.value})  \n};\nconst handleChange2 = (e, value) => {     \n  setEditValues({...EditValues, [e.target.name]: e.target.value})  \n};\n\nconst handleClickchemical = (event) => {\n  setOpen(true)\n}\n\nconst handleOk = (event) => {\n  setopenedit(false)\n  setOpen(false);\n};\nconst handleChange = (e, index) => {\n \n  setAllValues(prevState => ({\n    ...prevState, chemname: ChemicalData[index].name}));\n  setAllValues(prevState => ({\n    ...prevState, actives: ChemicalData[index].actives}));\n  setAllValues(prevState => ({\n    ...prevState, group: ChemicalData[index].group}));\n  setAllValues(prevState => ({\n    ...prevState, rate: ChemicalData[index].rate}));\n  setAllValues(prevState => ({\n    ...prevState, runit: ChemicalData[index].runit}));\n  \n};\nconst handleChangeEdit = (e, index) => {\n \n  setEditValues(prevState => ({\n    ...prevState, chemname: ChemicalData[index].name}));\n    setEditValues(prevState => ({\n    ...prevState, actives: ChemicalData[index].actives}));\n    setEditValues(prevState => ({\n    ...prevState, group: ChemicalData[index].group}));\n    setEditValues(prevState => ({\n      ...prevState, batch: \" \"}));    \n    setEditValues(prevState => ({\n    ...prevState, rate: ChemicalData[index].rate}));\n    setEditValues(prevState => ({\n    ...prevState, runit: ChemicalData[index].runit}));\n  \n};\n\nconst handleEdit = (e,d)=>{\n  setEditValues(d);\n  setopenedit(true);\n };\n\n\n\n  \n  return (\n   <div> \n     {SpraylogChemicalData.map((data) => (                      \n     <Button onClick={(e)=>handleEdit(e,data)} color=\"inherit\" size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={Chemical_img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={3} md={0}style={{\"textTransform\": \"none\"}}>\n                        <p style={{\"margin-bottom\": \"0px\"}}>{data.chemname}</p>\n                        <InputLabel>{data.rate} {data.runit}</InputLabel>\n                        <p >Estimated total: {data.estTotal}{data.tunit}</p>\n                     </Grid>\n                </Grid>\n            </Button>\n             ))}\n     <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickchemical}><b>ADD</b></Button></span>\n         <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Chemicals/Additives</DialogTitle>\n                <DialogContent>\n                  <Box component=\"form\" sx={{ display: 'grid' }}>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                    <InputLabel>Chemical</InputLabel>\n                      <MuiSelect\n                          label=\"Chemical\"\n                          name=\"chemname\"\n                          value={allValues.chemname}\n                          displayEmpty>\n                          {\n                              ChemicalData.map(\n                                (item, index) => (<MenuItem key={item.id} value={item.name} onClick={(event) => handleChange(event, index)}>{item.name}</MenuItem>)\n                              )\n                          }\n                      </MuiSelect>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"actives\"\n                              label=\"Actives\"\n                              value={allValues.actives}\n                              autocomplete=\"off\"\n                              InputProps={\n                                {readOnly: true,}\n                              }\n                              style = {{width: 420}}\n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"group\"\n                              label=\"Resistance Group\"\n                              value={allValues.group}\n                              autocomplete=\"off\"\n                              InputProps={\n                                {readOnly: true,}\n                              }\n                              style = {{width: 420}}\n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"batch\"\n                              type=\"number\"\n                              label=\"Batch No.\"\n                              value={allValues.batch}\n                              onChange={handleChange1}\n                              error={bool}\n                              helperText={helper}\n                              autocomplete=\"off\"\n                              style = {{width: 420}}\n                            \n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid container alignItems=\"flex-end\">\n                      <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"rate\"\n                              type=\"number\"\n                              label=\"Application rate\"\n                              value={allValues.rate}\n                              onChange={handleChange1}\n                              error={bool}\n                              helperText={helper}\n                              autocomplete=\"off\"\n                              style = {{width: 340}}\n                          />\n                      </Grid>\n                        <Grid style={{\"margin-left\": \"20px\"}}>\n                          <InputLabel>Unit</InputLabel>\n                              <MuiSelect\n                                  minLength={300}\n                                  label=\"Unit\"\n                                  name=\"unit\"\n                                  value={allValues.runit}\n                                  onChange={handleChange1}\n                                  displayEmpty>\n                                  {\n                                      units.map(\n                                          item => (<MenuItem key={item.id} value={item.title}>{item.title}</MenuItem>)\n                                      )\n                                  }\n                                  \n                              </MuiSelect>\n                      </Grid>\n                  </Grid>\n                      \n                  </FormControl>\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\n                  <Button onClick={handleOk} color=\"primary\">SAVE</Button>\n              </DialogActions>\n          </Dialog> \n          <Dialog open={openedit} onClose={handleClose}>\n            <DialogTitle>Chemicals/Additives</DialogTitle>\n            <DialogContent>\n            <Box component=\"form\" sx={{ display: 'grid' }}>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                    <InputLabel>Chemical</InputLabel>\n                      <MuiSelect\n                          label=\"Chemical\"\n                          name=\"chemname\"\n                          value={EditValues.chemname}\n                          displayEmpty>\n                          {\n                              ChemicalData.map(\n                                (item, index) => (<MenuItem key={item.id} value={item.name} onClick={(event) => handleChangeEdit(event, index)}>{item.name}</MenuItem>)\n                              )\n                          }\n                      </MuiSelect>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"actives\"\n                              label=\"Actives\"\n                              value={EditValues.actives}\n                              autocomplete=\"off\"\n                              InputProps={\n                                {readOnly: true,}\n                              }\n                              style = {{width: 420}}\n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"group\"\n                              label=\"Resistance Group\"\n                              value={EditValues.group}\n                              autocomplete=\"off\"\n                              InputProps={\n                                {readOnly: true,}\n                              }\n                              style = {{width: 420}}\n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"batch\"\n                              type=\"number\"\n                              label=\"Batch No.\"\n                              value={EditValues.batch}\n                              onChange={handleChange2}\n                              error={bool}\n                              helperText={helper}\n                              autocomplete=\"off\"\n                              style = {{width: 420}}\n                            \n                          />\n                      </Grid>\n                  </FormControl>\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                  <Grid container alignItems=\"flex-end\">\n                      <Grid >\n                          <TextField\n                              variant=\"standard\"\n                              name=\"rate\"\n                              type=\"number\"\n                              label=\"Application rate\"\n                              value={EditValues.rate}\n                              onChange={handleChange2}\n                              error={bool}\n                              helperText={helper}\n                              autocomplete=\"off\"\n                              style = {{width: 340}}\n                          />\n                      </Grid>\n                        <Grid style={{\"margin-left\": \"0px\"}}>\n                          <InputLabel>Unit</InputLabel>\n                              <MuiSelect\n                                  minLength={300}\n                                  label=\"Unit\"\n                                  name=\"runit\"\n                                  value={EditValues.runit}\n                                  onChange={handleChange2}\n                                  displayEmpty>\n                                  {\n                                      units.map(\n                                          item => (<MenuItem key={item.id} value={item.title}>{item.title}</MenuItem>)\n                                      )\n                                  }\n                                  \n                              </MuiSelect>\n                      </Grid>\n                  </Grid>\n                      \n                  </FormControl>\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleRemove} color=\"secondary\">REMOVE</Button>\n                <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\n                <Button onClick={handleOk} color=\"primary\">SAVE</Button>\n            </DialogActions>\n        </Dialog>\n   </div>        \n                            \n  )     \n}\n"]},"metadata":{},"sourceType":"module"}