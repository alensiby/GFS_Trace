{"ast":null,"code":"var _jsxFileName = \"D:\\\\pull gfs\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Livestock\\\\LsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LsTable() {\n  _s();\n\n  const [type, setType] = useState({});\n  const lsType = [{\n    id: 1,\n    title: \"Cattle\"\n  }, {\n    id: 2,\n    title: \"Bulls\"\n  }, {\n    id: 3,\n    title: \"Sheep\"\n  }, {\n    id: 4,\n    title: \"Horses\"\n  }, {\n    id: 5,\n    title: \"Chickens\"\n  }, {\n    id: 6,\n    title: \"Pigs\"\n  }, {\n    id: 7,\n    title: \"Deer\"\n  }, {\n    id: 8,\n    title: \"Goats\"\n  }, {\n    id: 9,\n    title: \"Llamas\"\n  }, {\n    id: 10,\n    title: \"Bees\"\n  }];\n  const [data, setData] = useState([{\n    type: \"1\",\n    names: \"abc\",\n    number: \"123\",\n    notes: \"xyz\"\n  }, {\n    type: \"2\",\n    names: \"pqrs\",\n    number: \"16343\",\n    notes: \"xykfz\"\n  }]);\n  const columns = [{\n    title: \"Type\",\n    field: \"type\",\n    lookup: type\n  }, {\n    title: \"Name\",\n    field: \"names\",\n    validate: rowData => {\n      if (rowData.names === undefined || rowData.names === \"\") {\n        return \"Required\";\n      } else if (rowData.names.length < 3) {\n        return \"Name Should Contain Atleast 3 chars\";\n      }\n\n      return true;\n    }\n  }, {\n    title: \"Number\",\n    field: \"number\"\n  }, {\n    title: \"Notes\",\n    field: \"notes\"\n  }];\n  useEffect(() => {\n    const type = {};\n    lsType.map(row => type[row.id] = row.title);\n    setType(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Livestock\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          setData([...data, newRow]);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\n          const updatedData = [...data];\n          updatedData[(oldRow, data.id)] = newRow;\n          setData(updatedData);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        showTitle: false,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 22\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LsTable, \"CoEZbPF9joMI6EAXO+PXVMTE+6I=\");\n\n_c = LsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LsTable\");","map":{"version":3,"sources":["D:/pull gfs/GFS_Trace/src/components/pages/FarmAssets/Livestock/LsTable.js"],"names":["React","useState","useEffect","MaterialTable","CreateIcon","AddCircleRoundedIcon","DeleteIcon","LsTable","type","setType","lsType","id","title","data","setData","names","number","notes","columns","field","lookup","validate","rowData","undefined","length","map","row","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","oldRow","updatedData","onRowDelete","oldData","dataDelete","index","tableData","splice","actionsColumnIndex","showTitle","pageSizeOptions","paginationType","showFirstLastPageButtons","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function LsTable() {\r\n  const [type, setType] = useState({});\r\n\r\n  const lsType = [\r\n    { id: 1, title: \"Cattle\" },\r\n    { id: 2, title: \"Bulls\" },\r\n    { id: 3, title: \"Sheep\" },\r\n    { id: 4, title: \"Horses\" },\r\n    { id: 5, title: \"Chickens\" },\r\n    { id: 6, title: \"Pigs\" },\r\n    { id: 7, title: \"Deer\" },\r\n    { id: 8, title: \"Goats\" },\r\n    { id: 9, title: \"Llamas\" },\r\n    { id: 10, title: \"Bees\" },\r\n  ];\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      type: \"1\",\r\n      names: \"abc\",\r\n\r\n      number: \"123\",\r\n      notes: \"xyz\",\r\n    },\r\n    {\r\n      type: \"2\",\r\n\r\n      names: \"pqrs\",\r\n\r\n      number: \"16343\",\r\n      notes: \"xykfz\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",\r\n      lookup: type,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"names\",\r\n      validate: (rowData) => {\r\n        if (rowData.names === undefined || rowData.names === \"\") {\r\n          return \"Required\";\r\n        } else if (rowData.names.length < 3) {\r\n          return \"Name Should Contain Atleast 3 chars\";\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Number\",\r\n      field: \"number\",\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      field: \"notes\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    lsType.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"Livestock\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...data];\r\n              updatedData[(oldRow, data.id)] = newRow;\r\n              setData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          showTitle: false,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n        }}\r\n        icons={{\r\n         \r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}