{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/FuelTank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Progress } from \"semantic-ui-react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { fuelTank_data, type_data } from \"./Tabledatas\";\nimport \"../Fuel.css\";\nimport \"./archived.css\";\nimport Export from \"./export.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FuelTank() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [type, setType] = useState({});\n  const [data, setData] = React.useState(fuelTank_data);\n  const columns = [{\n    title: \"Farm\",\n    field: \"farm\",\n    filtering: false\n  }, {\n    title: \"Name\",\n    field: \"name\",\n    filtering: false\n  }, {\n    title: \"Type\",\n    field: \"type\",\n    lookup: type\n  }, {\n    title: \"Capacity\",\n    field: \"capacity\",\n    filtering: false\n  }, {\n    title: \"Contents\",\n    field: \"contents\",\n    filtering: false\n  }, // {\n  //   title: \"Contents\",\n  //   field: \"contents\",filtering:false,\n  // },\n  {\n    title: \"Contents\",\n    field: \"contents\",\n    filtering: false,\n    render: rowData => {\n      return /*#__PURE__*/_jsxDEV(Progress, {\n        percent: rowData.contents,\n        progress: true,\n        color: \"rgb(68, 63, 63)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n  const columns_archived = [{\n    title: \"Farm\",\n    field: \"farm\",\n    filtering: false\n  }, {\n    title: \"Name\",\n    field: \"name\",\n    filtering: false\n  }, {\n    title: \"Type\",\n    field: \"type\",\n    lookup: type\n  }, {\n    title: \"Capacity\",\n    field: \"capacity\",\n    filtering: false\n  }, {\n    title: \"Contents\",\n    field: \"contents\",\n    filtering: false\n  }, {\n    title: \"Contents\",\n    field: \"contents\",\n    filtering: false,\n    render: rowData => {\n      return /*#__PURE__*/_jsxDEV(Progress, {\n        percent: rowData.contents,\n        progress: true,\n        color: \"rgb(68, 63, 63)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: \"Archived\",\n    field: \"archived\",\n    filtering: false\n  }];\n  useEffect(() => {\n    const type = {};\n    type_data.map(row => type[row.id] = row.title);\n    setType(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"FUEL TANK\",\n      data: data,\n      columns: selected ? columns_archived : columns // columns={columns}\n      // detailPanel={(rowData) => {\n      //   return <Chart />;\n      // }}\n      ,\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true,\n        filtering: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this) // Edit: () => <CreateIcon color=\"action\" />,\n        // Delete: () => <DeleteIcon color=\"action\" />\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FuelTank, \"geI28JTqA99+JytcAiY4Wo9D7q8=\");\n\n_c = FuelTank;\n\nvar _c;\n\n$RefreshReg$(_c, \"FuelTank\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/FuelTank.js"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","Progress","Checkbox","fuelTank_data","type_data","Export","FuelTank","selected","toggleselected","type","setType","data","setData","columns","title","field","filtering","lookup","render","rowData","contents","columns_archived","map","row","id","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable,{ MTableToolbar } from \"material-table\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport {Checkbox} from \"semantic-ui-react\";\r\nimport {fuelTank_data,type_data} from \"./Tabledatas\";\r\n\r\nimport \"../Fuel.css\";\r\nimport \"./archived.css\";\r\nimport Export from \"./export.png\";\r\n\r\n\r\nexport default function FuelTank() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [type, setType] = useState({});\r\nconst [data, setData] = React.useState(fuelTank_data );\r\n  const columns = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",lookup:type,\r\n    },\r\n   \r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n    },\r\n    // {\r\n    //   title: \"Contents\",\r\n    //   field: \"contents\",filtering:false,\r\n    // },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n    },\r\n    \r\n   \r\n  ]\r\n  const columns_archived = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      field: \"type\",lookup:type,\r\n    },\r\n   \r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",filtering:false,\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      \r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",filtering:false,\r\n      render: rowData => {\r\n        return <Progress percent={rowData.contents} progress color=\"rgb(68, 63, 63)\" />\r\n      }\r\n\r\n    },\r\n    {\r\n      title: \"Archived\",\r\n      field: \"archived\",filtering:false,\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"FUEL TANK\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        // columns={columns}\r\n        // detailPanel={(rowData) => {\r\n        //   return <Chart />;\r\n        // }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,filtering:true\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          // Edit: () => <CreateIcon color=\"action\" />,\r\n          // Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}