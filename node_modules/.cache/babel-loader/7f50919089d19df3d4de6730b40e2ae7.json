{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\GFS_TRACE\\\\src\\\\pages\\\\Job\\\\JobEdit\\\\JobPopUp\\\\controls\\\\Category.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport question from './question mark.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [category, setcategory] = React.useState(\"\");\n  const [cat, setcat] = React.useState({});\n  const [img, setimg] = React.useState(question);\n  const [img1, setimg1] = React.useState(question);\n  var changeCategory = 0;\n  var flag = 0;\n  const arr = {};\n  const [field, setfield] = React.useState(\"CATEGORY\");\n  const [fieldfarm, setfieldfarm] = React.useState(\"\");\n  const [subfield, setSubfield] = React.useState('NONE');\n  const [fieldval, setfieldval] = React.useState(\"CATEGORY\");\n  const [subfieldval, setSubfieldval] = React.useState('NONE');\n  const [c, setc] = React.useState({});\n\n  const handleChange = (event, value) => {\n    setcategory(event.target.value);\n    changeCategory = event.target.value;\n    setfieldval(value.props.children);\n    setcat({});\n    flag = 0;\n    const arr = options.filter(a => a.id === changeCategory);\n\n    if (changeCategory != \"\") {\n      setc(arr[0].data);\n      setSubfieldval(\"\");\n      setfieldfarm(\"\");\n      setimg1(options[changeCategory - 1].icon);\n    } else {\n      setc({});\n      setfieldval(\"CATEGORY\");\n      setSubfieldval(\"None\");\n      setfieldfarm(\"\");\n      setimg1(question);\n    }\n  };\n\n  const handleChange1 = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setcat(values => ({ ...values,\n      [name]: value\n    }));\n    console.log(cat);\n\n    if (name == \"Farm\") {\n      setfieldfarm(value + \" : \");\n      flag = 1;\n    } else {\n      setSubfieldval(value);\n    }\n  };\n\n  const handleClickOpen = () => {\n    if (!restart) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  const handleOk = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      if (subfieldval == \"\") {\n        alert(\"No \" + fieldval + \" Selected\");\n      } else {\n        if (fieldfarm != \"\") {\n          setfield(fieldval);\n          setSubfield(fieldfarm + subfieldval);\n          setimg(img1);\n          setOpen(false);\n        } else {\n          if (category == 1 || category == 5) {\n            setfield(fieldval);\n            setSubfield(fieldfarm + subfieldval);\n            setimg(img1);\n            setOpen(false);\n          }\n        }\n      }\n    }\n  };\n\n  const {\n    name,\n    label,\n    value,\n    onChange,\n    options,\n    restart\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"inherit\",\n      onClick: handleClickOpen,\n      size: \"large\",\n      fullWidth: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 0,\n          md: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            className: \"img\",\n            alt: \"tractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: subfield\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Job Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'grid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              label: label,\n              name: name,\n              value: category,\n              onChange: handleChange,\n              displayEmpty: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.title\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 50\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), Object.entries(c).map(([key, val]) => /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              name: key,\n              label: key,\n              value: cat[key],\n              onChange: handleChange1,\n              children: val.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item,\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 71\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Category, \"5O/DML+DMVFWszo8or4BPSemH+M=\");\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/wamp/www/GFS_TRACE/src/pages/Job/JobEdit/JobPopUp/controls/Category.js"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","MenuItem","Grid","Select","MuiSelect","question","Category","props","open","setOpen","useState","category","setcategory","cat","setcat","img","setimg","img1","setimg1","changeCategory","flag","arr","field","setfield","fieldfarm","setfieldfarm","subfield","setSubfield","fieldval","setfieldval","subfieldval","setSubfieldval","c","setc","handleChange","event","value","target","children","options","filter","a","id","data","icon","handleChange1","name","values","console","log","handleClickOpen","restart","handleClose","reason","handleOk","alert","label","onChange","display","m","minWidth","map","item","title","Object","entries","key","val","index"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport question from './question mark.png'\r\n\r\nexport default function Category(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [category, setcategory] = React.useState(\"\");\r\n    const [cat, setcat] = React.useState({});\r\n    const [img, setimg] = React.useState(question);\r\n    const [img1, setimg1] = React.useState(question);\r\n    var changeCategory = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"CATEGORY\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const handleChange = (event, value) => {\r\n        setcategory(event.target.value);\r\n        changeCategory = event.target.value;\r\n        setfieldval(value.props.children)\r\n        setcat({})\r\n        flag=0;\r\n        const arr = options.filter(\r\n            a => (a.id === changeCategory)\r\n        )\r\n        if (changeCategory != \"\") {\r\n            setc(arr[0].data);\r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(options[changeCategory - 1].icon);\r\n        }\r\n        else{\r\n            setc({});\r\n            setfieldval(\"CATEGORY\")\r\n            setSubfieldval(\"None\");\r\n            setfieldfarm(\"\");\r\n            setimg1(question);\r\n        }\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setcat(values => ({ ...values, [name]: value }))\r\n        console.log(cat);\r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleOk = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            if (subfieldval==\"\") {\r\n                alert(\"No \"+fieldval+\" Selected\")\r\n            }\r\n            else{\r\n                if(fieldfarm!=\"\"){\r\n                    setfield(fieldval);\r\n                    setSubfield(fieldfarm + subfieldval);\r\n                    setimg(img1)\r\n                    setOpen(false);\r\n                }\r\n                else{\r\n                    if(category==1 ||category==5){\r\n                        setfield(fieldval);\r\n                        setSubfield(fieldfarm + subfieldval);\r\n                        setimg(img1)\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const { name, label, value, onChange, options, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <InputLabel>{field}</InputLabel>\r\n                        <p>{subfield}</p>\r\n                    </Grid>\r\n                </Grid>\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Job Category</DialogTitle>\r\n                <DialogContent >\r\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>{label}</InputLabel>\r\n                            <MuiSelect\r\n                                label={label}\r\n                                name={name}\r\n                                value={category}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        {\r\n                            Object.entries(c).map(\r\n                                ([key, val]) => (\r\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                        <InputLabel>{key}</InputLabel>\r\n                                        <MuiSelect\r\n                                            name={key}\r\n                                            label={key}\r\n                                            value={cat[key]}\r\n                                            onChange={handleChange1}\r\n                                        >\r\n                                            {\r\n                                                val.map(\r\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\r\n                                                )\r\n                                            }\r\n                                        </MuiSelect>\r\n                                    </FormControl>)\r\n                            )\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={handleOk}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}