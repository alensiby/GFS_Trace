{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\SiloTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SiloTable() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = React.useState([{\n    name: 'Linta Paddock',\n    capacity: '23',\n    unit: 'm3',\n    cultivar: 'fallow',\n    status: 'N'\n  }, {\n    name: 'K2K Paddock',\n    capacity: '50',\n    unit: 'f3',\n    cultivar: 'dfg',\n    status: 'C'\n  }, {\n    name: 'Harry Woods Paddock',\n    capacity: '40',\n    unit: 'wt',\n    cultivar: 'abc',\n    status: 'T'\n  }, {\n    name: 'Peter Dein Co.',\n    capacity: '10',\n    unit: 't',\n    cultivar: 'abc',\n    status: 'TS'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'unit',\n    lookup: {\n      't': 'Tonnes',\n      'wt': 'Wheat tonnes',\n      'm3': 'Cubic metre',\n      'f3': 'Cubic feet'\n    }\n  }, {\n    title: 'Cultivar',\n    field: 'cultivar',\n    lookup: {\n      'fallow': 'Fallow',\n      'abc': 'abc',\n      'dfg': 'dfg'\n    }\n  }, {\n    title: 'status',\n    field: 'status',\n    lookup: {\n      'N': 'Normal',\n      'S': 'Seed',\n      'T': 'Treated',\n      'TS': 'Treated Seed',\n      'C': 'Contaminated',\n      'A': 'Archived'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Silos\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        filtering: true,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SiloTable, \"1Sq6hdzmjzQRl1rlz4bXiYZtid4=\");\n\n_c = SiloTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SiloTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/SiloTable.js"],"names":["React","MaterialTable","SiloTable","open","setOpen","useState","data","setData","name","capacity","unit","cultivar","status","columns","title","field","type","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","filtering","paging","pageSizeOptions","paginationType","showFirstLastPageButtons"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nexport default function SiloTable() {\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n\r\n    const [data, setData] = React.useState([\r\n      { name: 'Linta Paddock', capacity: '23', unit:'m3', cultivar: 'fallow', status: 'N' },\r\n      { name: 'K2K Paddock', capacity: '50', unit:'f3', cultivar: 'dfg', status: 'C' },\r\n      { name: 'Harry Woods Paddock', capacity: '40', unit:'wt', cultivar: 'abc', status: 'T' },\r\n      { name: 'Peter Dein Co.', capacity: '10', unit:'t', cultivar: 'abc', status: 'TS' }\r\n       ])\r\n  const columns = [{\r\n      title: 'Name', field: 'name'\r\n  },\r\n  {\r\n      title: 'Capacity', field: 'capacity', type: 'numeric',\r\n  },\r\n  {\r\n      title: 'Unit', field: 'unit',\r\n      lookup: { 't': 'Tonnes', 'wt': 'Wheat tonnes', 'm3':'Cubic metre', 'f3':'Cubic feet'},\r\n  }, {\r\n      title: 'Cultivar', field: 'cultivar', \r\n      lookup: { 'fallow': 'Fallow', 'abc': 'abc', 'dfg':'dfg' },\r\n  }, {\r\n      title: 'status', field: 'status',\r\n      lookup: {'N': 'Normal' ,'S': 'Seed', 'T': 'Treated', 'TS': 'Treated Seed', \r\n      'C': 'Contaminated', 'A': 'Archived' },\r\n  }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Silos\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                \r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n          \r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}