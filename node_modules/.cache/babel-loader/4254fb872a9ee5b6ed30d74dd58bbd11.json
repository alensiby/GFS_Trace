{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Inventory\\\\Grain\\\\Tables\\\\Contracts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from './export.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contracts() {\n  _s();\n\n  const [data, setData] = React.useState([{\n    status: \"asd\",\n    contractNo: \"asd\",\n    startDate: \"20/10/2021\",\n    endDate: \"30/11/2021\",\n    buyer: \"asd\",\n    destination: \"asd\",\n    commodity: \"asd\",\n    fulfilled: \"asd\",\n    quantity: \"asd\",\n    grade: \"asd\",\n    tolerence: \"asd\",\n    notes: \"asd\"\n  }]);\n  const columns = [{\n    title: 'Status',\n    field: 'status'\n  }, {\n    title: 'Contract No',\n    field: 'contractNo'\n  }, {\n    title: 'Start Date',\n    field: 'startDate'\n  }, {\n    title: 'End Date',\n    field: 'endDate'\n  }, {\n    title: 'Buyer',\n    field: 'buyer'\n  }, {\n    title: 'Destination',\n    field: 'destination'\n  }, {\n    title: 'Commodity',\n    field: 'commodity'\n  }, {\n    title: 'Fulfilled',\n    field: 'fulfilled'\n  }, {\n    title: 'Quantity',\n    field: 'quantity'\n  }, {\n    title: 'Grade',\n    field: 'grade'\n  }, {\n    title: 'Tolerence',\n    field: 'tolerence'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"CONTRACTS\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 35\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 35\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contracts, \"zqhMBmSBqcmHc6ZrFFw4KXL+/eY=\");\n\n_c = Contracts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contracts\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Inventory/Grain/Tables/Contracts.js"],"names":["React","MaterialTable","CreateIcon","DeleteIcon","Export","Contracts","data","setData","useState","status","contractNo","startDate","endDate","buyer","destination","commodity","fulfilled","quantity","grade","tolerence","notes","columns","title","field","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Edit","Delete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,CACnC;AAACC,IAAAA,MAAM,EAAC,KAAR;AAAcC,IAAAA,UAAU,EAAC,KAAzB;AAA+BC,IAAAA,SAAS,EAAC,YAAzC;AAAsDC,IAAAA,OAAO,EAAC,YAA9D;AAA2EC,IAAAA,KAAK,EAAC,KAAjF;AAAuFC,IAAAA,WAAW,EAAC,KAAnG;AAAyGC,IAAAA,SAAS,EAAC,KAAnH;AAAyHC,IAAAA,SAAS,EAAC,KAAnI;AAAyIC,IAAAA,QAAQ,EAAC,KAAlJ;AAAwJC,IAAAA,KAAK,EAAC,KAA9J;AAAoKC,IAAAA,SAAS,EAAC,KAA9K;AAAoLC,IAAAA,KAAK,EAAC;AAA1L,GADmC,CAAf,CAAxB;AAGA,QAAMC,OAAO,GAAG,CAAC;AACbC,IAAAA,KAAK,EAAE,QADM;AACIC,IAAAA,KAAK,EAAE;AADX,GAAD,EAGhB;AACID,IAAAA,KAAK,EAAE,aADX;AAC0BC,IAAAA,KAAK,EAAE;AADjC,GAHgB,EAMhB;AACID,IAAAA,KAAK,EAAE,YADX;AACyBC,IAAAA,KAAK,EAAE;AADhC,GANgB,EAQb;AACCD,IAAAA,KAAK,EAAE,UADR;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GARa,EAWhB;AACID,IAAAA,KAAK,EAAE,OADX;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GAXgB,EAehB;AACID,IAAAA,KAAK,EAAE,aADX;AAC0BC,IAAAA,KAAK,EAAE;AADjC,GAfgB,EAkBhB;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE;AAD/B,GAlBgB,EAqBhB;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE;AAD/B,GArBgB,EAwBhB;AACID,IAAAA,KAAK,EAAE,UADX;AACuBC,IAAAA,KAAK,EAAE;AAD9B,GAxBgB,EA2BhB;AACID,IAAAA,KAAK,EAAE,OADX;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GA3BgB,EA8BhB;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE;AAD/B,GA9BgB,EAiChB;AACID,IAAAA,KAAK,EAAE,OADX;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GAjCgB,CAAhB;AAsCA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,WAArB;AACI,MAAA,IAAI,EAAEjB,IADV;AAEI,MAAA,OAAO,EAAEe,OAFb;AAGI,MAAA,QAAQ,EAAE;AACNG,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMC,UAAU,GAAG,CAAC,GAAGzB,IAAJ,CAAnB;AACA,kBAAM0B,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBC,EAAhC;AACAH,YAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBP,OAApB;AACAlB,YAAAA,OAAO,CAAC,CAAC,GAAGwB,UAAJ,CAAD,CAAP;AAEAH,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD,CAFI;AAYNO,QAAAA,WAAW,EAAET,OAAO,IAClB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMM,UAAU,GAAG,CAAC,GAAG9B,IAAJ,CAAnB;AACA,kBAAM0B,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBC,EAAhC;AACAE,YAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACAzB,YAAAA,OAAO,CAAC,CAAC,GAAG6B,UAAJ,CAAD,CAAP;AAEAR,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD;AAbI,OAHd;AA2BI,MAAA,OAAO,EAAE;AACLU,QAAAA,kBAAkB,EAAE,CAAC,CADhB;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAHZ;AAILC,QAAAA,cAAc,EAAE,SAJX;AAKLC,QAAAA,wBAAwB,EAAE,KALrB;AAMLC,QAAAA,YAAY,EAAE;AANT,OA3Bb;AAoCI,MAAA,KAAK,EAAE;AACHvC,QAAAA,MAAM,EAAE,mBAAM;AAAK,UAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADX;AAEHwC,QAAAA,IAAI,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFT;AAGHC,QAAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHX;AApCX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;GAxFuBxC,S;;KAAAA,S","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\n\r\nexport default function Contracts() {\r\n    const [data, setData] = React.useState([\r\n        {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"}\r\n    ])\r\n    const columns = [{\r\n        title: 'Status', field: 'status',\r\n    },\r\n    {\r\n        title: 'Contract No', field: 'contractNo',\r\n    },\r\n    {\r\n        title: 'Start Date', field: 'startDate',\r\n    }, {\r\n        title: 'End Date', field: 'endDate',\r\n    },\r\n    {\r\n        title: 'Buyer', field: 'buyer',\r\n    },\r\n    \r\n    {\r\n        title: 'Destination', field: 'destination',\r\n    },\r\n    {\r\n        title: 'Commodity', field: 'commodity',\r\n    },\r\n    {\r\n        title: 'Fulfilled', field: 'fulfilled',\r\n    },\r\n    {\r\n        title: 'Quantity', field: 'quantity',\r\n    },\r\n    {\r\n        title: 'Grade', field: 'grade',\r\n    },\r\n    {\r\n        title: 'Tolerence', field: 'tolerence',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    },\r\n    \r\n  ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"CONTRACTS\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    \r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}