{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Fertiliser\\\\FertiliserTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../export.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FertiliserTable() {\n  _s();\n\n  const [data, setData] = React.useState([{\n    name: 'Abc',\n    form: 1,\n    inventory: 12,\n    units: 1,\n    nutrients: \"Abc\",\n    composition: \"12%\"\n  }, {\n    name: 'Efg',\n    form: 3,\n    inventory: 12,\n    units: 2,\n    nutrients: \"efg\",\n    composition: \"22%\"\n  }, {\n    name: 'xyz',\n    form: 0,\n    inventory: 12,\n    units: 0,\n    nutrients: \"hij\",\n    composition: \"45%\"\n  }, {\n    name: 'wer',\n    form: 1,\n    inventory: 12,\n    units: 3,\n    nutrients: \"klm\",\n    composition: \"50%\"\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Form',\n    field: 'form',\n    lookup: {\n      0: 'Granular',\n      1: 'Powder',\n      2: 'Liquid',\n      3: 'Gas'\n    }\n  }, {\n    title: \"Inventory\",\n    field: \"inventory\"\n  }, {\n    title: 'Units',\n    field: 'units',\n    lookup: {\n      0: 'litres',\n      1: 'gallons',\n      2: 'kilograms',\n      3: 'pounds',\n      4: 'tonnes'\n    },\n    filtering: false\n  }, {\n    title: 'Nutrients Name',\n    field: 'nutrients',\n    filtering: false\n  }, {\n    title: 'Nutrients Composition',\n    field: 'composition',\n    filtering: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Fertilisers\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        exportButton: true,\n        filtering: true,\n        search: false\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this),\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FertiliserTable, \"h2iD5vfFahq33ZzO6bbvyvqZzBs=\");\n\n_c = FertiliserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FertiliserTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Fertiliser/FertiliserTable.js"],"names":["React","MaterialTable","CreateIcon","AddCircleRoundedIcon","DeleteIcon","Export","FertiliserTable","data","setData","useState","name","form","inventory","units","nutrients","composition","columns","title","field","lookup","filtering","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","exportButton","search","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from '../../export.png';\r\n\r\nexport default function FertiliserTable() {\r\n  const [data, setData] = React.useState([\r\n    { name: 'Abc', form: 1, inventory: 12, units: 1, nutrients: \"Abc\", composition: \"12%\" },\r\n    { name: 'Efg', form: 3, inventory: 12, units: 2, nutrients: \"efg\", composition: \"22%\" },\r\n    { name: 'xyz', form: 0, inventory: 12, units: 0, nutrients: \"hij\", composition: \"45%\" },\r\n    { name: 'wer', form: 1, inventory: 12, units: 3, nutrients: \"klm\", composition: \"50%\" },\r\n  ])\r\n  const columns = [{\r\n    title: 'Name', field: 'name',\r\n  },\r\n  {\r\n    title: 'Form', field: 'form', lookup: { 0: 'Granular', 1: 'Powder', 2: 'Liquid', 3: 'Gas' }\r\n  },\r\n  {\r\n    title: \"Inventory\", field: \"inventory\",\r\n  },\r\n  {\r\n    title: 'Units', field: 'units', lookup: { 0: 'litres', 1: 'gallons', 2: 'kilograms', 3: 'pounds', 4: 'tonnes' }, filtering: false\r\n  },\r\n  {\r\n    title: 'Nutrients Name', field: 'nutrients', filtering: false\r\n  },\r\n  {\r\n    title: 'Nutrients Composition', field: 'composition', filtering: false\r\n  },\r\n  ]\r\n  return (\r\n    <div>\r\n      <MaterialTable title=\"Fertilisers\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          exportButton: true,\r\n          filtering: true,\r\n          search: false,\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}