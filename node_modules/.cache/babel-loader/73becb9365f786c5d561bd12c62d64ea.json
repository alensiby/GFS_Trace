{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Chemicals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chemicals(props) {\n  _s();\n\n  const [description, setdescription] = React.useState(\"\");\n  const [bool, setbool] = React.useState(false);\n  const [helper, sethelper] = React.useState(\"\");\n  const [openchemical, setopenchemical] = React.useState(false);\n\n  const handleChange = event => {\n    setdescription(event.target.value);\n\n    if (event.target.value == '') {\n      setbool(true);\n      sethelper(\"Required\");\n    } else {\n      setbool(false);\n      sethelper(\"\");\n    }\n  };\n\n  const handleClickchemical = event => {\n    setopenchemical(true);\n  };\n\n  const handleClose = () => {\n    setopenchemical(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 0,\n      sm: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estimated Total: 0 ha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 0,\n      sm: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleClickchemical,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 122\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              display: 'grid'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 420\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"description\",\n                label: \"Description\",\n                value: description,\n                onChange: handleChange,\n                helperText: helper,\n                error: bool,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Chemicals, \"Xr0d/MdcfcESNqIEynTIC3e2gWo=\");\n\n_c = Chemicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chemicals\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Chemicals.js"],"names":["React","useState","Chemicals","props","description","setdescription","bool","setbool","helper","sethelper","openchemical","setopenchemical","handleChange","event","target","value","handleClickchemical","handleClose","open","display","m","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Chemicals(props) {\r\n const [description, setdescription] = React.useState(\"\");\r\n const [bool, setbool] = React.useState(false);\r\n const [helper, sethelper] = React.useState(\"\");\r\n const [openchemical, setopenchemical] = React.useState(false);\r\nconst handleChange = (event) => {\r\n    setdescription(event.target.value);\r\n    if (event.target.value=='') {\r\n        setbool(true)\r\n        sethelper(\"Required\")\r\n    }\r\n    else{\r\n        setbool(false)\r\n        sethelper(\"\")\r\n    }\r\n};\r\nconst handleClickchemical = (event) => {\r\n    setopenchemical(true)\r\n}\r\nconst handleClose = () => {\r\n       \r\n    setopenchemical(false);\r\n  \r\n};\r\n\r\nreturn(\r\n<div>\r\n<Grid item xs={0} sm={0}>\r\n                                <div><p>Estimated Total: 0 ha</p></div>\r\n                            </Grid>\r\n                            <Grid item xs={0} sm={0}>\r\n                                <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickchemical}><b>ADD</b></Button></span>\r\n                               \r\n                                <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>New Item</DialogTitle>\r\n            <DialogContent>\r\n                <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            value={description}\r\n                            onChange={handleChange}\r\n                            helperText={helper}\r\n                            error={bool}                        \r\n                            autocomplete=\"off\"\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                <Button color=\"primary\">SAVE</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n                                \r\n                            </Grid>\r\n</div>\r\n)\r\n}"]},"metadata":{},"sourceType":"module"}