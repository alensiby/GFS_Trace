{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\SelectCheck.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Kelly Snyder'];\nconst nozzle = ['Nozzle1', 'Nozzle2', 'Nozzle3'];\nconst paddock = ['Paddock1', 'Paddock2', 'Paddock3'];\nexport default function SelectCheck(props) {\n  _s();\n\n  const {\n    name,\n    label,\n    value,\n    restart,\n    choice\n  } = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"standard\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n      label: label,\n      multiple: true,\n      name: name,\n      value: personName,\n      onChange: handleChange,\n      renderValue: selected => selected.join(', '),\n      MenuProps: MenuProps,\n      inputProps: {\n        readOnly: restart\n      },\n      children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: name,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: personName.indexOf(name) > -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectCheck, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = SelectCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCheck\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/SelectCheck.js"],"names":["React","FormControl","InputLabel","MenuItem","Select","MuiSelect","ListItemText","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","nozzle","paddock","SelectCheck","props","name","label","value","restart","choice","personName","setPersonName","useState","handleChange","event","target","split","selected","join","readOnly","map","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,MAAM,IAAIC,SAAtD,QAAuE,mBAAvE;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AAUA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,cANY,CAAd;AAQA,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,CAAf;AAMA,MAAMC,OAAO,GAAG,CACd,UADc,EAEd,UAFc,EAGd,UAHc,CAAhB;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA;AAA9B,MAAwCL,KAA9C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8B1B,KAAK,CAAC2B,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAER,QAAAA;AAAF;AADJ,QAEFO,KAFJ;AAGAH,IAAAA,aAAa,EACX;AACA,WAAOJ,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACS,KAAN,CAAY,GAAZ,CAA5B,GAA+CT,KAFpC,CAAb;AAID,GARD;;AASA,sBACE,QAAC,WAAD;AACE,IAAA,OAAO,EAAC,UADV;AAAA,4BAEE,QAAC,UAAD;AAAA,gBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,IAAI,EAAED,IAHR;AAIE,MAAA,KAAK,EAAEK,UAJT;AAKE,MAAA,QAAQ,EAAEG,YALZ;AAME,MAAA,WAAW,EAAGI,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAN7B;AAOE,MAAA,SAAS,EAAEvB,SAPb;AAQE,MAAA,UAAU,EAAE;AAAEwB,QAAAA,QAAQ,EAACX;AAAX,OARd;AAAA,gBAUGR,KAAK,CAACoB,GAAN,CAAWf,IAAD,iBACT,QAAC,QAAD;AAAqB,QAAA,KAAK,EAAEA,IAA5B;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEK,UAAU,CAACW,OAAX,CAAmBhB,IAAnB,IAA2B,CAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GArCuBF,W;;KAAAA,W","sourcesContent":["import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\nconst nozzle = [\n  'Nozzle1',\n  'Nozzle2',\n  'Nozzle3',\n  \n];\nconst paddock = [\n  'Paddock1',\n  'Paddock2',\n  'Paddock3',\n  \n];\n\nexport default function SelectCheck(props) {\n  \n  const { name, label, value,restart, choice} = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}