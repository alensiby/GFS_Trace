{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Job/job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MaterialTable, { MTableCell } from \"material-table\";\nimport { Checkbox, Modal, Icon, Form, Button, Input } from \"semantic-ui-react\";\nimport \"./job.css\";\nimport '../Pages.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTranslation, Trans } from 'react-i18next';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Useform } from './Useform';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport * as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Grid, TextField, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css';\nimport { TextareaAutosize } from '@mui/material';\nimport { jobData_withoutcomplete, jobData_withcomplete } from \"../../../Data/JobData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  creator: '',\n  assigned: '',\n  category: '',\n  dueDate: new Date(),\n  priority: '',\n  started: '',\n  completed: '',\n  restartjob: '',\n  description: \"\",\n  notes: \"\"\n};\nexport default function Job() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const [selected, toggleselected] = useState(false);\n  const [rowdatas, setrowdatas] = React.useState({});\n  const [newedit, setnewedit] = React.useState(true);\n  const {\n    t\n  } = useTranslation();\n  const columns = [{\n    title: t('jobs.status', \"Status\"),\n    field: \"status\",\n    lookup: {\n      '0': /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"jobs.raised\",\n        children: \"Raised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this),\n      '1': t('jobs.raisedandassigned', 'Raised And Assigned'),\n      '2': t('jobs.inprogress', 'In Progress'),\n      '3': t('jobs.onhold', 'On Hold'),\n      '4': t('jobs.completed', 'Completed')\n    },\n    render: rowData => {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: rowData.status,\n        placement: \"bottom-start\",\n        arrow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this);\n    },\n    render: rowData => {\n      switch (rowData.status) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle outline\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this);\n\n        case '4':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"green circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 24\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: t('jobs.priority', 'Priority'),\n    field: \"priority\",\n    lookup: {\n      '0': t('jobs.low', 'Low'),\n      '1': t('jobs.normal', 'Normal'),\n      '2': t('jobs.high', 'High'),\n      '3': t('jobs.safety', 'Safety')\n    },\n    render: rowData => {\n      switch (rowData.priority) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"angle down\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue angle up\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red angle double up\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange exclamation triangle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: t('jobs.description', 'Description'),\n    field: \"description\"\n  }, {\n    title: t('jobs.category', 'Category'),\n    field: \"category\",\n    lookup: {\n      '0': 'None',\n      '1': 'Equipment',\n      '2': 'Paddock',\n      '3': 'Fuel Tank',\n      '4': 'Silo',\n      '5': 'Livestock'\n    }\n  }, {\n    title: t('jobs.asset', 'Asset'),\n    field: \"asset\"\n  }, {\n    title: t('jobs.duedate', 'Due Date'),\n    field: \"duedate\",\n    type: \"date\",\n    filtering: false\n  }, {\n    title: t('jobs.lastupdate', 'Last Update'),\n    field: \"lastupdate\",\n    type: \"date\",\n    filtering: false\n  }];\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = Useform(initialValues);\n  const [bool, setbool] = React.useState(false);\n  const [status, setstatus] = React.useState(1);\n  const [startdate, setstartdate] = React.useState('None');\n  const [starttime, setstarttime] = React.useState('');\n  const [enddate, setenddate] = React.useState('None');\n  const [endtime, setendtime] = React.useState('');\n  const [img, setimg] = React.useState( /*#__PURE__*/_jsxDEV(Icon, {\n    name: \"blue circle outline\",\n    size: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 38\n  }, this));\n  const date = \"\";\n  var d = 3;\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = event => {\n    setstatus(event.target.value);\n    d = event.target.value;\n    setimg(jobAssign.getStatus()[d - 1].icon);\n\n    if (d == 3 || status <= 2 && d > 3) {\n      const current = new Date();\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setstartdate(date);\n      setstarttime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n\n    if (d == 5) {\n      const current = new Date();\n      setChecked(true);\n      setbool(true);\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setenddate(date);\n      setendtime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n  };\n\n  const handleClick = e => {\n    setChecked(false);\n    setbool(false);\n    setenddate('None');\n    setendtime('');\n    setstatus(3);\n    setimg(jobAssign.getStatus()[2].icon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          \"color\": \"black\",\n          \"margin-bottom\": \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"jobs.heading\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 63\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          onClick: () => toggleselected(!selected),\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"general.showcompleted\",\n          children: \"Show Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      open: open,\n      as: Form,\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: newedit === true ? \"New Job\" : \"Edit Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"CREATOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"creator\",\n              value: \"JESTEENA JOSE\",\n              variant: \"standard\",\n              fluid: true,\n              InputProps: {\n                readOnly: true\n              },\n              onChange: handleInputChange,\n              defaultValue: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(SelectCheck, {\n            name: \"assigned\",\n            label: \"ASSIGNED\",\n            value: values.assigned,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Category, {\n            name: \"category\",\n            label: \"Category\",\n            value: values.category,\n            onChange: handleInputChange,\n            options: jobAssign.getCategory()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"DUE DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MyDatePicker, {\n            name: \"dueDate\",\n            value: values.dueDate,\n            onChange: handleInputChange,\n            defaultValue: rowdatas.duedate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"priority\",\n            label: \"PRIORITY\",\n            value: values.priority,\n            onChange: handleInputChange,\n            options: jobAssign.getPriority()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"STARTED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: startdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: starttime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"COMPLETED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: enddate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: endtime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 31\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 0,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 0,\n                sm: 0,\n                md: 0,\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 33\n                }, this), img]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 30,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  variant: \"standard\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"STATUS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                    label: \"STATUS\",\n                    name: \"status\",\n                    value: status,\n                    onChange: handleChange,\n                    inputProps: {\n                      readOnly: bool\n                    },\n                    children: jobAssign.getStatus().map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item.id,\n                      children: item.title\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 58\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 30,\n                md: 5,\n                children: /*#__PURE__*/_jsxDEV(Fade, {\n                  in: checked,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      cursor: 'pointer',\n                      paddingLeft: '95px',\n                      color: 'green'\n                    },\n                    onClick: handleClick,\n                    children: \"RE-START JOB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"des\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DESCRIPTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            style: {\n              border: \"none\",\n              outline: \"none\",\n              width: 650,\n              height: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"des\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"NOTES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            style: {\n              border: \"none\",\n              outline: \"none\",\n              width: 650,\n              height: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Save\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: () => {\n            setOpen(false);\n          },\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-table\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: selected ? jobData_withcomplete : jobData_withoutcomplete,\n        localization: {\n          toolbar: {\n            searchTooltip: t('materialtable.searchtooltip', 'Search'),\n            searchPlaceholder: t('materialtable.searchplaceholder', 'Search')\n          },\n          header: {\n            actions: t('materialtable.headeractions', 'Actions')\n          },\n          body: {\n            addTooltip: t('materialtable.bodyaddtooltip', 'Add'),\n            deleteTooltip: t('materialtable.bodydeletetooltip', 'Delete'),\n            editTooltip: t('materialtable.edittooltip', 'Edit'),\n            emptyDataSourceMessage: t('materialtable.emptydatasourcemessage', 'No records to diplay'),\n            editRow: {\n              deleteText: t('materialtable.deletetext', 'Are you sure u want to delete?'),\n              cancelTooltip: t('materialtable.editrowcanceltip', 'Cancel'),\n              saveTooltip: t('materialtable.editrowsavetooltip', 'Save')\n            },\n            filterRow: {\n              filterTooltip: t('materialtable.feltertooltip', 'Filter')\n            }\n          },\n          pagination: {\n            previousTooltip: t('materialtable.previoustooltip', 'Previous Page'),\n            nextTooltip: t('materialtable.nexttooltip', 'Next Page'),\n            labelRowsSelect: t('materialtable.labelrowselect', 'rows')\n          }\n        },\n        options: {\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          filtering: true,\n          actionsColumnIndex: -1\n        },\n        components: {\n          Cell: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"bottom\",\n            title: props.value ? props.value : '',\n            children: /*#__PURE__*/_jsxDEV(MTableCell, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this) /// Add translation for tooltip also\n\n        },\n        actions: [{\n          icon: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n            fontSize: \"large\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this),\n          isFreeAction: true,\n          onClick: () => {\n            setnewedit(true);\n            setrowdatas({});\n            setOpen(true);\n          }\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this),\n          onClick: (rowData, e) => {\n            setnewedit(false);\n            setrowdatas(e);\n            setOpen(true);\n          }\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Job, \"V9gJp+uFX+sKNUmE1dU2itg77eY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Job/job.js"],"names":["React","useState","MaterialTable","MTableCell","Checkbox","Modal","Icon","Form","Button","Input","Tooltip","useTranslation","Trans","CreateIcon","AddCircleRoundedIcon","DeleteIcon","Useform","Select","SelectCheck","jobAssign","Category","MyDatePicker","Grid","TextField","Fade","FormControl","InputLabel","MenuItem","MuiSelect","TextareaAutosize","jobData_withoutcomplete","jobData_withcomplete","initialValues","creator","assigned","category","dueDate","Date","priority","started","completed","restartjob","description","notes","Job","open","setOpen","handleClickOpen","selected","toggleselected","rowdatas","setrowdatas","newedit","setnewedit","t","columns","title","field","lookup","render","rowData","status","type","filtering","values","setValues","handleInputChange","bool","setbool","setstatus","startdate","setstartdate","starttime","setstarttime","enddate","setenddate","endtime","setendtime","img","setimg","date","d","checked","setChecked","handleChange","event","target","value","getStatus","icon","current","toLocaleDateString","day","month","year","replace","toLocaleTimeString","hour","minute","handleClick","e","readOnly","getCategory","duedate","getPriority","map","item","id","cursor","paddingLeft","color","border","outline","width","height","toolbar","searchTooltip","searchPlaceholder","header","actions","body","addTooltip","deleteTooltip","editTooltip","emptyDataSourceMessage","editRow","deleteText","cancelTooltip","saveTooltip","filterRow","filterTooltip","pagination","previousTooltip","nextTooltip","labelRowsSelect","showTitle","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","actionsColumnIndex","Cell","props","isFreeAction","onClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport MaterialTable, { MTableCell }  from \"material-table\";\nimport { Checkbox, Modal, Icon, Form, Button, Input } from \"semantic-ui-react\";\nimport \"./job.css\";\nimport '../Pages.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {useTranslation,Trans} from 'react-i18next';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Useform} from './Useform';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Grid,TextField, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { TextareaAutosize } from '@mui/material';\n\nimport {\n  jobData_withoutcomplete,\n  jobData_withcomplete,\n} from \"../../../Data/JobData\";\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nexport default function Job() {\n\n  const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n   \n\n  const [selected, toggleselected] = useState(false);\n  const [rowdatas, setrowdatas] = React.useState({});\n  const [newedit, setnewedit] = React.useState(true);\n  const {t} =useTranslation();\n  \n  const columns = [\n    {\n\n      title: t('jobs.status',\"Status\"),\n      field: \"status\",\n     \n     \n      lookup: { '0': <Trans i18nKey=\"jobs.raised\">Raised</Trans>,\n      '1': t('jobs.raisedandassigned','Raised And Assigned'),\n      '2': t('jobs.inprogress','In Progress'),\n      '3': t('jobs.onhold','On Hold'),\n      '4': t('jobs.completed','Completed'),\n\n      } ,\n      render: rowData => {\n        return <Tooltip title={rowData.status} placement=\"bottom-start\" arrow>\n           </Tooltip>            \n     },\n      render: rowData => {\n        switch (rowData.status) {\n        case '0':\n                return <Icon name='blue circle outline' size='large'/>\n        case '4':\n                return <Icon name='green circle' size='large'/>\n        case '1':\n                return <Icon name='blue circle'size='large'/>\n        case '3':\n               return <Icon name='red circle'size='large'/>\n        case '2':\n               return <Icon name='orange circle'size='large'/>\n      default:\n        return <></>\n          }\n        }\n\n  \n},\n\n    { title: t('jobs.priority','Priority'), field: \"priority\" ,\n    lookup: { '0': t('jobs.low','Low'), \n    '1': t('jobs.normal','Normal'), \n    '2': t('jobs.high','High'), \n    '3': t('jobs.safety','Safety')},\n\n    render: rowData => {\n      switch (rowData.priority) {\n        case '0':\n           return <Icon name='angle down'size='large'/>\n        case '1':\n           return <Icon name='blue angle up'size='large'/>\n        case '2':\n           return <Icon name='red angle double up'size='large'/>\n   \n        case '3':\n           return <Icon name='orange exclamation triangle'size='large'/>\n    default:\n      return <></>\n    }}\n  },\n\n    { title: t('jobs.description','Description'), field: \"description\" },\n    { title: t('jobs.category','Category'), field: \"category\" ,\n    lookup: { '0': 'None', '1': 'Equipment', '2': 'Paddock', '3': 'Fuel Tank', '4': 'Silo', '5': 'Livestock'},},\n    { title: t('jobs.asset','Asset'), field: \"asset\" },\n    { title: t('jobs.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\n    { title: t('jobs.lastupdate','Last Update'), field: \"lastupdate\", type:\"date\", filtering: false },\n\n    \n  ];\n \n  const {\n    values,\n    setValues,\n    handleInputChange\n} = Useform(initialValues);\n\nconst [bool, setbool] = React.useState(false);\nconst [status, setstatus] = React.useState(1);\nconst [startdate, setstartdate] = React.useState('None');\nconst [starttime, setstarttime] = React.useState('');\nconst [enddate, setenddate] = React.useState('None');\nconst [endtime, setendtime] = React.useState('');\nconst [img, setimg] = React.useState(<Icon name='blue circle outline' size='large'/>);\nconst date = \"\";\nvar d = 3;\nconst [checked, setChecked] = React.useState(false);\n\nconst handleChange = (event) => {\n    setstatus(event.target.value);\n    d = event.target.value;\n    setimg(jobAssign.getStatus()[d - 1].icon);\n    if (d == 3 || (status <= 2 && d > 3)) {\n        const current = new Date();\n        const date = current.toLocaleDateString('en-GB',\n            {\n                day: '2-digit', month: 'long', year: 'numeric'\n            }).replace(/ /g, ' ');\n        setstartdate(date);\n        setstarttime(current.toLocaleTimeString(\"en-US\",\n            {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n            }));\n    }\n    if (d == 5) {\n        const current = new Date();\n        setChecked(true);\n        setbool(true);\n        const date = current.toLocaleDateString('en-GB',\n            {\n                day: '2-digit', month: 'long', year: 'numeric'\n            }).replace(/ /g, ' ');\n        setenddate(date);\n        setendtime(current.toLocaleTimeString(\"en-US\",\n            {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n            }));\n\n    }\n\n};\n\nconst handleClick = (e) => {\n    setChecked(false);\n    setbool(false);\n    setenddate('None');\n    setendtime('');\n    setstatus(3);\n    setimg(jobAssign.getStatus()[2].icon);\n}\n\n\n  return (\n    <div  className= \"table-size\">\n    \n    <div className= \"subheader\">\n             \n\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"jobs.heading\">Jobs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n\n      \n        <div className=\"toggle-switch\">\n          <Checkbox\n            toggle\n            onClick={() => toggleselected(!selected)}\n            checked={selected}\n          />\n        </div>\n\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\n\n      </div>\n      <Modal onClose={() => setOpen(false)} open={open} as={Form}  size='small'>\n        <Modal.Header>\n          {newedit === true ? \"New Job\" : \"Edit Job\"}\n        </Modal.Header>\n        <Modal.Content>\n        \n        <Form>\n             <InputLabel>CREATOR</InputLabel>\n                <FormControl fullWidth>\n                    <TextField                    \n                        name=\"creator\"\n                        value=\"JESTEENA JOSE\"\n                        variant=\"standard\"\n                        fluid\n                        InputProps={{\n                            readOnly: true,\n                          }}\n                        onChange={handleInputChange}\n                        defaultValue=\"\"\n                    />\n                </FormControl>\n                    <br/><br/>\n                   \n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        \n                    />\n                    <br /><br />\n                  \n                    <InputLabel>DUE DATE</InputLabel>\n                   \n                            <MyDatePicker\n                                name=\"dueDate\"\n                                \n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                defaultValue={rowdatas.duedate}\n                            />\n                      <br /><br /> <br />\n                        \n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority}\n                                \n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                \n                            />    \n                    <br /> <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n                            \n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br /><br />  <br /><br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={30} md={4}>\n                                <FormControl fullWidth\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                                </Grid>\n                            <Grid item xs={30} md={5}>\n                                <Fade in={checked}>\n                                    <p style={{cursor:'pointer', paddingLeft:'95px', color:'green'}} onClick={handleClick}>RE-START JOB</p>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:650, height:200}}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:650, height:200}}/>\n        </Form>\n            </Modal.Content>\n        <Modal.Actions>\n          <Button type=\"submit\" color=\"black\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button\n            content=\"Save\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={() => {\n              setOpen(false);\n             \n            }}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n      <div className=\"equipment-table\">\n        <MaterialTable\n          columns={columns}\n          data={selected ? jobData_withcomplete : jobData_withoutcomplete}\n          \n          localization={{\n            toolbar:{\n              searchTooltip:t('materialtable.searchtooltip','Search'),\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\n            },\n            header:{\n              actions:t('materialtable.headeractions','Actions')\n\n            },\n            body:{\n              addTooltip:t('materialtable.bodyaddtooltip','Add'),\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\n              editTooltip:t('materialtable.edittooltip','Edit'),\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\n              editRow:{\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\n              },\n              filterRow:{\n                filterTooltip:t('materialtable.feltertooltip','Filter')\n              }\n            },\n            pagination:{\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\n              \n            }\n          }}\n\n          options={{\n            showTitle: false,\n            paging: true,\n            pageSizeOptions: [2, 5, 10, 15, 20],\n            paginationType: \"stepped\",\n            showFirstLastPageButtons: false,\n            filtering: true,\n            actionsColumnIndex:-1\n          }}\n           components={{\n          Cell: (props) => (\n            <Tooltip placement=\"bottom\" title={props.value ? props.value : ''}>\n              <MTableCell {...props} />\n            </Tooltip>       /// Add translation for tooltip also\n          ),\n        }}\n          actions={[\n          {\n            icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\n            isFreeAction: true,\n            onClick: () => {\n                setnewedit(true);\n                setrowdatas({});\n                setOpen(true);\n              },\n          },\n          {\n            icon: () => <CreateIcon color=\"action\" />,\n           \n            onClick: (rowData, e) => {\n                setnewedit(false);\n                setrowdatas(e);\n                setOpen(true);\n              },\n          },\n          {\n            icon: () => <DeleteIcon color=\"action\" />\n          }\n          ]}\n        ></MaterialTable>        \n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}