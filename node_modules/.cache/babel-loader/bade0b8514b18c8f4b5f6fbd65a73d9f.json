{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Chemicals.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport Chemical_img from '../services/chemical.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chemicals(props) {\n  _s();\n\n  const [chemical, setchemical] = React.useState(\"\");\n  const [chemical1, setchemical1] = React.useState(\"\");\n  const [chemical2, setchemical2] = React.useState(\"\");\n  const [paddock2, setpaddock2] = React.useState(\"\");\n  const [paddock, setpaddock] = React.useState(\"\");\n  const [unit, setunit] = React.useState(\"\");\n  const [img, setimg] = React.useState('');\n  const [openchemical, setopenchemical] = React.useState(false);\n  const [bool, setbool] = React.useState(false);\n  const chemical_options = [{\n    id: '1',\n    title: 'Chem1'\n  }, {\n    id: '2',\n    title: 'Chem2'\n  }];\n  const units = [{\n    id: 1,\n    title: 'ml/ha'\n  }, {\n    id: 2,\n    title: 'Kg/ha'\n  }, {\n    id: 3,\n    title: 'L/ha'\n  }, {\n    id: 4,\n    title: 'lb/ha'\n  }, {\n    id: 5,\n    title: 'oz/ha'\n  }, {\n    id: 6,\n    title: 'g/ha'\n  }, {\n    id: 7,\n    title: 'floz/ac'\n  }, {\n    id: 8,\n    title: 'qt/ac'\n  }, {\n    id: 9,\n    title: 'pt/ac'\n  }, {\n    id: 10,\n    title: 'oz/ac'\n  }, {\n    id: 11,\n    title: 'lb/ac'\n  }, {\n    id: 12,\n    title: 'g/ac'\n  }, {\n    id: 13,\n    title: 'Kg/1000L'\n  }, {\n    id: 14,\n    title: 't/ha'\n  }, {\n    id: 15,\n    title: 'L/Kg'\n  }, {\n    id: 16,\n    title: 'L/t'\n  }];\n\n  const handleChange = (event, value) => {\n    setchemical(value.props.children);\n    setchemical1(event.target.value);\n  };\n\n  const handleClose = () => {\n    setopenchemical(false);\n  };\n\n  const handleClickchemical = event => {\n    setopenchemical(true);\n  };\n\n  const handleOk = event => {\n    setchemical2(chemical);\n    setpaddock2(paddock);\n    setopenchemical(false);\n    setimg(Chemical_img);\n    setbool(true);\n  };\n\n  const handleChange1 = event => {\n    setunit(event.target.value);\n  };\n\n  const {\n    name,\n    label,\n    restart\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        display: bool ? 'block' : 'none'\n      },\n      color: \"inherit\",\n      onClick: handleClickchemical,\n      size: \"large\",\n      fullWidth: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 0,\n          md: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            className: \"img\",\n            alt: \"tractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 0,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: chemical2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: paddock2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 0,\n      sm: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estimated Total: 0 ha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 0,\n      sm: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleClickchemical,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 122\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openchemical,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Chemicals/Additives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              display: 'grid'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 420\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                label: \"Chemical\",\n                name: \"chemical\",\n                value: chemical1,\n                onChange: handleChange,\n                displayEmpty: true,\n                children: chemical_options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item.id,\n                  children: item.title\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 66\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 42\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                label: \"Unit\",\n                name: \"unit\",\n                value: unit,\n                onChange: handleChange1,\n                displayEmpty: true,\n                children: units.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item.title,\n                  children: item.title\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 66\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleOk,\n            color: \"primary\",\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chemicals, \"0lLJ2ZS3xtjPIf1G0e5ONWtOiBw=\");\n\n_c = Chemicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chemicals\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Chemicals.js"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","MenuItem","Grid","Select","MuiSelect","Chemical_img","Chemicals","props","chemical","setchemical","useState","chemical1","setchemical1","chemical2","setchemical2","paddock2","setpaddock2","paddock","setpaddock","unit","setunit","img","setimg","openchemical","setopenchemical","bool","setbool","chemical_options","id","title","units","handleChange","event","value","children","target","handleClose","handleClickchemical","handleOk","handleChange1","name","label","restart","display","m","minWidth","map","item"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport Chemical_img from '../services/chemical.png'\r\n\r\nexport default function Chemicals(props) {\r\n   \r\n    const [chemical, setchemical] = React.useState(\"\");\r\n    const [chemical1, setchemical1] = React.useState(\"\");\r\n    const [chemical2, setchemical2] = React.useState(\"\");\r\n    \r\n    const [paddock2, setpaddock2] = React.useState(\"\");  \r\n    const [paddock, setpaddock] = React.useState(\"\");  \r\n    const [unit, setunit] = React.useState(\"\");   \r\n    const [img, setimg] = React.useState('');\r\n    const [openchemical, setopenchemical] = React.useState(false);\r\n    const [bool, setbool] = React.useState(false);\r\n    \r\n    const chemical_options =[\r\n        {id:'1', title:'Chem1'},\r\n        {id:'2', title:'Chem2'},\r\n     \r\n    ]\r\n    const units = [\r\n        { id: 1, title: 'ml/ha' },\r\n        { id: 2, title: 'Kg/ha' },\r\n        { id: 3, title: 'L/ha' },\r\n        { id: 4, title: 'lb/ha' },\r\n        { id: 5, title: 'oz/ha' },\r\n        { id: 6, title: 'g/ha' },\r\n        { id: 7, title: 'floz/ac' },\r\n        { id: 8, title: 'qt/ac' },\r\n        { id: 9, title: 'pt/ac' },\r\n        { id: 10, title: 'oz/ac' },\r\n        { id: 11, title: 'lb/ac' },\r\n        { id: 12, title: 'g/ac' },\r\n        { id: 13, title: 'Kg/1000L' },\r\n        { id: 14, title: 't/ha' },\r\n        { id: 15, title: 'L/Kg' },\r\n        { id: 16, title: 'L/t' }\r\n    ];\r\n       \r\n          \r\n       \r\n    const handleChange = (event, value) => {\r\n       \r\n        setchemical(value.props.children);\r\n        setchemical1(event.target.value);\r\n    };\r\n    const handleClose = () => {\r\n       \r\n        setopenchemical(false);\r\n      \r\n    };\r\n    \r\n   \r\n\r\n    const handleClickchemical = (event) => {\r\n        setopenchemical(true)\r\n    }\r\n\r\n    const handleOk = (event) => {\r\n        setchemical2(chemical);\r\n        setpaddock2(paddock);\r\n            setopenchemical(false); \r\n            setimg(Chemical_img);\r\n            setbool(true);\r\n        \r\n    }\r\n    const handleChange1 = (event) => {\r\n     \r\n        setunit(event.target.value);\r\n    }\r\n   \r\n   const { name, label, restart } = props;\r\n    \r\n    return (\r\n        <div>\r\n           \r\n            <Button style={{display: bool ? 'block' : 'none' }} color=\"inherit\" onClick={handleClickchemical} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={0}>\r\n                        <p>{chemical2}</p>\r\n                        <InputLabel>{paddock2}</InputLabel>\r\n                     </Grid>\r\n                </Grid>\r\n            </Button>\r\n           \r\n                            <Grid item xs={0} sm={0}>\r\n                                <div><p>Estimated Total: 0 ha</p></div>\r\n                            </Grid>\r\n                            <Grid item xs={0} sm={0}>\r\n                                <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickchemical}><b>ADD</b></Button></span>\r\n                               \r\n                                <Dialog open={openchemical} onClose={handleClose}>\r\n                                 <DialogTitle>Chemicals/Additives</DialogTitle>\r\n                                     <DialogContent>\r\n                                       <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                         <InputLabel>{label}</InputLabel>\r\n                                            <MuiSelect\r\n                                                label=\"Chemical\"\r\n                                                name=\"chemical\"\r\n                                                value={chemical1}\r\n                                                onChange={handleChange}\r\n                                                displayEmpty>\r\n                                                \r\n                                                {\r\n                                                    chemical_options.map(\r\n                                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                                    )\r\n                                                }\r\n                                            </MuiSelect>\r\n                                        </FormControl>\r\n                                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 42 }}>\r\n                                            <InputLabel>Unit</InputLabel>\r\n                                            <MuiSelect\r\n                                                label=\"Unit\"\r\n                                                name=\"unit\"\r\n                                                value={unit}\r\n                                                onChange={handleChange1}\r\n                                                displayEmpty>\r\n                                                \r\n                                                {\r\n                                                    units.map(\r\n                                                        item => (<MenuItem key={item.id} value={item.title}>{item.title}</MenuItem>)\r\n                                                    )\r\n                                                }\r\n                                            </MuiSelect>\r\n                                        </FormControl>\r\n                                      </Box>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                                        <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                            </Grid>\r\n                            \r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}