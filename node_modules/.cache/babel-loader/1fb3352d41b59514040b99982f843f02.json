{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Chemicals\\\\Chemical.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport '../../Pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chemicals() {\n  _s();\n\n  const [data, setData] = React.useState([{\n    name: 'SR Fuel Tank',\n    capacity: '23',\n    unit: 'L',\n    type: 'diesel'\n  }, {\n    name: 'NewSon Fuel Tank',\n    capacity: '50',\n    unit: 'L',\n    type: 'avaition'\n  }, {\n    name: 'Queen Tank',\n    capacity: '40',\n    unit: 'gal',\n    type: 'unleaded'\n  }, {\n    name: 'Anns Tank',\n    capacity: '10',\n    unit: 'gal',\n    type: 'adblue'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity'\n  }, {\n    title: 'Unit',\n    field: 'unit',\n    lookup: {\n      'L': 'Litres',\n      'gal': 'Gallons'\n    }\n  }, {\n    title: 'Type',\n    field: 'type',\n    lookup: {\n      'avaition': 'Avaition',\n      'unleaded': 'Unleaded',\n      'adblue': 'AdBlue',\n      'diesel': 'Diesel'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-size\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subheader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            \"color\": \"black\",\n            \"margin-bottom\": \"0px\"\n          },\n          children: \"Chemicals \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA0\\xA0\\xA0\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n        data: data,\n        columns: columns,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          actionsColumnIndex: -1,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          exportButton: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chemicals, \"fQy8YH6PWa8SrZlvpDp0mRG7HP8=\");\n\n_c = Chemicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chemicals\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Chemicals/Chemical.js"],"names":["React","MaterialTable","Chemicals","data","setData","useState","name","capacity","unit","type","columns","title","field","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport '../../Pages.css';\r\n\r\nexport default function Chemicals() {\r\n    \r\n    \r\n\r\n    const [data, setData] = React.useState([\r\n        { name: 'SR Fuel Tank', capacity: '23', unit:'L', type: 'diesel' },\r\n        { name: 'NewSon Fuel Tank', capacity: '50', unit:'L', type: 'avaition' },\r\n        { name: 'Queen Tank', capacity: '40', unit:'gal', type: 'unleaded' },\r\n        { name: 'Anns Tank', capacity: '10', unit:'gal', type: 'adblue' }\r\n         ])\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Capacity', field: 'capacity'\r\n    },\r\n    {\r\n        title: 'Unit', field: 'unit',\r\n        lookup: { 'L': 'Litres', 'gal': 'Gallons'},\r\n    }, {\r\n        title: 'Type', field: 'type', \r\n        lookup: { 'avaition': 'Avaition', 'unleaded': 'Unleaded', 'adblue':'AdBlue', 'diesel':'Diesel' },\r\n    }]\r\n    return (\r\n        <div>\r\n          <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Chemicals </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      </div>\r\n     \r\n            <MaterialTable \r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                \r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n          \r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n            /> </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}