{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Harvest/Harvest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Icon } from 'semantic-ui-react';\nimport { harvestData_withoutcomplete, harvestData_withcomplete } from \"../../../../Data/HarvestData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Harvest() {\n  _s();\n\n  const [selected, toggleselected] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const columns = [{\n    title: \"Status\",\n    field: \"status\",\n    lookup: {\n      '0': 'Raised',\n      '1': 'Raised and Assigned',\n      '2': 'In Progress',\n      '3': 'On Hold',\n      '4': 'Completed'\n    },\n    render: rowData => {\n      switch (rowData.status) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle outline\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this);\n\n        case '4':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"green circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: \"Contract\",\n    field: \"contract\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Approved\",\n    field: \"approved\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Description\",\n    field: \"description\"\n  }, {\n    title: \"Scheduled Date\",\n    field: \"scheduleddate\",\n    type: \"date\",\n    filtering: false\n  }, {\n    title: \"Started\",\n    field: \"started\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Completed\",\n    field: \"completed\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          \"color\": \"black\",\n          \"margin-bottom\": \"0px\"\n        },\n        children: \"Harvest \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          onClick: () => toggleselected(!selected),\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed\",\n        children: \"Show Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-table\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: selected ? harvestData_withcomplete : harvestData_withoutcomplete,\n        editable: {\n          onRowUpdate: (newRow, oldRow) => new Promise(() => {}),\n          onRowDelete: selectedRow => new Promise(() => {})\n        },\n        localization: {\n          toolbar: {\n            searchTooltip: t('materialtable.searchtooltip', 'Search'),\n            searchPlaceholder: t('materialtable.searchplaceholder', 'Search')\n          },\n          header: {\n            actions: t('materialtable.headeractions', 'Actions')\n          },\n          body: {\n            deleteTooltip: t('materialtable.bodydeletetooltip', 'Delete'),\n            editTooltip: t('materialtable.edittooltip', 'Edit'),\n            emptyDataSourceMessage: t('materialtable.emptydatasourcemessage', 'No recorde to diplay'),\n            editRow: {\n              deleteText: t('materialtable.deletetext', 'Are you sure u want to delete?'),\n              cancelTooltip: t('materialtable.editrowcanceltip', 'Cancel'),\n              saveTooltip: t('materialtable.editrowsavetooltip', 'Save')\n            },\n            filterRow: {\n              filterTooltip: t('materialtable.feltertooltip', 'Filter')\n            }\n          },\n          pagination: {\n            previousTooltip: t('materialtable.previoustooltip', 'Previous Page'),\n            nextTooltip: t('materialtable.nexttooltip', 'Next Page'),\n            labelRowsSelect: t('materialtable.labelrowselect', 'rows')\n          }\n        },\n        options: {\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          filtering: true,\n          actionsColumnIndex: -1\n        },\n        icons: {\n          Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Harvest, \"4N6cQYYsR/fH19jXTFnjKQDaPMk=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Harvest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Harvest\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Activities/Harvest/Harvest.js"],"names":["React","useState","MaterialTable","Checkbox","CreateIcon","useTranslation","Trans","Icon","harvestData_withoutcomplete","harvestData_withcomplete","Harvest","selected","toggleselected","t","columns","title","field","lookup","render","rowData","status","type","filtering","onRowUpdate","newRow","oldRow","Promise","onRowDelete","selectedRow","toolbar","searchTooltip","searchPlaceholder","header","actions","body","deleteTooltip","editTooltip","emptyDataSourceMessage","editRow","deleteText","cancelTooltip","saveTooltip","filterRow","filterTooltip","pagination","previousTooltip","nextTooltip","labelRowsSelect","showTitle","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","actionsColumnIndex","Edit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport {useTranslation,Trans} from 'react-i18next';\nimport {Icon} from 'semantic-ui-react';\nimport {\n    harvestData_withoutcomplete,\n    harvestData_withcomplete,\n} from \"../../../../Data/HarvestData\";\n\nexport default function Harvest() {\n  const [selected, toggleselected] = useState(false);\n  const {t} =useTranslation();\n  \n  const columns = [\n    {\n      title: \"Status\",\n      field: \"status\",\n     \n     \n      lookup: { '0': 'Raised',\n      '1': 'Raised and Assigned',\n      '2': 'In Progress',\n      '3': 'On Hold',\n      '4': 'Completed',\n      } ,\n      render: rowData => {\n        switch (rowData.status) {\n        case '0':\n                return <Icon name='blue circle outline' size='large'/>\n        case '4':\n                return <Icon name='green circle' size='large'/>\n        case '1':\n                return <Icon name='blue circle'size='large'/>\n        case '3':\n               return <Icon name='red circle'size='large'/>\n        case '2':\n               return <Icon name='orange circle'size='large'/>\n      default:\n        return <></>\n          }\n        }\n\n  \n},\n    \n{ title: \"Contract\", field: \"contract\",  \nlookup: { 'no': 'No',\n'yes': 'Yes'}\n},\n    \n    { title: \"Approved\", field: \"approved\",lookup: { 'no': 'No',\n    'yes': 'Yes'}\n   },\n    { title: \"Description\", field: \"description\" },\n    { title: \"Scheduled Date\", field: \"scheduleddate\", type:\"date\", filtering: false },\n    { title: \"Started\", field: \"started\",lookup: { 'no': 'No',\n    'yes': 'Yes'} },\n    { title: \"Completed\", field: \"completed\", lookup: { 'no': 'No',\n    'yes': 'Yes'} },\n    \n  ];\n \n  return (\n    <div  className= \"table-size\">\n    \n    <div className= \"subheader\">\n             \n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Harvest </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      \n        <div className=\"toggle-switch\">\n          <Checkbox\n            toggle\n            onClick={() => toggleselected(!selected)}\n            checked={selected}\n          />\n        </div>\n        <div className=\"completed\">Show Completed</div>\n      </div>\n\n      <div className=\"equipment-table\">\n        <MaterialTable\n          columns={columns}\n          data={selected ? harvestData_withcomplete : harvestData_withoutcomplete}\n          editable={{\n            \n            onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\n          }}\n          localization={{\n            toolbar:{\n              searchTooltip:t('materialtable.searchtooltip','Search'),\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\n            },\n            header:{\n              actions:t('materialtable.headeractions','Actions')\n\n            },\n            body:{\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\n              editTooltip:t('materialtable.edittooltip','Edit'),\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No recorde to diplay'),\n              editRow:{\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\n              },\n              filterRow:{\n                filterTooltip:t('materialtable.feltertooltip','Filter')\n              }\n            },\n            pagination:{\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\n              \n            }\n          }}\n          options={{\n            showTitle: false,\n            paging: true,\n            pageSizeOptions: [2, 5, 10, 15, 20],\n            paginationType: \"stepped\",\n            showFirstLastPageButtons: false,\n            filtering: true,\n            actionsColumnIndex:-1\n          }}\n          icons={{\n          \n            \n            Edit: () => <CreateIcon color=\"action\" />,\n           \n          }}\n        ></MaterialTable>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}