{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\Spraylognew.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport * as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css';\nimport { SampleContext } from './context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { Switch } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  operators: '',\n  category: '',\n  dueDate: new Date(),\n  priority: '',\n  started: '',\n  completed: '',\n  restartjob: '',\n  description: \"\",\n  notes: \"\"\n};\n\nfunction Jobnew() {\n  _s();\n\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = Useform(initialValues);\n  const {\n    bool,\n    setbool\n  } = React.useContext(SampleContext);\n  const [status, setstatus] = React.useState('');\n  const [startdate, setstartdate] = React.useState('None');\n  const [starttime, setstarttime] = React.useState('');\n  const [enddate, setenddate] = React.useState('None');\n  const [endtime, setendtime] = React.useState('');\n  const [img, setimg] = React.useState();\n  const date = \"\";\n  var d = 3;\n  const [checked, setChecked] = React.useState(false);\n  const [selected, toggleselected] = React.useState(false);\n\n  const handleChange = event => {\n    setstatus(event.target.value);\n    d = event.target.value;\n    setimg(jobAssign.getStatus()[d - 1].icon);\n\n    if (d == 3 || status <= 2 && d > 3) {\n      const current = new Date();\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setstartdate(date);\n      setstarttime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n\n    if (d == 5) {\n      const current = new Date();\n      setChecked(true);\n      setbool(true);\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setenddate(date);\n      setendtime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n  };\n\n  const handleClick = e => {\n    setChecked(false);\n    setbool(false);\n    setenddate('None');\n    setendtime('');\n    setstatus(3);\n    setimg(jobAssign.getStatus()[2].icon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 11,\n      children: [/*#__PURE__*/_jsxDEV(SelectCheck, {\n        name: \"operators\",\n        label: \"OPERATORS\",\n        value: values.operators,\n        onChange: handleInputChange,\n        restart: bool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 14,\n        sm: 14,\n        children: [/*#__PURE__*/_jsxDEV(MyDatePicker, {\n          name: \"dueDate\",\n          label: \"Due Date\",\n          value: values.dueDate,\n          onChange: handleInputChange,\n          restart: bool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            onClick: () => toggleselected(!selected),\n            checked: selected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"STARTED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: startdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: starttime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"COMPLETED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: enddate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: endtime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 0,\n              sm: 0,\n              md: 0,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), img]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"STATUS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                  label: \"STATUS\",\n                  name: \"status\",\n                  value: status,\n                  onChange: handleChange,\n                  inputProps: {\n                    readOnly: bool\n                  },\n                  children: jobAssign.getStatus().map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.id,\n                    children: item.title\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 58\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Fade, {\n                in: checked,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  color: \"primary\",\n                  onClick: handleClick,\n                  children: \"RE-START JOB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"des\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"SPRAY EQUIPMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Category, {\n      name: \"category\",\n      label: \"Category\",\n      value: values.category,\n      onChange: handleInputChange,\n      options: jobAssign.getCategory(),\n      restart: bool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"des\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"FARMS / PADDOCKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"des\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CHEMICALS / ADDITIVES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"des\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"APPLICATION DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      style: {\n        border: \"none\",\n        outline: \"none\",\n        width: 700,\n        height: 200\n      },\n      disabled: bool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"des\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"NOTES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n      style: {\n        border: \"none\",\n        outline: \"none\",\n        width: 700,\n        height: 200\n      },\n      disabled: bool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jobnew, \"WrslhuBdolPfkbgKII4fa3XYGeM=\");\n\n_c = Jobnew;\nexport default Jobnew;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobnew\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/Spraylognew.js"],"names":["React","Grid","Useform","Form","Input","Select","SelectCheck","jobAssign","Category","MyDatePicker","Button","Fade","FormControl","InputLabel","MenuItem","MuiSelect","SampleContext","TextareaAutosize","Switch","initialValues","operators","category","dueDate","Date","priority","started","completed","restartjob","description","notes","Jobnew","values","setValues","handleInputChange","bool","setbool","useContext","status","setstatus","useState","startdate","setstartdate","starttime","setstarttime","enddate","setenddate","endtime","setendtime","img","setimg","date","d","checked","setChecked","selected","toggleselected","handleChange","event","target","value","getStatus","icon","current","toLocaleDateString","day","month","year","replace","toLocaleTimeString","hour","minute","handleClick","e","readOnly","map","item","id","title","getCategory","border","outline","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from './context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { Switch } from '@mui/material';\n\n\nconst initialValues = {\n  \n    operators: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nfunction Jobnew() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const { bool, setbool } = React.useContext(SampleContext);\n    const [status, setstatus] = React.useState('');\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState();\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const [selected, toggleselected] = React.useState(false);\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n           \n                <Grid item xs={12} sm={11}>\n                    \n                    <SelectCheck\n                        name=\"operators\"\n                        label=\"OPERATORS\"\n                        value={values.operators}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                   \n                        <Grid item xs={14} sm={14}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                       \n                    <br /><br />\n                   \n                    \n                        <Grid item xs={12} sm={7}>\n                         \n                            <Switch \n                            onClick={() => toggleselected(!selected)}\n                            checked={selected}\n                           />\n      \n                        </Grid>\n                    \n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2} >\n                            <Grid item xs={6} sm={6}  >\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>SPRAY EQUIPMENT</label>\n                    </div>\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <br />\n                    \n                    <div className=\"des\">\n                        <label>FARMS / PADDOCKS</label>\n                    </div>\n                    <br />\n\n                    <div className=\"des\">\n                        <label>CHEMICALS / ADDITIVES</label>\n                    </div>\n                    <br />\n\n                    <div className=\"des\">\n                        <label>APPLICATION DETAILS</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\n\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\n                    \n        </Form>\n\n    )\n}\n\nexport default Jobnew\n\n"]},"metadata":{},"sourceType":"module"}