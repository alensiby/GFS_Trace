{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Equipment.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Useform, Form } from '../Useform';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport SelectCheck from './SelectCheck';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport tractor from '../services/tractor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Equipment(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [equipment, setequipment] = React.useState(\"\");\n  const [cat, setcat] = React.useState({});\n  const [img, setimg] = React.useState(tractor);\n  const [img1, setimg1] = React.useState(tractor);\n  var changeequipment = 0;\n  var flag = 0;\n  const arr = {};\n  const [field, setfield] = React.useState(\"None\");\n  const [fieldfarm, setfieldfarm] = React.useState(\"\");\n  const [subfield, setSubfield] = React.useState('NONE');\n  const [rate, setRate] = React.useState('60');\n  const [rateunit, setRateunit] = React.useState('l/Ha');\n  const [fieldval, setfieldval] = React.useState(\"equipment\");\n  const [subfieldval, setSubfieldval] = React.useState('NONE');\n  const [c, setc] = React.useState({});\n  const initialValues = {\n    nozzles: '',\n    equipment: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\"\n  };\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = Useform(initialValues);\n\n  const handleChange = (event, value) => {\n    setequipment(event.target.value);\n    changeequipment = event.target.value;\n    setfieldval(value.props.children);\n    setcat({});\n    flag = 0;\n    const arr = options.filter(a => a.id === changeequipment);\n\n    if (changeequipment != \"\") {\n      setc(arr[0].data);\n      setSubfieldval(\"\");\n      setfieldfarm(\"\");\n      setimg1(options[changeequipment - 1].icon);\n    } else {\n      setc({});\n      setfieldval(\"equipment\");\n      setSubfieldval(\"None\");\n      setfieldfarm(\"\");\n      setimg1(tractor);\n    }\n  };\n\n  const handleChange1 = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setcat(values => ({ ...values,\n      [name]: value\n    }));\n    console.log(cat);\n\n    if (name == \"Farm\") {\n      setfieldfarm(value + \" : \");\n      flag = 1;\n    } else {\n      setSubfieldval(value);\n    }\n  };\n\n  const handleClickOpen = () => {\n    if (!restart) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  const handleOk = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      if (subfieldval == \"\") {\n        alert(\"No \" + fieldval + \" Selected\");\n      } else {\n        if (fieldfarm != \"\") {\n          setfield(fieldval);\n          setSubfield(fieldfarm + subfieldval);\n          setimg(img1);\n          setOpen(false);\n        } else {\n          if (equipment == 1 || equipment == 5) {\n            setfield(fieldval);\n            setSubfield(fieldfarm + subfieldval);\n            setimg(img1);\n            setOpen(false);\n          }\n        }\n      }\n    }\n  };\n\n  const {\n    name,\n    label,\n    value,\n    onChange,\n    options,\n    restart\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"inherit\",\n      onClick: handleClickOpen,\n      size: \"large\",\n      fullWidth: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 0,\n          md: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            className: \"img\",\n            alt: \"tractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: [\"Nozzles:\", subfield]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [rate, \" \", rateunit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Spray Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 11,\n          children: [/*#__PURE__*/_jsxDEV(SelectCheck, {\n            name: \"nozzle\",\n            label: \"NOZZLES\",\n            value: values.nozzles,\n            onChange: handleInputChange,\n            choice: \"nozzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n            label: label,\n            name: name,\n            value: equipment,\n            onChange: handleChange,\n            displayEmpty: true,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.id,\n              children: item.title\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 50\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Equipment, \"giXoQbUVcSSSp6kwLCZ56Y5rDHY=\");\n\n_c = Equipment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equipment\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Equipment.js"],"names":["React","Box","Button","Useform","Form","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","SelectCheck","InputLabel","MenuItem","Grid","Select","MuiSelect","tractor","Equipment","props","open","setOpen","useState","equipment","setequipment","cat","setcat","img","setimg","img1","setimg1","changeequipment","flag","arr","field","setfield","fieldfarm","setfieldfarm","subfield","setSubfield","rate","setRate","rateunit","setRateunit","fieldval","setfieldval","subfieldval","setSubfieldval","c","setc","initialValues","nozzles","dueDate","Date","priority","started","completed","restartjob","description","notes","values","setValues","handleInputChange","handleChange","event","value","target","children","options","filter","a","id","data","icon","handleChange1","name","console","log","handleClickOpen","restart","handleClose","reason","handleOk","alert","label","onChange","map","item","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Useform, Form } from '../Useform';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport SelectCheck from './SelectCheck';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport tractor from '../services/tractor.png'\n\nexport default function Equipment(props) {\n    const [open, setOpen] = React.useState(false);\n    const [equipment, setequipment] = React.useState(\"\");\n    const [cat, setcat] = React.useState({});\n    const [img, setimg] = React.useState(tractor);\n    const [img1, setimg1] = React.useState(tractor);\n    var changeequipment = 0;\n    var flag=0;\n    const arr = {};\n    const [field, setfield] = React.useState(\"None\")\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\n    const [subfield, setSubfield] = React.useState('NONE');\n    const [rate, setRate] = React.useState('60');\n    const [rateunit, setRateunit] = React.useState('l/Ha');\n    const [fieldval, setfieldval] = React.useState(\"equipment\")\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\n    const [c, setc] = React.useState({});\n\n    const initialValues = {\n  \n        nozzles: '',\n        equipment: '',\n        dueDate: new Date(),\n        priority: '',\n        started: '',\n        completed: '',\n        restartjob: '',\n        description: \"\",\n        notes: \"\",\n    }\n    \n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n\n    const handleChange = (event, value) => {\n        setequipment(event.target.value);\n        changeequipment = event.target.value;\n        setfieldval(value.props.children)\n        setcat({})\n        flag=0;\n        const arr = options.filter(\n            a => (a.id === changeequipment)\n        )\n        if (changeequipment != \"\") {\n            setc(arr[0].data);\n            setSubfieldval(\"\");\n            setfieldfarm(\"\");\n            setimg1(options[changeequipment - 1].icon);\n        }\n        else{\n            setc({});\n            setfieldval(\"equipment\")\n            setSubfieldval(\"None\");\n            setfieldfarm(\"\");\n            setimg1(tractor);\n        }\n    };\n\n    const handleChange1 = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setcat(values => ({ ...values, [name]: value }))\n        console.log(cat);\n        if (name == \"Farm\") {\n            setfieldfarm(value + \" : \");\n            flag=1;\n        }\n        else {\n            setSubfieldval(value);\n        }\n    }\n    const handleClickOpen = () => {\n        if (!restart) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n        }\n    };\n\n    const handleOk = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            if (subfieldval==\"\") {\n                alert(\"No \"+fieldval+\" Selected\")\n            }\n            else{\n                if(fieldfarm!=\"\"){\n                    setfield(fieldval);\n                    setSubfield(fieldfarm + subfieldval);\n                    setimg(img1)\n                    setOpen(false);\n                }\n                else{\n                    if(equipment==1 ||equipment==5){\n                        setfield(fieldval);\n                        setSubfield(fieldfarm + subfieldval);\n                        setimg(img1)\n                        setOpen(false);\n                    }\n                }\n            }\n        }\n    };\n\n\n    const { name, label, value, onChange, options, restart } = props;\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <p>{field}</p>\n                        <InputLabel>Nozzles:{subfield}</InputLabel>\n                        <p >{rate} {rateunit}</p>\n\n                    </Grid>\n                </Grid>\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Spray Equipment</DialogTitle>\n                <DialogContent >\n                <Grid item xs={12} sm={11}>\n                    \n                <SelectCheck\n                        name=\"nozzle\"\n                        label=\"NOZZLES\"\n                        value={values.nozzles}\n                        onChange={handleInputChange}\n                        choice=\"nozzle\"\n\n                    />\n                   \n                   <InputLabel>{label}</InputLabel>\n                            <MuiSelect\n                                label={label}\n                                name={name}\n                                value={equipment}\n                                onChange={handleChange}\n                                displayEmpty>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    options.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                       \n                    <br /><br />\n                   \n                   \n                    </Grid>\n         \n                    \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleOk}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}