{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Nozzles\\\\NTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dropletSize = [{\n  id: 0,\n  title: \"N/A\",\n  icon: /*#__PURE__*/_jsxDEV(\"icon\", {\n    children: \"paddock\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }, this)\n}, {\n  id: 1,\n  title: \"Extremely Fine\"\n}, {\n  id: 2,\n  title: \"Very Fine\"\n}, {\n  id: 3,\n  title: \"Fine\"\n}, {\n  id: 4,\n  title: \"Medium\"\n}, {\n  id: 5,\n  title: \"Coarse\"\n}, {\n  id: 6,\n  title: \"Very Coarse\"\n}, {\n  id: 7,\n  title: \"Extremely Coarse\"\n}, {\n  id: 8,\n  title: \"Ultra Coarse\"\n}];\nexport default function NTable() {\n  _s();\n\n  const [drop, setDrop] = useState({});\n  const [tableData, setTableData] = useState([{\n    name: \"abc\",\n    operatingPressure: \"176\",\n    unit: \"0\",\n    dropletSize: \"0\"\n  }]);\n  const columns = [{\n    title: \"Name\",\n    field: \"name\",\n    validate: rowData => {\n      if (rowData.name === undefined || rowData.name === \"\") {\n        return \"Required\";\n      } else if (rowData.name.length < 3) {\n        return \"Name Should Contain Atleast 3 chars\";\n      }\n\n      return true;\n    }\n  }, {\n    title: \"Operating Pressure\",\n    field: \"operatingPressure\"\n  }, {\n    title: \"Unit\",\n    field: \"unit\",\n    lookup: {\n      0: \"PSI\",\n      1: \"BAR\"\n    }\n  }, {\n    title: \"Droplet Size\",\n    field: \"dropletSize\",\n    lookup: drop\n  }];\n  useEffect(() => {\n    const drop = {};\n    dropletSize.map(row => drop[row.id] = row.title);\n    setDrop(drop);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Nozzles\",\n      data: tableData,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          setTableData([...tableData, newRow]);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\n          const updatedData = [...tableData];\n          updatedData[(oldRow, tableData.id)] = newRow;\n          setTableData(updatedData);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...tableData];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setTableData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        showTitle: false\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NTable, \"KgTzMuOu8+4jKvgZW9nIP6ES0Gk=\");\n\n_c = NTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NTable\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/FarmAssets/Nozzles/NTable.js"],"names":["React","useState","useEffect","MaterialTable","CreateIcon","AddCircleRoundedIcon","DeleteIcon","dropletSize","id","title","icon","NTable","drop","setDrop","tableData","setTableData","name","operatingPressure","unit","columns","field","validate","rowData","undefined","length","lookup","map","row","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","oldRow","updatedData","onRowDelete","oldData","dataDelete","index","splice","actionsColumnIndex","showTitle","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst dropletSize=[\r\n    {id:0,title:\"N/A\",icon:<icon>paddock</icon>},\r\n    {id:1,title:\"Extremely Fine\"},\r\n    {id:2,title:\"Very Fine\"},\r\n    {id:3,title:\"Fine\"},\r\n    {id:4,title:\"Medium\"},\r\n    {id:5,title:\"Coarse\"},\r\n    {id:6,title:\"Very Coarse\"},\r\n    {id:7,title:\"Extremely Coarse\"},\r\n    {id:8,title:\"Ultra Coarse\"},\r\n]\r\n\r\nexport default function NTable() {\r\n    const [drop,setDrop]=useState({})\r\n    const [tableData,setTableData]=useState([\r\n        {name:\"abc\",operatingPressure:\"176\",unit:\"0\",dropletSize:\"0\"}\r\n    ])\r\n    const columns=[\r\n        {title:\"Name\",field:\"name\",validate: rowData =>{if(rowData.name === undefined || rowData.name===\"\"){return \"Required\"}\r\n        else if(rowData.name.length<3){return \"Name Should Contain Atleast 3 chars\"}\r\n        return true}},\r\n        {title:\"Operating Pressure\", field:\"operatingPressure\"},\r\n        {title:\"Unit\", field:\"unit\", lookup:{0:\"PSI\",1:\"BAR\"}},\r\n        {title:\"Droplet Size\", field:\"dropletSize\",lookup:drop}\r\n    ]\r\n    useEffect(()=>{\r\n        const drop={}\r\n        dropletSize.map(row=>drop[row.id]=row.title)\r\n        setDrop(drop)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <MaterialTable\r\n        title=\"Nozzles\"\r\n        data={tableData}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setTableData([...tableData, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...tableData];\r\n              updatedData[(oldRow, tableData.id)] = newRow;\r\n              setTableData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n            onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...tableData];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setTableData([...dataDelete]);\r\n  \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          showTitle: false,\r\n        }}\r\n        icons={{\r\n         \r\n          Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n          Edit: () => <CreateIcon color=\"action\" />,\r\n          Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}