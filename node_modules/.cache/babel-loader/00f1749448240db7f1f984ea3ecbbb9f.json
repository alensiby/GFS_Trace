{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Farms.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport paddock from '../services/paddock.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Farms(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [farm, setfarm] = React.useState(\"\");\n  const [img, setimg] = React.useState('');\n  const [img1, setimg1] = React.useState('');\n  var changefarm = 0;\n  var flag = 0;\n  const arr = {};\n  const [field, setfield] = React.useState(\"CATEGORY\");\n  const [fieldfarm, setfieldfarm] = React.useState(\"\");\n  const [subfield, setSubfield] = React.useState('NONE');\n  const [fieldval, setfieldval] = React.useState(\"CATEGORY\");\n  const [subfieldval, setSubfieldval] = React.useState('NONE');\n  const [c, setc] = React.useState({});\n  const options = [{\n    id: '1',\n    title: 'Farm1'\n  }, {\n    id: '2',\n    title: 'Farm2'\n  }];\n\n  const handleChange = (event, value) => {\n    setfarm(event.target.value);\n    changefarm = event.target.value;\n    setfieldval(value.props.children);\n    setSubfieldval(\"\");\n    setfieldfarm(\"\");\n    setimg1(paddock);\n  };\n\n  const handleChange1 = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    if (name == \"Farm\") {\n      setfieldfarm(value + \" : \");\n      flag = 1;\n    } else {\n      setSubfieldval(value);\n    }\n  };\n\n  const handleClickOpen = () => {\n    if (!restart) {\n      setOpen(true);\n    }\n  };\n\n  const {\n    name,\n    label,\n    value,\n    onChange,\n    restart\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      open: false,\n      color: \"inherit\",\n      onClick: handleClickOpen,\n      size: \"large\",\n      fullWidth: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 0,\n          md: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            className: \"img\",\n            alt: \"tractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: subfield\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        display: 'grid'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        sx: {\n          m: 1,\n          minWidth: 420\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n          label: label,\n          name: name,\n          value: farm,\n          onChange: handleChange,\n          displayEmpty: true,\n          children: options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.id,\n            children: item.title\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 50\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), Object.entries(c).map(_ref => {\n        let [key, val] = _ref;\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          sx: {\n            m: 1,\n            minWidth: 420\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n            name: key,\n            label: key,\n            value: cat[key],\n            onChange: handleChange1,\n            children: val.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 71\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Farms, \"viPgBdBt9jEr7n6XP4p2dLM0lZ0=\");\n\n_c = Farms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Farms\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Farms.js"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","MenuItem","Grid","Select","MuiSelect","paddock","Farms","props","open","setOpen","useState","farm","setfarm","img","setimg","img1","setimg1","changefarm","flag","arr","field","setfield","fieldfarm","setfieldfarm","subfield","setSubfield","fieldval","setfieldval","subfieldval","setSubfieldval","c","setc","options","id","title","handleChange","event","value","target","children","handleChange1","name","handleClickOpen","restart","label","onChange","display","m","minWidth","map","item","Object","entries","key","val","cat","index"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport paddock from '../services/paddock.png'\r\n\r\nexport default function Farms(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [farm, setfarm] = React.useState(\"\");\r\n    \r\n    const [img, setimg] = React.useState('');\r\n    const [img1, setimg1] = React.useState('');\r\n    var changefarm = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"CATEGORY\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const options =[\r\n        {id:'1', title:'Farm1'},\r\n        {id:'2', title:'Farm2'},\r\n     \r\n    ]\r\n\r\n    const handleChange = (event, value) => {\r\n        setfarm(event.target.value);\r\n        changefarm = event.target.value;\r\n        setfieldval(value.props.children)\r\n        \r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(paddock);\r\n        \r\n       \r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n      \r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n   \r\n\r\n\r\n\r\n    const { name, label, value, onChange, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button open={false} color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={0} sm={0} md={0}>\r\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <p>{field}</p>\r\n                        <InputLabel>{subfield}</InputLabel>\r\n                     </Grid>\r\n                </Grid>\r\n            </Button>\r\n            \r\n                               <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                            <InputLabel>{label}</InputLabel>\r\n                            <MuiSelect\r\n                                label={label}\r\n                                name={name}\r\n                                value={farm}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                \r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                        </FormControl>\r\n                        {\r\n                            Object.entries(c).map(\r\n                                ([key, val]) => (\r\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                        <InputLabel>{key}</InputLabel>\r\n                                        <MuiSelect\r\n                                            name={key}\r\n                                            label={key}\r\n                                            value={cat[key]}\r\n                                            onChange={handleChange1}\r\n                                        >\r\n                                            {\r\n                                                val.map(\r\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\r\n                                                )\r\n                                            }\r\n                                        </MuiSelect>\r\n                                    </FormControl>)\r\n                            )\r\n                        }\r\n                    </Box>\r\n               \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}