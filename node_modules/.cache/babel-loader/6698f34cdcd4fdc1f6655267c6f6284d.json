{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\Spraylogs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Icon } from 'semantic-ui-react';\nimport { spraylogsData_withoutcomplete, spraylogsData_withcomplete } from \"../../../../Data/SpraylogsData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Spraylogs() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [selected, toggleselected] = useState(false);\n  const [description, setdescription] = React.useState(\"\");\n  const [bool, setbool] = React.useState(false);\n  const [helper, sethelper] = React.useState(\"\"); //const [s,setS]=React.useState(0);\n  //const [bool2, setbool2] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [items, setitems] = React.useState([]); //const [name, setname] = React.useState();\n\n  const [dataedit, setdataedit] = React.useState(\"\"); //const [helper2, sethelper2] = React.useState(\"\");\n  //const [newitem, setnewitem] = React.useState();\n  //const open = Boolean(anchorEl);\n\n  const [opendescription, setopendescription] = React.useState(false);\n  const [openedit, setopenedit] = React.useState(false);\n\n  const handleChange = event => {\n    setdescription(event.target.value);\n    setdataedit(event.target.value);\n\n    if (event.target.value == '') {\n      setbool(true);\n      sethelper(\"Required\");\n    } else {\n      setbool(false);\n      sethelper(\"\");\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setopendescription(false);\n    setopenedit(false);\n  };\n\n  const handleOk = event => {\n    if (description != \"\") {\n      setitems(values => [...values, description]);\n      setopendescription(false);\n      setdescription(\"\");\n    }\n  };\n\n  const columns = [{\n    title: t('activities.status', 'Status'),\n    field: \"status\",\n    lookup: {\n      '0': 'Raised',\n      '1': 'Raised and Assigned',\n      '2': 'In Progress',\n      '3': 'On Hold',\n      '4': 'Completed'\n    },\n    render: rowData => {\n      switch (rowData.status) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle outline\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 24\n          }, this);\n\n        case '4':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"green circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 24\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 24\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: t('activities.contract', 'Contract'),\n    field: \"contract\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: t('activities.approved', 'Approved'),\n    field: \"approved\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: t('activities.description', 'Description'),\n    field: \"description\"\n  }, {\n    title: t('activities.duedate', 'Due Date'),\n    field: \"duedate\",\n    type: \"date\",\n    filtering: false\n  }, {\n    title: t('activities.started', 'Started'),\n    field: \"started\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: t('activities.completed', 'Completed '),\n    field: \"completed\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          \"color\": \"black\",\n          \"margin-bottom\": \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"spraylogs.heading\",\n          children: \"Spray Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 63\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          onClick: () => toggleselected(!selected),\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"general.showcompleted\",\n          children: \"Show Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-table\",\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: selected ? spraylogsData_withcomplete : spraylogsData_withoutcomplete,\n        editable: {\n          onRowDelete: selectedRow => new Promise(() => {})\n        },\n        localization: {\n          toolbar: {\n            searchTooltip: t('materialtable.searchtooltip', 'Search'),\n            searchPlaceholder: t('materialtable.searchplaceholder', 'Search')\n          },\n          header: {\n            actions: t('materialtable.headeractions', 'Actions')\n          },\n          body: {\n            deleteTooltip: t('materialtable.bodydeletetooltip', 'Delete'),\n            editTooltip: t('materialtable.edittooltip', 'Edit'),\n            emptyDataSourceMessage: t('materialtable.emptydatasourcemessage', 'No records to diplay'),\n            editRow: {\n              deleteText: t('materialtable.deletetext', 'Are you sure you want to delete?'),\n              cancelTooltip: t('materialtable.editrowcanceltip', 'Cancel'),\n              saveTooltip: t('materialtable.editrowsavetooltip', 'Save')\n            },\n            filterRow: {\n              filterTooltip: t('materialtable.filtertooltip', 'Filter')\n            }\n          },\n          pagination: {\n            previousTooltip: t('materialtable.previoustooltip', 'Previous Page'),\n            nextTooltip: t('materialtable.nexttooltip', 'Next Page'),\n            labelRowsSelect: t('materialtable.labelrowselect', 'rows')\n          }\n        },\n        options: {\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          filtering: true,\n          actionsColumnIndex: -1\n        },\n        components: {\n          Cell: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: props.value ? props.value : '',\n            children: /*#__PURE__*/_jsxDEV(MTableCell, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this) /// Add translation for tooltip also\n\n        },\n        actions: [{\n          icon: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n            fontSize: \"large\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 27\n          }, this),\n          isFreeAction: true,\n          onClick: event => setOpen(true)\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 27\n          }, this),\n          onClick: event => setEditOpen(true)\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 27\n          }, this)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              display: 'grid'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 420\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"description\",\n                label: \"Description\",\n                value: description,\n                onChange: handleChange,\n                helperText: helper,\n                error: bool,\n                required: true,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleOk,\n            color: \"primary\",\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Spraylogs, \"fAxbGpJSVDr9jzcPHVJ21jVdPUs=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Spraylogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spraylogs\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/Spraylogs.js"],"names":["React","useState","MaterialTable","Checkbox","Button","Dialog","DialogActions","DialogContent","TextField","DialogTitle","Box","FormControl","CreateIcon","AddCircleRoundedIcon","DeleteIcon","useTranslation","Trans","Icon","spraylogsData_withoutcomplete","spraylogsData_withcomplete","Spraylogs","t","selected","toggleselected","description","setdescription","bool","setbool","helper","sethelper","anchorEl","setAnchorEl","items","setitems","dataedit","setdataedit","opendescription","setopendescription","openedit","setopenedit","handleChange","event","target","value","handleClose","handleOk","values","columns","title","field","lookup","render","rowData","status","type","filtering","onRowDelete","selectedRow","Promise","toolbar","searchTooltip","searchPlaceholder","header","actions","body","deleteTooltip","editTooltip","emptyDataSourceMessage","editRow","deleteText","cancelTooltip","saveTooltip","filterRow","filterTooltip","pagination","previousTooltip","nextTooltip","labelRowsSelect","showTitle","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","actionsColumnIndex","Cell","props","icon","isFreeAction","onClick","setOpen","setEditOpen","open","display","m","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core'\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport '../../Pages.css';\r\n\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {useTranslation,Trans} from 'react-i18next';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {\r\n    spraylogsData_withoutcomplete,\r\n    spraylogsData_withcomplete,\r\n} from \"../../../../Data/SpraylogsData\";\r\n\r\nexport default function Spraylogs() {\r\n  const {t} =useTranslation();\r\n  const [selected, toggleselected] = useState(false);\r\n  const [description, setdescription] = React.useState(\"\");\r\n  const [bool, setbool] = React.useState(false);\r\n  const [helper, sethelper] = React.useState(\"\");\r\n  //const [s,setS]=React.useState(0);\r\n  \r\n  //const [bool2, setbool2] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [items, setitems] = React.useState([]);\r\n  //const [name, setname] = React.useState();\r\n  const [dataedit, setdataedit] = React.useState(\"\");\r\n  \r\n  //const [helper2, sethelper2] = React.useState(\"\");\r\n  \r\n  //const [newitem, setnewitem] = React.useState();\r\n  //const open = Boolean(anchorEl);\r\n  const [opendescription, setopendescription] = React.useState(false);\r\n  const [openedit, setopenedit] = React.useState(false);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setdescription(event.target.value);\r\n    setdataedit(event.target.value)\r\n    if (event.target.value=='') {\r\n        setbool(true)\r\n        sethelper(\"Required\")\r\n    }\r\n    else{\r\n        setbool(false)\r\n        sethelper(\"\")\r\n    }\r\n};\r\nconst handleClose = () => {\r\n  setAnchorEl(null);\r\n  setopendescription(false);\r\n  setopenedit(false);\r\n};\r\n\r\nconst handleOk = (event) => {\r\n  if (description!=\"\") {\r\n      setitems(values => ([...values, description]));\r\n      setopendescription(false);\r\n      setdescription(\"\")\r\n  }\r\n}\r\n\r\n  const columns = [\r\n    {\r\n      title: t('activities.status','Status'),\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': 'Raised',\r\n      '1': 'Raised and Assigned',\r\n      '2': 'In Progress',\r\n      '3': 'On Hold',\r\n      '4': 'Completed',\r\n      } ,\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n    \r\n{ title: t('activities.contract','Contract'), field: \"contract\",  \r\nlookup: { 'no': 'No',\r\n'yes': 'Yes'}\r\n},\r\n    \r\n    { title: t('activities.approved','Approved'), field: \"approved\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'}\r\n   },\r\n    { title: t('activities.description','Description'), field: \"description\" },\r\n    { title: t('activities.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: t('activities.started','Started'), field: \"started\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    { title: t('activities.completed','Completed '), field: \"completed\", lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    \r\n  ];\r\n \r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"spraylogs.heading\">Spray Logs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\r\n      </div>\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? spraylogsData_withcomplete : spraylogsData_withoutcomplete}\r\n          editable={{\r\n            \r\n            \r\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n          }}\r\n          localization={{\r\n            toolbar:{\r\n              searchTooltip:t('materialtable.searchtooltip','Search'),\r\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\r\n            },\r\n            header:{\r\n              actions:t('materialtable.headeractions','Actions')\r\n\r\n            },\r\n            body:{\r\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\r\n              editTooltip:t('materialtable.edittooltip','Edit'),\r\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\r\n              editRow:{\r\n                deleteText:t('materialtable.deletetext','Are you sure you want to delete?'),\r\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\r\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\r\n              },\r\n              filterRow:{\r\n                filterTooltip:t('materialtable.filtertooltip','Filter')\r\n              }\r\n            },\r\n            pagination:{\r\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\r\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\r\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\r\n              \r\n            }\r\n          }}\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n          components={{\r\n            Cell: (props) => (\r\n              <Tooltip title={props.value ? props.value : ''}>\r\n                <MTableCell {...props} />\r\n              </Tooltip>       /// Add translation for tooltip also\r\n            ),\r\n          }}\r\n            actions={[\r\n            {\r\n              icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n              isFreeAction: true,\r\n              onClick: (event) => setOpen(true)\r\n            },\r\n            {\r\n              icon: () => <CreateIcon color=\"action\" />,\r\n             \r\n              onClick: (event) => setEditOpen(true)\r\n            },\r\n            {\r\n              icon: () => <DeleteIcon color=\"action\" />\r\n            }\r\n            ]}\r\n        ></MaterialTable>\r\n         <Dialog open={open} onClose={handleClose}>\r\n                                <DialogTitle>New Item</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                            <TextField\r\n                                                variant=\"standard\"\r\n                                                name=\"description\"\r\n                                                label=\"Description\"\r\n                                                value={description}\r\n                                                onChange={handleChange}\r\n                                                helperText={helper}\r\n                                                error={bool}\r\n                                                required\r\n                                                autocomplete=\"off\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                                    <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                            \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}