{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Job\\\\job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MaterialTable, { MTableCell } from \"material-table\";\nimport { Checkbox, Modal, Icon, Form, Button } from \"semantic-ui-react\";\nimport \"./job.css\";\nimport '../Pages.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTranslation, Trans } from 'react-i18next';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Useform } from './Useform';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport * as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Grid, TextField, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css';\nimport { TextareaAutosize } from '@mui/material';\nimport { jobData_withoutcomplete, jobData_withcomplete } from \"../../../Data/JobData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  creator: '',\n  assigned: '',\n  category: '',\n  dueDate: new Date(),\n  priority: '',\n  started: '',\n  completed: '',\n  restartjob: '',\n  description: \"\",\n  notes: \"\"\n};\nexport default function Job() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const [editopen, setEditOpen] = React.useState(false);\n\n  const handleClickEditOpen = () => {\n    setEditOpen(true);\n  };\n\n  const handleEditClose = (event, reason) => {\n    setEditOpen(false);\n  };\n\n  const [selected, toggleselected] = useState(false);\n  const [newedit, setnewedit] = React.useState(true);\n  const {\n    t\n  } = useTranslation();\n  const columns = [{\n    title: t('jobs.status', \"Status\"),\n    field: \"status\",\n    lookup: {\n      '0': /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"jobs.raised\",\n        children: \"Raised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this),\n      '1': t('jobs.raisedandassigned', 'Raised And Assigned'),\n      '2': t('jobs.inprogress', 'In Progress'),\n      '3': t('jobs.onhold', 'On Hold'),\n      '4': t('jobs.completed', 'Completed')\n    },\n    render: rowData => {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: rowData.status,\n        placement: \"bottom-start\",\n        arrow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this);\n    },\n    render: rowData => {\n      switch (rowData.status) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle outline\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 24\n          }, this);\n\n        case '4':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"green circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 24\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: t('jobs.priority', 'Priority'),\n    field: \"priority\",\n    lookup: {\n      '0': t('jobs.low', 'Low'),\n      '1': t('jobs.normal', 'Normal'),\n      '2': t('jobs.high', 'High'),\n      '3': t('jobs.safety', 'Safety')\n    },\n    render: rowData => {\n      switch (rowData.priority) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"angle down\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue angle up\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red angle double up\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange exclamation triangle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: t('jobs.description', 'Description'),\n    field: \"description\"\n  }, {\n    title: t('jobs.category', 'Category'),\n    field: \"category\",\n    lookup: {\n      '0': 'None',\n      '1': 'Equipment',\n      '2': 'Paddock',\n      '3': 'Fuel Tank',\n      '4': 'Silo',\n      '5': 'Livestock'\n    }\n  }, {\n    title: t('jobs.asset', 'Asset'),\n    field: \"asset\"\n  }, {\n    title: t('jobs.duedate', 'Due Date'),\n    field: \"duedate\",\n    type: \"date\",\n    filtering: false\n  }, {\n    title: t('jobs.lastupdate', 'Last Update'),\n    field: \"lastupdate\",\n    type: \"date\",\n    filtering: false\n  }];\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = Useform(initialValues); //const { bool, setbool } = React.useContext(SampleContext);\n\n  const [status, setstatus] = React.useState('');\n  const [startdate, setstartdate] = React.useState('None');\n  const [starttime, setstarttime] = React.useState('');\n  const [enddate, setenddate] = React.useState('None');\n  const [endtime, setendtime] = React.useState('');\n  const [img, setimg] = React.useState();\n  const date = \"\";\n  var d = 3;\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = event => {\n    setstatus(event.target.value);\n    d = event.target.value;\n    setimg(jobAssign.getStatus()[d - 1].icon);\n\n    if (d == 3 || status <= 2 && d > 3) {\n      const current = new Date();\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setstartdate(date);\n      setstarttime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n\n    if (d == 5) {\n      const current = new Date();\n      setChecked(true); //setbool(true);\n\n      const date = current.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).replace(/ /g, ' ');\n      setenddate(date);\n      setendtime(current.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }));\n    }\n  };\n\n  const handleClick = e => {\n    setChecked(false); //setbool(false);\n\n    setenddate('None');\n    setendtime('');\n    setstatus(3);\n    setimg(jobAssign.getStatus()[2].icon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          \"color\": \"black\",\n          \"margin-bottom\": \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"jobs.heading\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 63\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          onClick: () => toggleselected(!selected),\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"general.showcompleted\",\n          children: \"Show Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      open: open,\n      as: Form,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: newedit === true ? \"New Job\" : \"Edit Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"CREATOR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"creator\",\n              value: \"JESTEENA JOSE\",\n              InputProps: {\n                readOnly: true\n              },\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(SelectCheck, {\n              name: \"assigned\",\n              label: \"ASSIGNED\",\n              value: values.assigned,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Category, {\n              name: \"category\",\n              label: \"Category\",\n              value: values.category,\n              onChange: handleInputChange,\n              options: jobAssign.getCategory()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"DUE DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 10,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 100,\n                sm: 100,\n                children: /*#__PURE__*/_jsxDEV(MyDatePicker, {\n                  name: \"dueDate\",\n                  label: \"Due Date\",\n                  value: values.dueDate,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 7,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"priority\",\n                  label: \"PRIORITY\",\n                  value: values.priority,\n                  onChange: handleInputChange,\n                  options: jobAssign.getPriority()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"STARTED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: startdate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: starttime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"COMPLETED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: enddate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: endtime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 0,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 0,\n                  sm: 0,\n                  md: 0,\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 33\n                  }, this), img]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"standard\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      children: \"STATUS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                      label: \"STATUS\",\n                      name: \"status\",\n                      value: status,\n                      onChange: handleChange,\n                      inputProps: {\n                        readOnly: false\n                      },\n                      children: jobAssign.getStatus().map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: item.id,\n                        children: item.title\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 58\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 30,\n                  md: 5,\n                  children: /*#__PURE__*/_jsxDEV(Fade, {\n                    in: checked,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"text\",\n                      color: \"primary\",\n                      onClick: handleClick,\n                      children: \"RE-START JOB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"des\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DESCRIPTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            style: {\n              border: \"none\",\n              outline: \"none\",\n              width: 700,\n              height: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"des\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"NOTES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            style: {\n              border: \"none\",\n              outline: \"none\",\n              width: 700,\n              height: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Save\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: () => {\n            setOpen(false);\n          },\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-table\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: selected ? jobData_withcomplete : jobData_withoutcomplete,\n        localization: {\n          toolbar: {\n            searchTooltip: t('materialtable.searchtooltip', 'Search'),\n            searchPlaceholder: t('materialtable.searchplaceholder', 'Search')\n          },\n          header: {\n            actions: t('materialtable.headeractions', 'Actions')\n          },\n          body: {\n            addTooltip: t('materialtable.bodyaddtooltip', 'Add'),\n            deleteTooltip: t('materialtable.bodydeletetooltip', 'Delete'),\n            editTooltip: t('materialtable.edittooltip', 'Edit'),\n            emptyDataSourceMessage: t('materialtable.emptydatasourcemessage', 'No records to diplay'),\n            editRow: {\n              deleteText: t('materialtable.deletetext', 'Are you sure u want to delete?'),\n              cancelTooltip: t('materialtable.editrowcanceltip', 'Cancel'),\n              saveTooltip: t('materialtable.editrowsavetooltip', 'Save')\n            },\n            filterRow: {\n              filterTooltip: t('materialtable.feltertooltip', 'Filter')\n            }\n          },\n          pagination: {\n            previousTooltip: t('materialtable.previoustooltip', 'Previous Page'),\n            nextTooltip: t('materialtable.nexttooltip', 'Next Page'),\n            labelRowsSelect: t('materialtable.labelrowselect', 'rows')\n          }\n        },\n        options: {\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          filtering: true,\n          actionsColumnIndex: -1\n        },\n        components: {\n          Cell: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n            placement: \"bottom\",\n            title: props.value ? props.value : '',\n            children: /*#__PURE__*/_jsxDEV(MTableCell, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this) /// Add translation for tooltip also\n\n        },\n        actions: [{\n          icon: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n            fontSize: \"large\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this),\n          isFreeAction: true,\n          onClick: event => setOpen(true)\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this),\n          onClick: event => setOpen(true)\n        }, {\n          icon: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Job, \"hs9/wiEaH81G3XPZDongN21zdf4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Job/job.js"],"names":["React","useState","MaterialTable","MTableCell","Checkbox","Modal","Icon","Form","Button","Tooltip","useTranslation","Trans","CreateIcon","AddCircleRoundedIcon","DeleteIcon","Useform","Select","SelectCheck","jobAssign","Category","MyDatePicker","Grid","TextField","Fade","FormControl","InputLabel","MenuItem","MuiSelect","TextareaAutosize","jobData_withoutcomplete","jobData_withcomplete","initialValues","creator","assigned","category","dueDate","Date","priority","started","completed","restartjob","description","notes","Job","open","setOpen","handleClickOpen","editopen","setEditOpen","handleClickEditOpen","handleEditClose","event","reason","selected","toggleselected","newedit","setnewedit","t","columns","title","field","lookup","render","rowData","status","type","filtering","values","setValues","handleInputChange","setstatus","startdate","setstartdate","starttime","setstarttime","enddate","setenddate","endtime","setendtime","img","setimg","date","d","checked","setChecked","handleChange","target","value","getStatus","icon","current","toLocaleDateString","day","month","year","replace","toLocaleTimeString","hour","minute","handleClick","e","readOnly","getCategory","getPriority","map","item","id","border","outline","width","height","toolbar","searchTooltip","searchPlaceholder","header","actions","body","addTooltip","deleteTooltip","editTooltip","emptyDataSourceMessage","editRow","deleteText","cancelTooltip","saveTooltip","filterRow","filterTooltip","pagination","previousTooltip","nextTooltip","labelRowsSelect","showTitle","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","actionsColumnIndex","Cell","props","isFreeAction","onClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA2C,gBAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,cAAR,EAAuBC,KAAvB,QAAmC,eAAnC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,OAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAO,KAAIC,SAAX,MAA0B,sBAA1B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,IAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,EAAkEV,MAAM,IAAIW,SAA5E,QAA6F,mBAA7F;AACA,OAAO,cAAP;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SACEC,uBADF,EAEEC,oBAFF,QAGO,uBAHP;;;AAKA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,QAAQ,EAAE,EAHQ;AAIlBC,EAAAA,OAAO,EAAE,IAAIC,IAAJ,EAJS;AAKlBC,EAAAA,QAAQ,EAAE,EALQ;AAMlBC,EAAAA,OAAO,EAAE,EANS;AAOlBC,EAAAA,SAAS,EAAE,EAPO;AAQlBC,EAAAA,UAAU,EAAE,EARM;AASlBC,EAAAA,WAAW,EAAE,EATK;AAUlBC,EAAAA,KAAK,EAAE;AAVW,CAAtB;AAaA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7C,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AACE,QAAM6C,eAAe,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BhD,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;;AACA,QAAMgD,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEH,GAHD;;AAKF,QAAM,CAACK,QAAD,EAAWC,cAAX,IAA6BrD,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACsD,OAAD,EAAUC,UAAV,IAAwBxD,KAAK,CAACC,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM;AAACwD,IAAAA;AAAD,MAAK/C,cAAc,EAAzB;AAEA,QAAMgD,OAAO,GAAG,CACd;AAEEC,IAAAA,KAAK,EAAEF,CAAC,CAAC,aAAD,EAAe,QAAf,CAFV;AAGEG,IAAAA,KAAK,EAAE,QAHT;AAMEC,IAAAA,MAAM,EAAE;AAAE,wBAAK,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACR,WAAKJ,CAAC,CAAC,wBAAD,EAA0B,qBAA1B,CADE;AAER,WAAKA,CAAC,CAAC,iBAAD,EAAmB,aAAnB,CAFE;AAGR,WAAKA,CAAC,CAAC,aAAD,EAAe,SAAf,CAHE;AAIR,WAAKA,CAAC,CAAC,gBAAD,EAAkB,WAAlB;AAJE,KANV;AAaEK,IAAAA,MAAM,EAAEC,OAAO,IAAI;AACjB,0BAAO,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,OAAO,CAACC,MAAxB;AAAgC,QAAA,SAAS,EAAC,cAA1C;AAAyD,QAAA,KAAK;AAA9D;AAAA;AAAA;AAAA;AAAA,cAAP;AAEF,KAhBF;AAiBEF,IAAAA,MAAM,EAAEC,OAAO,IAAI;AACjB,cAAQA,OAAO,CAACC,MAAhB;AACA,aAAK,GAAL;AACQ,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,qBAAX;AAAiC,YAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACR,aAAK,GAAL;AACQ,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,cAAX;AAA0B,YAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACR,aAAK,GAAL;AACQ,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,aAAX;AAAwB,YAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACR,aAAK,GAAL;AACO,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,YAAX;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACP,aAAK,GAAL;AACO,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,eAAX;AAA0B,YAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACT;AACE,8BAAO,qCAAP;AAZA;AAcC;AAhCL,GADc,EAsCd;AAAEL,IAAAA,KAAK,EAAEF,CAAC,CAAC,eAAD,EAAiB,UAAjB,CAAV;AAAwCG,IAAAA,KAAK,EAAE,UAA/C;AACAC,IAAAA,MAAM,EAAE;AAAE,WAAKJ,CAAC,CAAC,UAAD,EAAY,KAAZ,CAAR;AACR,WAAKA,CAAC,CAAC,aAAD,EAAe,QAAf,CADE;AAER,WAAKA,CAAC,CAAC,WAAD,EAAa,MAAb,CAFE;AAGR,WAAKA,CAAC,CAAC,aAAD,EAAe,QAAf;AAHE,KADR;AAMAK,IAAAA,MAAM,EAAEC,OAAO,IAAI;AACjB,cAAQA,OAAO,CAAC1B,QAAhB;AACE,aAAK,GAAL;AACG,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,YAAX;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACH,aAAK,GAAL;AACG,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,eAAX;AAA0B,YAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACH,aAAK,GAAL;AACG,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,qBAAX;AAAgC,YAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAAP;;AAEH,aAAK,GAAL;AACG,8BAAO,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,6BAAX;AAAwC,YAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACP;AACE,8BAAO,qCAAP;AAXA;AAYA;AAnBF,GAtCc,EA4Dd;AAAEsB,IAAAA,KAAK,EAAEF,CAAC,CAAC,kBAAD,EAAoB,aAApB,CAAV;AAA8CG,IAAAA,KAAK,EAAE;AAArD,GA5Dc,EA6Dd;AAAED,IAAAA,KAAK,EAAEF,CAAC,CAAC,eAAD,EAAiB,UAAjB,CAAV;AAAwCG,IAAAA,KAAK,EAAE,UAA/C;AACAC,IAAAA,MAAM,EAAE;AAAE,WAAK,MAAP;AAAe,WAAK,WAApB;AAAiC,WAAK,SAAtC;AAAiD,WAAK,WAAtD;AAAmE,WAAK,MAAxE;AAAgF,WAAK;AAArF;AADR,GA7Dc,EA+Dd;AAAEF,IAAAA,KAAK,EAAEF,CAAC,CAAC,YAAD,EAAc,OAAd,CAAV;AAAkCG,IAAAA,KAAK,EAAE;AAAzC,GA/Dc,EAgEd;AAAED,IAAAA,KAAK,EAAEF,CAAC,CAAC,cAAD,EAAgB,UAAhB,CAAV;AAAuCG,IAAAA,KAAK,EAAE,SAA9C;AAAyDK,IAAAA,IAAI,EAAC,MAA9D;AAAsEC,IAAAA,SAAS,EAAE;AAAjF,GAhEc,EAiEd;AAAEP,IAAAA,KAAK,EAAEF,CAAC,CAAC,iBAAD,EAAmB,aAAnB,CAAV;AAA6CG,IAAAA,KAAK,EAAE,YAApD;AAAkEK,IAAAA,IAAI,EAAC,MAAvE;AAA+EC,IAAAA,SAAS,EAAE;AAA1F,GAjEc,CAAhB;AAsEA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIJtD,OAAO,CAACgB,aAAD,CAJT,CA3F4B,CAiG9B;;AACA,QAAM,CAACiC,MAAD,EAASM,SAAT,IAAsBtE,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACsE,SAAD,EAAYC,YAAZ,IAA4BxE,KAAK,CAACC,QAAN,CAAe,MAAf,CAAlC;AACA,QAAM,CAACwE,SAAD,EAAYC,YAAZ,IAA4B1E,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAAC0E,OAAD,EAAUC,UAAV,IAAwB5E,KAAK,CAACC,QAAN,CAAe,MAAf,CAA9B;AACA,QAAM,CAAC4E,OAAD,EAAUC,UAAV,IAAwB9E,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAAC8E,GAAD,EAAMC,MAAN,IAAgBhF,KAAK,CAACC,QAAN,EAAtB;AACA,QAAMgF,IAAI,GAAG,EAAb;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpF,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMoF,YAAY,GAAIlC,KAAD,IAAW;AAC5BmB,IAAAA,SAAS,CAACnB,KAAK,CAACmC,MAAN,CAAaC,KAAd,CAAT;AACAL,IAAAA,CAAC,GAAG/B,KAAK,CAACmC,MAAN,CAAaC,KAAjB;AACAP,IAAAA,MAAM,CAAC9D,SAAS,CAACsE,SAAV,GAAsBN,CAAC,GAAG,CAA1B,EAA6BO,IAA9B,CAAN;;AACA,QAAIP,CAAC,IAAI,CAAL,IAAWlB,MAAM,IAAI,CAAV,IAAekB,CAAC,GAAG,CAAlC,EAAsC;AAClC,YAAMQ,OAAO,GAAG,IAAItD,IAAJ,EAAhB;AACA,YAAM6C,IAAI,GAAGS,OAAO,CAACC,kBAAR,CAA2B,OAA3B,EACT;AACIC,QAAAA,GAAG,EAAE,SADT;AACoBC,QAAAA,KAAK,EAAE,MAD3B;AACmCC,QAAAA,IAAI,EAAE;AADzC,OADS,EAGNC,OAHM,CAGE,IAHF,EAGQ,GAHR,CAAb;AAIAvB,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACAP,MAAAA,YAAY,CAACgB,OAAO,CAACM,kBAAR,CAA2B,OAA3B,EACT;AACIC,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,MAAM,EAAE;AAFZ,OADS,CAAD,CAAZ;AAKH;;AACD,QAAIhB,CAAC,IAAI,CAAT,EAAY;AACR,YAAMQ,OAAO,GAAG,IAAItD,IAAJ,EAAhB;AACAgD,MAAAA,UAAU,CAAC,IAAD,CAAV,CAFQ,CAGR;;AACA,YAAMH,IAAI,GAAGS,OAAO,CAACC,kBAAR,CAA2B,OAA3B,EACT;AACIC,QAAAA,GAAG,EAAE,SADT;AACoBC,QAAAA,KAAK,EAAE,MAD3B;AACmCC,QAAAA,IAAI,EAAE;AADzC,OADS,EAGNC,OAHM,CAGE,IAHF,EAGQ,GAHR,CAAb;AAIAnB,MAAAA,UAAU,CAACK,IAAD,CAAV;AACAH,MAAAA,UAAU,CAACY,OAAO,CAACM,kBAAR,CAA2B,OAA3B,EACP;AACIC,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,MAAM,EAAE;AAFZ,OADO,CAAD,CAAV;AAMH;AAEJ,GAlCD;;AAoCA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBhB,IAAAA,UAAU,CAAC,KAAD,CAAV,CADuB,CAEvB;;AACAR,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAR,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAU,IAAAA,MAAM,CAAC9D,SAAS,CAACsE,SAAV,GAAsB,CAAtB,EAAyBC,IAA1B,CAAN;AACH,GAPD;;AAUE,sBACE;AAAM,IAAA,SAAS,EAAE,YAAjB;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,8BAGI;AAAI,QAAA,KAAK,EAAE;AAAC,mBAAS,OAAV;AAAmB,2BAAgB;AAAnC,SAAX;AAAA,gCAAsD,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAG0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH1G,eAMI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,OAAO,EAAE,MAAMnC,cAAc,CAAC,CAACD,QAAF,CAF/B;AAGE,UAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ,eAcI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAA2B,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAmBE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAMR,OAAO,CAAC,KAAD,CAA7B;AAAsC,MAAA,IAAI,EAAED,IAA5C;AAAkD,MAAA,EAAE,EAAErC,IAAtD;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAA,kBACGgD,OAAO,KAAK,IAAZ,GAAmB,SAAnB,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,OAAP;AAAA,+BAEA,QAAC,IAAD;AAAA,kCAEQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,oCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI,QAAC,SAAD;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,KAAK,EAAC,eAFV;AAGI,cAAA,UAAU,EAAE;AACR8C,gBAAAA,QAAQ,EAAE;AADF,eAHhB;AAMI,cAAA,QAAQ,EAAEhC;AANd;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAUI;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAUS;AAAA;AAAA;AAAA;AAAA,oBAVT,eAWI,QAAC,WAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAC,UAFV;AAGI,cAAA,KAAK,EAAEF,MAAM,CAAClC,QAHlB;AAII,cAAA,QAAQ,EAAEoC;AAJd;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAiBI;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAiBU;AAAA;AAAA;AAAA;AAAA,oBAjBV,eAkBI,QAAC,QAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAC,UAFV;AAGI,cAAA,KAAK,EAAEF,MAAM,CAACjC,QAHlB;AAII,cAAA,QAAQ,EAAEmC,iBAJd;AAKI,cAAA,OAAO,EAAEnD,SAAS,CAACoF,WAAV;AALb;AAAA;AAAA;AAAA;AAAA,oBAlBJ,eA0BI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BJ,eA2BI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,EAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,GAAf;AAAoB,gBAAA,EAAE,EAAE,GAAxB;AAAA,uCACI,QAAC,YAAD;AACI,kBAAA,IAAI,EAAC,SADT;AAEI,kBAAA,KAAK,EAAC,UAFV;AAGI,kBAAA,KAAK,EAAEnC,MAAM,CAAChC,OAHlB;AAII,kBAAA,QAAQ,EAAEkC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,MAAD;AACI,kBAAA,IAAI,EAAC,UADT;AAEI,kBAAA,KAAK,EAAC,UAFV;AAGI,kBAAA,KAAK,EAAEF,MAAM,CAAC9B,QAHlB;AAII,kBAAA,QAAQ,EAAEgC,iBAJd;AAKI,kBAAA,OAAO,EAAEnD,SAAS,CAACqF,WAAV;AALb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BJ,eAgDI;AAAA;AAAA;AAAA;AAAA,oBAhDJ,eAiDI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAE,CAAzB;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAA,0CACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAIhC;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA,8BAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAA,0CACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA,8BAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAcI;AAAA;AAAA;AAAA;AAAA,sBAdJ,eAeI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAE,CAAzB;AAA4B,gBAAA,UAAU,EAAC,QAAvC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,CAA7B;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKE,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAA,yCACI,QAAC,WAAD;AACI,oBAAA,OAAO,EAAC,UADZ;AAAA,4CAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI,QAAC,SAAD;AACI,sBAAA,KAAK,EAAC,QADV;AAEI,sBAAA,IAAI,EAAC,QAFT;AAGI,sBAAA,KAAK,EAAEf,MAHX;AAII,sBAAA,QAAQ,EAAEqB,YAJd;AAKI,sBAAA,UAAU,EAAE;AAAEgB,wBAAAA,QAAQ,EAAE;AAAZ,uBALhB;AAAA,gCAOQnF,SAAS,CAACsE,SAAV,GAAsBgB,GAAtB,CACIC,IAAI,iBAAK,QAAC,QAAD;AAAwB,wBAAA,KAAK,EAAEA,IAAI,CAACC,EAApC;AAAA,kCAAyCD,IAAI,CAAC9C;AAA9C,yBAAe8C,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,8BADb;AAPR;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBALJ,eAuBI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAEvB,OAAV;AAAA,2CACI,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,MAAhB;AAAuB,sBAAA,KAAK,EAAC,SAA7B;AAAuC,sBAAA,OAAO,EAAEgB,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAkGY;AAAA;AAAA;AAAA;AAAA,kBAlGZ,eAmGY;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAnGZ,eAsGY;AAAA;AAAA;AAAA;AAAA,kBAtGZ,eAuGY,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAE;AAACQ,cAAAA,MAAM,EAAC,MAAR;AAAeC,cAAAA,OAAO,EAAC,MAAvB;AAA8BC,cAAAA,KAAK,EAAC,GAApC;AAAyCC,cAAAA,MAAM,EAAC;AAAhD;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAvGZ,eAwGY;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxGZ,eA2GY;AAAA;AAAA;AAAA;AAAA,kBA3GZ,eA4GY,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAE;AAACH,cAAAA,MAAM,EAAC,MAAR;AAAeC,cAAAA,OAAO,EAAC,MAAvB;AAA8BC,cAAAA,KAAK,EAAC,GAApC;AAAyCC,cAAAA,MAAM,EAAC;AAAhD;AAAzB;AAAA;AAAA;AAAA;AAAA,kBA5GZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAJF,eAqHE,QAAC,KAAD,CAAO,OAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,OAA5B;AAAoC,UAAA,OAAO,EAAE,MAAMjE,OAAO,CAAC,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO,CAAC,KAAD,CAAP;AAED,WAPH;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cArHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA2JE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEa,OADX;AAEE,QAAA,IAAI,EAAEL,QAAQ,GAAGvB,oBAAH,GAA0BD,uBAF1C;AAIE,QAAA,YAAY,EAAE;AACZkF,UAAAA,OAAO,EAAC;AACNC,YAAAA,aAAa,EAACvD,CAAC,CAAC,6BAAD,EAA+B,QAA/B,CADT;AAENwD,YAAAA,iBAAiB,EAACxD,CAAC,CAAC,iCAAD,EAAmC,QAAnC;AAFb,WADI;AAKZyD,UAAAA,MAAM,EAAC;AACLC,YAAAA,OAAO,EAAC1D,CAAC,CAAC,6BAAD,EAA+B,SAA/B;AADJ,WALK;AASZ2D,UAAAA,IAAI,EAAC;AACHC,YAAAA,UAAU,EAAC5D,CAAC,CAAC,8BAAD,EAAgC,KAAhC,CADT;AAEH6D,YAAAA,aAAa,EAAC7D,CAAC,CAAC,iCAAD,EAAmC,QAAnC,CAFZ;AAGH8D,YAAAA,WAAW,EAAC9D,CAAC,CAAC,2BAAD,EAA6B,MAA7B,CAHV;AAIH+D,YAAAA,sBAAsB,EAAC/D,CAAC,CAAC,sCAAD,EAAwC,sBAAxC,CAJrB;AAKHgE,YAAAA,OAAO,EAAC;AACNC,cAAAA,UAAU,EAACjE,CAAC,CAAC,0BAAD,EAA4B,gCAA5B,CADN;AAENkE,cAAAA,aAAa,EAAClE,CAAC,CAAC,gCAAD,EAAkC,QAAlC,CAFT;AAGNmE,cAAAA,WAAW,EAACnE,CAAC,CAAC,kCAAD,EAAoC,MAApC;AAHP,aALL;AAUHoE,YAAAA,SAAS,EAAC;AACRC,cAAAA,aAAa,EAACrE,CAAC,CAAC,6BAAD,EAA+B,QAA/B;AADP;AAVP,WATO;AAuBZsE,UAAAA,UAAU,EAAC;AACTC,YAAAA,eAAe,EAACvE,CAAC,CAAC,+BAAD,EAAiC,eAAjC,CADR;AAETwE,YAAAA,WAAW,EAACxE,CAAC,CAAC,2BAAD,EAA6B,WAA7B,CAFJ;AAGTyE,YAAAA,eAAe,EAACzE,CAAC,CAAC,8BAAD,EAAgC,MAAhC;AAHR;AAvBC,SAJhB;AAmCE,QAAA,OAAO,EAAE;AACP0E,UAAAA,SAAS,EAAE,KADJ;AAEPC,UAAAA,MAAM,EAAE,IAFD;AAGPC,UAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAHV;AAIPC,UAAAA,cAAc,EAAE,SAJT;AAKPC,UAAAA,wBAAwB,EAAE,KALnB;AAMPrE,UAAAA,SAAS,EAAE,IANJ;AAOPsE,UAAAA,kBAAkB,EAAC,CAAC;AAPb,SAnCX;AA4CG,QAAA,UAAU,EAAE;AACbC,UAAAA,IAAI,EAAGC,KAAD,iBACJ,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,QAAnB;AAA4B,YAAA,KAAK,EAAEA,KAAK,CAACnD,KAAN,GAAcmD,KAAK,CAACnD,KAApB,GAA4B,EAA/D;AAAA,mCACE,QAAC,UAAD,OAAgBmD;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADI,CAGa;;AAJN,SA5Cf;AAmDE,QAAA,OAAO,EAAE,CACT;AACEjD,UAAAA,IAAI,EAAE,mBAAM,QAAC,oBAAD;AAAsB,YAAA,QAAQ,EAAC,OAA/B;AAAuC,YAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADd;AAEEkD,UAAAA,YAAY,EAAE,IAFhB;AAGEC,UAAAA,OAAO,EAAGzF,KAAD,IAAWN,OAAO,CAAC,IAAD;AAH7B,SADS,EAMT;AACE4C,UAAAA,IAAI,EAAE,mBAAM,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADd;AAGEmD,UAAAA,OAAO,EAAGzF,KAAD,IAAWN,OAAO,CAAC,IAAD;AAH7B,SANS,EAWT;AACE4C,UAAAA,IAAI,EAAE,mBAAM,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADd,SAXS;AAnDX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3JF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqOD;;GA/XuB9C,G;UAmBXjC,c;;;KAnBWiC,G","sourcesContent":["import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableCell }  from \"material-table\";\r\nimport { Checkbox, Modal, Icon, Form, Button } from \"semantic-ui-react\";\r\nimport \"./job.css\";\r\nimport '../Pages.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {useTranslation,Trans} from 'react-i18next';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Useform} from './Useform';\r\nimport Select from './controls/Select';\r\nimport SelectCheck from './controls/SelectCheck';\r\nimport *as jobAssign from './services/JobAssign';\r\nimport Category from './controls/Category';\r\nimport MyDatePicker from './controls/MyDatePicker';\r\nimport { Grid,TextField, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport './destxt.css'\r\nimport { TextareaAutosize } from '@mui/material';\r\n\r\nimport {\r\n  jobData_withoutcomplete,\r\n  jobData_withcomplete,\r\n} from \"../../../Data/JobData\";\r\n\r\nconst initialValues = {\r\n    creator: '',\r\n    assigned: '',\r\n    category: '',\r\n    dueDate: new Date(),\r\n    priority: '',\r\n    started: '',\r\n    completed: '',\r\n    restartjob: '',\r\n    description: \"\",\r\n    notes: \"\",\r\n}\r\n\r\nexport default function Job() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const [editopen, setEditOpen] = React.useState(false);\r\n    const handleClickEditOpen = () => {\r\n        setEditOpen(true);\r\n    };\r\n\r\n    const handleEditClose = (event, reason) => {\r\n        setEditOpen(false);\r\n\r\n    };\r\n\r\n  const [selected, toggleselected] = useState(false);\r\n  const [newedit, setnewedit] = React.useState(true);\r\n  const {t} =useTranslation();\r\n  \r\n  const columns = [\r\n    {\r\n\r\n      title: t('jobs.status',\"Status\"),\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': <Trans i18nKey=\"jobs.raised\">Raised</Trans>,\r\n      '1': t('jobs.raisedandassigned','Raised And Assigned'),\r\n      '2': t('jobs.inprogress','In Progress'),\r\n      '3': t('jobs.onhold','On Hold'),\r\n      '4': t('jobs.completed','Completed'),\r\n\r\n      } ,\r\n      render: rowData => {\r\n        return <Tooltip title={rowData.status} placement=\"bottom-start\" arrow>\r\n           </Tooltip>            \r\n     },\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n\r\n    { title: t('jobs.priority','Priority'), field: \"priority\" ,\r\n    lookup: { '0': t('jobs.low','Low'), \r\n    '1': t('jobs.normal','Normal'), \r\n    '2': t('jobs.high','High'), \r\n    '3': t('jobs.safety','Safety')},\r\n\r\n    render: rowData => {\r\n      switch (rowData.priority) {\r\n        case '0':\r\n           return <Icon name='angle down'size='large'/>\r\n        case '1':\r\n           return <Icon name='blue angle up'size='large'/>\r\n        case '2':\r\n           return <Icon name='red angle double up'size='large'/>\r\n   \r\n        case '3':\r\n           return <Icon name='orange exclamation triangle'size='large'/>\r\n    default:\r\n      return <></>\r\n    }}\r\n  },\r\n\r\n    { title: t('jobs.description','Description'), field: \"description\" },\r\n    { title: t('jobs.category','Category'), field: \"category\" ,\r\n    lookup: { '0': 'None', '1': 'Equipment', '2': 'Paddock', '3': 'Fuel Tank', '4': 'Silo', '5': 'Livestock'},},\r\n    { title: t('jobs.asset','Asset'), field: \"asset\" },\r\n    { title: t('jobs.duedate','Due Date'), field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: t('jobs.lastupdate','Last Update'), field: \"lastupdate\", type:\"date\", filtering: false },\r\n\r\n    \r\n  ];\r\n \r\n  const {\r\n    values,\r\n    setValues,\r\n    handleInputChange\r\n} = Useform(initialValues);\r\n\r\n//const { bool, setbool } = React.useContext(SampleContext);\r\nconst [status, setstatus] = React.useState('');\r\nconst [startdate, setstartdate] = React.useState('None');\r\nconst [starttime, setstarttime] = React.useState('');\r\nconst [enddate, setenddate] = React.useState('None');\r\nconst [endtime, setendtime] = React.useState('');\r\nconst [img, setimg] = React.useState();\r\nconst date = \"\";\r\nvar d = 3;\r\nconst [checked, setChecked] = React.useState(false);\r\n\r\nconst handleChange = (event) => {\r\n    setstatus(event.target.value);\r\n    d = event.target.value;\r\n    setimg(jobAssign.getStatus()[d - 1].icon);\r\n    if (d == 3 || (status <= 2 && d > 3)) {\r\n        const current = new Date();\r\n        const date = current.toLocaleDateString('en-GB',\r\n            {\r\n                day: '2-digit', month: 'long', year: 'numeric'\r\n            }).replace(/ /g, ' ');\r\n        setstartdate(date);\r\n        setstarttime(current.toLocaleTimeString(\"en-US\",\r\n            {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n            }));\r\n    }\r\n    if (d == 5) {\r\n        const current = new Date();\r\n        setChecked(true);\r\n        //setbool(true);\r\n        const date = current.toLocaleDateString('en-GB',\r\n            {\r\n                day: '2-digit', month: 'long', year: 'numeric'\r\n            }).replace(/ /g, ' ');\r\n        setenddate(date);\r\n        setendtime(current.toLocaleTimeString(\"en-US\",\r\n            {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n            }));\r\n\r\n    }\r\n\r\n};\r\n\r\nconst handleClick = (e) => {\r\n    setChecked(false);\r\n    //setbool(false);\r\n    setenddate('None');\r\n    setendtime('');\r\n    setstatus(3);\r\n    setimg(jobAssign.getStatus()[2].icon);\r\n}\r\n\r\n\r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n\r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}><Trans i18nKey=\"jobs.heading\">Jobs</Trans> </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"completed\"><Trans i18nKey=\"general.showcompleted\">Show Completed</Trans></div>\r\n\r\n      </div>\r\n      <Modal onClose={() => setOpen(false)} open={open} as={Form}>\r\n        <Modal.Header>\r\n          {newedit === true ? \"New Job\" : \"Edit Job\"}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n        \r\n        <Form>\r\n           \r\n                <Grid item >\r\n                <InputLabel>CREATOR</InputLabel>\r\n                    <TextField                      \r\n                        name=\"creator\"\r\n                        value=\"JESTEENA JOSE\"\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <br/><br/>\r\n                    <SelectCheck\r\n                        name=\"assigned\"\r\n                        label=\"ASSIGNED\"\r\n                        value={values.assigned}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <br /><br />\r\n                    <Category\r\n                        name=\"category\"\r\n                        label=\"Category\"\r\n                        value={values.category}\r\n                        onChange={handleInputChange}\r\n                        options={jobAssign.getCategory()}\r\n                        \r\n                    />\r\n                    <InputLabel>DUE DATE</InputLabel>\r\n                    <Grid container spacing={10}>\r\n                        <Grid item xs={100} sm={100}>\r\n                            <MyDatePicker\r\n                                name=\"dueDate\"\r\n                                label=\"Due Date\"\r\n                                value={values.dueDate}\r\n                                onChange={handleInputChange}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Select\r\n                                name=\"priority\"\r\n                                label=\"PRIORITY\"\r\n                                value={values.priority}\r\n                                onChange={handleInputChange}\r\n                                options={jobAssign.getPriority()}\r\n                                \r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>STARTED</InputLabel>\r\n                                <p>{startdate}</p>\r\n                                <p>{starttime}</p>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <InputLabel>COMPLETED</InputLabel>\r\n                                <p>{enddate}</p>\r\n                                <p>{endtime}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid container spacing={0} alignItems=\"center\">\r\n                            <Grid item xs={0} sm={0} md={0}>\r\n                                <br />\r\n                                {img}\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6}>\r\n                                <FormControl\r\n                                    variant=\"standard\">\r\n                                    <InputLabel>STATUS</InputLabel>\r\n                                    <MuiSelect\r\n                                        label=\"STATUS\"\r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={handleChange}\r\n                                        inputProps={{ readOnly: false }}>\r\n                                        {\r\n                                            jobAssign.getStatus().map(\r\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                            )\r\n                                        }\r\n                                    </MuiSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={30} md={5}>\r\n                                <Fade in={checked}>\r\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\r\n                                </Fade>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid >\r\n                    </Grid>\r\n           \r\n                    <br />\r\n                    <div className=\"des\">\r\n                        <label>DESCRIPTION</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\r\n                    <div className=\"des\">\r\n                        <label>NOTES</label>\r\n                    </div>\r\n                    <br />\r\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\r\n        </Form>\r\n            </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button type=\"submit\" color=\"black\" onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            content=\"Save\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n             \r\n            }}\r\n            positive\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? jobData_withcomplete : jobData_withoutcomplete}\r\n          \r\n          localization={{\r\n            toolbar:{\r\n              searchTooltip:t('materialtable.searchtooltip','Search'),\r\n              searchPlaceholder:t('materialtable.searchplaceholder','Search')\r\n            },\r\n            header:{\r\n              actions:t('materialtable.headeractions','Actions')\r\n\r\n            },\r\n            body:{\r\n              addTooltip:t('materialtable.bodyaddtooltip','Add'),\r\n              deleteTooltip:t('materialtable.bodydeletetooltip','Delete'),\r\n              editTooltip:t('materialtable.edittooltip','Edit'),\r\n              emptyDataSourceMessage:t('materialtable.emptydatasourcemessage','No records to diplay'),\r\n              editRow:{\r\n                deleteText:t('materialtable.deletetext','Are you sure u want to delete?'),\r\n                cancelTooltip:t('materialtable.editrowcanceltip','Cancel'),\r\n                saveTooltip:t('materialtable.editrowsavetooltip','Save')\r\n              },\r\n              filterRow:{\r\n                filterTooltip:t('materialtable.feltertooltip','Filter')\r\n              }\r\n            },\r\n            pagination:{\r\n              previousTooltip:t('materialtable.previoustooltip','Previous Page'),\r\n              nextTooltip:t('materialtable.nexttooltip','Next Page'),\r\n              labelRowsSelect:t('materialtable.labelrowselect','rows')\r\n              \r\n            }\r\n          }}\r\n\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n           components={{\r\n          Cell: (props) => (\r\n            <Tooltip placement=\"bottom\" title={props.value ? props.value : ''}>\r\n              <MTableCell {...props} />\r\n            </Tooltip>       /// Add translation for tooltip also\r\n          ),\r\n        }}\r\n          actions={[\r\n          {\r\n            icon: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n            isFreeAction: true,\r\n            onClick: (event) => setOpen(true)\r\n          },\r\n          {\r\n            icon: () => <CreateIcon color=\"action\" />,\r\n           \r\n            onClick: (event) => setOpen(true)\r\n          },\r\n          {\r\n            icon: () => <DeleteIcon color=\"action\" />\r\n          }\r\n          ]}\r\n        ></MaterialTable>\r\n        \r\n            \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}