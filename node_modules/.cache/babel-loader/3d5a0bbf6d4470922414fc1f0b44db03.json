{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Equipment.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Useform, Form } from '../Useform';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport SelectCheck from './SelectCheck';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport tractor from '../services/tractor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Equipment(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [equipment, setequipment] = React.useState(\"\");\n  const [cat, setcat] = React.useState({});\n  const [img, setimg] = React.useState(tractor);\n  const [img1, setimg1] = React.useState(tractor);\n  var changeequipment = 0;\n  var flag = 0;\n  const arr = {};\n  const [field, setfield] = React.useState(\"None\");\n  const [fieldfarm, setfieldfarm] = React.useState(\"\");\n  const [subfield, setSubfield] = React.useState('NONE');\n  const [rate, setRate] = React.useState('60');\n  const [rateunit, setRateunit] = React.useState('l/Ha');\n  const [fieldval, setfieldval] = React.useState(\"equipment\");\n  const [subfieldval, setSubfieldval] = React.useState('NONE');\n  const [c, setc] = React.useState({});\n  const initialValues = {\n    nozzles: '',\n    equipment: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\"\n  };\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = Useform(initialValues);\n\n  const handleChange = (event, value) => {\n    setequipment(event.target.value);\n    changeequipment = event.target.value;\n    setfieldval(value.props.children);\n    setcat({});\n    flag = 0;\n    const arr = options.filter(a => a.id === changeequipment);\n\n    if (changeequipment != \"\") {\n      setc(arr[0].data);\n      setSubfieldval(\"\");\n      setfieldfarm(\"\");\n      setimg1(options[changeequipment - 1].icon);\n    } else {\n      setc({});\n      setfieldval(\"equipment\");\n      setSubfieldval(\"None\");\n      setfieldfarm(\"\");\n      setimg1(tractor);\n    }\n  };\n\n  const handleChange1 = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setcat(values => ({ ...values,\n      [name]: value\n    }));\n    console.log(cat);\n\n    if (name == \"Farm\") {\n      setfieldfarm(value + \" : \");\n      flag = 1;\n    } else {\n      setSubfieldval(value);\n    }\n  };\n\n  const handleClickOpen = () => {\n    if (!restart) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  const handleOk = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      if (subfieldval == \"\") {\n        alert(\"No \" + fieldval + \" Selected\");\n      } else {\n        if (fieldfarm != \"\") {\n          setfield(fieldval);\n          setSubfield(fieldfarm + subfieldval);\n          setimg(img1);\n          setOpen(false);\n        } else {\n          if (equipment == 1 || equipment == 5) {\n            setfield(fieldval);\n            setSubfield(fieldfarm + subfieldval);\n            setimg(img1);\n            setOpen(false);\n          }\n        }\n      }\n    }\n  };\n\n  const {\n    name,\n    label,\n    value,\n    onChange,\n    options,\n    restart\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"inherit\",\n      onClick: handleClickOpen,\n      size: \"large\",\n      fullWidth: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Spray Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'grid'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"standard\",\n              name: \"description\",\n              label: \"Description\",\n              value: \"\",\n              required: true,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SelectCheck, {\n              name: \"nozzle\",\n              label: \"Nozzles\",\n              value: values.nozzles,\n              onChange: handleInputChange,\n              choice: \"nozzle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"standard\",\n              name: \"description\",\n              label: \"Operating pressure\",\n              required: true,\n              autocomplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Droplet size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              label: \"Droplet size\",\n              name: name,\n              value: equipment,\n              onChange: handleChange,\n              displayEmpty: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.title\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 50\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClickOpen,\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Equipment, \"giXoQbUVcSSSp6kwLCZ56Y5rDHY=\");\n\n_c = Equipment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equipment\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Equipment.js"],"names":["React","Box","Button","Useform","Form","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","SelectCheck","InputLabel","MenuItem","Grid","Select","MuiSelect","TextField","tractor","Equipment","props","open","setOpen","useState","equipment","setequipment","cat","setcat","img","setimg","img1","setimg1","changeequipment","flag","arr","field","setfield","fieldfarm","setfieldfarm","subfield","setSubfield","rate","setRate","rateunit","setRateunit","fieldval","setfieldval","subfieldval","setSubfieldval","c","setc","initialValues","nozzles","dueDate","Date","priority","started","completed","restartjob","description","notes","values","setValues","handleInputChange","handleChange","event","value","target","children","options","filter","a","id","data","icon","handleChange1","name","console","log","handleClickOpen","restart","handleClose","reason","handleOk","alert","label","onChange","display","m","minWidth","map","item","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { Useform, Form } from '../Useform';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport SelectCheck from './SelectCheck';\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport TextField from '@mui/material/TextField';\r\nimport tractor from '../services/tractor.png'\r\n\r\nexport default function Equipment(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [equipment, setequipment] = React.useState(\"\");\r\n    const [cat, setcat] = React.useState({});\r\n    const [img, setimg] = React.useState(tractor);\r\n    const [img1, setimg1] = React.useState(tractor);\r\n    var changeequipment = 0;\r\n    var flag=0;\r\n    const arr = {};\r\n    const [field, setfield] = React.useState(\"None\")\r\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\r\n    const [subfield, setSubfield] = React.useState('NONE');\r\n    const [rate, setRate] = React.useState('60');\r\n    const [rateunit, setRateunit] = React.useState('l/Ha');\r\n    const [fieldval, setfieldval] = React.useState(\"equipment\")\r\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\r\n    const [c, setc] = React.useState({});\r\n\r\n    const initialValues = {\r\n  \r\n        nozzles: '',\r\n        equipment: '',\r\n        dueDate: new Date(),\r\n        priority: '',\r\n        started: '',\r\n        completed: '',\r\n        restartjob: '',\r\n        description: \"\",\r\n        notes: \"\",\r\n    }\r\n    \r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange\r\n    } = Useform(initialValues);\r\n\r\n\r\n    const handleChange = (event, value) => {\r\n        setequipment(event.target.value);\r\n        changeequipment = event.target.value;\r\n        setfieldval(value.props.children)\r\n        setcat({})\r\n        flag=0;\r\n        const arr = options.filter(\r\n            a => (a.id === changeequipment)\r\n        )\r\n        if (changeequipment != \"\") {\r\n            setc(arr[0].data);\r\n            setSubfieldval(\"\");\r\n            setfieldfarm(\"\");\r\n            setimg1(options[changeequipment - 1].icon);\r\n        }\r\n        else{\r\n            setc({});\r\n            setfieldval(\"equipment\")\r\n            setSubfieldval(\"None\");\r\n            setfieldfarm(\"\");\r\n            setimg1(tractor);\r\n        }\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setcat(values => ({ ...values, [name]: value }))\r\n        console.log(cat);\r\n        if (name == \"Farm\") {\r\n            setfieldfarm(value + \" : \");\r\n            flag=1;\r\n        }\r\n        else {\r\n            setSubfieldval(value);\r\n        }\r\n    }\r\n    const handleClickOpen = () => {\r\n        if (!restart) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleOk = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            if (subfieldval==\"\") {\r\n                alert(\"No \"+fieldval+\" Selected\")\r\n            }\r\n            else{\r\n                if(fieldfarm!=\"\"){\r\n                    setfield(fieldval);\r\n                    setSubfield(fieldfarm + subfieldval);\r\n                    setimg(img1)\r\n                    setOpen(false);\r\n                }\r\n                else{\r\n                    if(equipment==1 ||equipment==5){\r\n                        setfield(fieldval);\r\n                        setSubfield(fieldfarm + subfieldval);\r\n                        setimg(img1)\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const { name, label, value, onChange, options, restart } = props;\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\r\n                \r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>Spray Equipment</DialogTitle>\r\n            <DialogContent>\r\n                <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                        <TextField\r\n                            variant=\"standard\"\r\n                            name=\"description\"\r\n                            label=\"Description\"\r\n                            value=\"\"\r\n                            \r\n                            required\r\n                            autocomplete=\"off\"\r\n                        />\r\n                        <SelectCheck\r\n                        name=\"nozzle\"\r\n                        label=\"Nozzles\"\r\n                        value={values.nozzles}\r\n                        onChange={handleInputChange}\r\n                        choice=\"nozzle\"\r\n\r\n                    />\r\n                    <br></br>\r\n                    <TextField\r\n                            variant=\"standard\"\r\n                            name=\"description\"\r\n                            label=\"Operating pressure\"\r\n                            \r\n                            required\r\n                            autocomplete=\"off\"\r\n                        />\r\n                        <br></br>\r\n                            <InputLabel>Droplet size</InputLabel>\r\n                            <MuiSelect\r\n                                label=\"Droplet size\"\r\n                                name={name}\r\n                                value={equipment}\r\n                                onChange={handleChange}\r\n                                displayEmpty>\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {\r\n                                    options.map(\r\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </MuiSelect>\r\n                    </FormControl>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                <Button onClick={handleClickOpen} color=\"primary\">SAVE</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}