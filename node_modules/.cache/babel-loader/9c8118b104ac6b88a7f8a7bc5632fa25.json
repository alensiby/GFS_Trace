{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Inventory\\\\Water\\\\Tables\\\\Storages.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport Export from '../../../export.png';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { storages_data } from '../../../../../Data/InventoryWaterData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Storages() {\n  _s();\n\n  const [data, setData] = React.useState(storages_data);\n  const columns = [{\n    title: 'Farms',\n    field: 'farm'\n  }, {\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity'\n  }, {\n    title: 'Contents',\n    field: 'contents'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"STORAGES\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {}),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 35\n        }, this),\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 35\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Storages, \"rSfOmX39INDk2Ji833pIcUaMKuw=\");\n\n_c = Storages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Storages\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Inventory/Water/Tables/Storages.js"],"names":["React","MaterialTable","MTableToolbar","Export","CreateIcon","AddCircleRoundedIcon","DeleteIcon","storages_data","Storages","data","setData","useState","columns","title","field","onRowAdd","newRow","Promise","resolve","reject","onRowUpdate","newData","oldData","setTimeout","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Export from '../../../export.png';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { storages_data } from '../../../../../Data/InventoryWaterData'\r\n\r\nexport default function Storages() {\r\n    const [data, setData] = React.useState(storages_data)\r\n    const columns = [{\r\n        title: 'Farms', field: 'farm'\r\n    },\r\n    {\r\n        title: 'Name', field: 'name',\r\n    },\r\n    {\r\n        title: 'Capacity', field: 'capacity',\r\n    }, {\r\n        title: 'Contents', field: 'contents',\r\n    }]\r\n    \r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"STORAGES\"\r\n                data={data}\r\n                columns={ columns}\r\n                editable={{\r\n                    onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                      onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve, reject) => {\r\n                          setTimeout(() => {\r\n                            const dataUpdate = [...data];\r\n                            const index = oldData.tableData.id;\r\n                            dataUpdate[index] = newData;\r\n                            setData([...dataUpdate]);\r\n            \r\n                            resolve();\r\n                          }, 1000)\r\n                        }),\r\n                      onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                          setTimeout(() => {\r\n                            const dataDelete = [...data];\r\n                            const index = oldData.tableData.id;\r\n                            dataDelete.splice(index, 1);\r\n                            setData([...dataDelete]);\r\n            \r\n                            resolve()\r\n                          }, 1000)\r\n                        }),\r\n                    }}\r\n                options={{\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                    Toolbar: props => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                  icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    \r\n                      Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                      Edit: () => <CreateIcon color=\"action\" />,\r\n                      Delete: () => <DeleteIcon color=\"action\" />\r\n                     \r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}