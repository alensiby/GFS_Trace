{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Job\\\\controls\\\\SelectCheck.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Dropdown } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Kelly Snyder'];\nexport default function SelectCheck(props) {\n  _s();\n\n  const {\n    name,\n    label,\n    value,\n    restart\n  } = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      placeholder: \"Select Friend\",\n      fluid: true,\n      selection: true,\n      options: friendOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectCheck, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = SelectCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCheck\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Job/controls/SelectCheck.js"],"names":["React","FormControl","InputLabel","MenuItem","Select","MuiSelect","ListItemText","Checkbox","Dropdown","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","SelectCheck","props","name","label","value","restart","personName","setPersonName","useState","handleChange","event","target","split","friendOptions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,MAAM,IAAIC,SAAtD,QAAuE,mBAAvE;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,cANY,CAAd;AASA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAqBC,IAAAA;AAArB,MAAgCJ,KAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BxB,KAAK,CAACyB,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEP,QAAAA;AAAF;AADJ,QAEFM,KAFJ;AAGAH,IAAAA,aAAa,EACX;AACA,WAAOH,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACQ,KAAN,CAAY,GAAZ,CAA5B,GAA+CR,KAFpC,CAAb;AAID,GARD;;AASA,sBACE,QAAC,WAAD;AAAA,2BACA,QAAC,QAAD;AACA,MAAA,WAAW,EAAC,eADZ;AAEA,MAAA,KAAK,MAFL;AAGA,MAAA,SAAS,MAHT;AAIA,MAAA,OAAO,EAAES;AAJT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBuBb,W;;KAAAA,W","sourcesContent":["import React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function SelectCheck(props) {\r\n  const { name, label, value,restart} = props;\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n  return (\r\n    <FormControl>\r\n    <Dropdown\r\n    placeholder='Select Friend'\r\n    fluid\r\n    selection\r\n    options={friendOptions}\r\n  />\r\n    </FormControl>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}