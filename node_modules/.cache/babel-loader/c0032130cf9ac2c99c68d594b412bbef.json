{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Total.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from './export.png';\nimport { total_data, type_data } from './Tabledatas';\nimport { Checkbox } from 'semantic-ui-react';\nimport { MenuItem, Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [type, setType] = useState({}); // const lsType = [\n  //   { id: 1, title: \"Cattle\" },\n  //   { id: 2, title: \"Bulls\" },\n  //   { id: 3, title: \"Sheep\" },\n  //   { id: 4, title: \"Horses\" },\n  //   { id: 5, title: \"Chickens\" },\n  //   { id: 6, title: \"Pigs\" },\n  //   { id: 7, title: \"Deer\" },\n  //   { id: 8, title: \"Goats\" },\n  //   { id: 9, title: \"Llamas\" },\n  //   { id: 10, title: \"Bees\" },\n  // ];\n\n  const [data, setData] = React.useState(total_data);\n  const columns = [{\n    title: 'Type',\n    field: 'type',\n    lookup: type\n  }, {\n    title: 'Capacity',\n    field: 'capacity',\n    filtering: false\n  }, {\n    title: 'Contents',\n    field: 'contents',\n    filtering: false\n  }, {\n    title: 'Free',\n    field: 'free',\n    filtering: false\n  }, {\n    title: 'Contents',\n    field: 'contents1',\n    filtering: false\n  }];\n  const columns_archived = [{\n    title: 'Type',\n    field: 'type',\n    lookup: type\n  }, {\n    title: 'Capacity',\n    field: 'capacity',\n    filtering: false\n  }, {\n    title: 'Contents',\n    field: 'contents',\n    filtering: false\n  }, {\n    title: 'Free',\n    field: 'free',\n    filtering: false\n  }, {\n    title: 'Contents',\n    field: 'contents1',\n    filtering: false\n  }];\n  useEffect(() => {\n    const type = {};\n    type_data.map(row => type[row.id] = row.title);\n    setType(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"TOTAL\",\n      data: data,\n      columns: selected ? columns_archived : columns,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true,\n        filtering: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 35\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 35\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Total, \"3YPenx1oi1i4/jJnLbrAR3iJc5M=\");\n\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Total.js"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","CreateIcon","DeleteIcon","Export","total_data","type_data","Checkbox","MenuItem","Select","Total","selected","toggleselected","type","setType","data","setData","columns","title","field","lookup","filtering","columns_archived","map","row","id","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","Edit","Delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,EAAoBC,SAApB,QAAqC,cAArC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mBAAjC;;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6Bf,KAAK,CAACE,QAAN,CAAe,KAAf,CAAnC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC,CAF8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACE,QAAN,CAAeM,UAAf,CAAxB;AACA,QAAMY,OAAO,GAAG,CAChB;AACIC,IAAAA,KAAK,EAAE,MADX;AACmBC,IAAAA,KAAK,EAAE,MAD1B;AACiCC,IAAAA,MAAM,EAACP;AADxC,GADgB,EAGb;AACCK,IAAAA,KAAK,EAAE,UADR;AACoBC,IAAAA,KAAK,EAAE,UAD3B;AACsCE,IAAAA,SAAS,EAAC;AADhD,GAHa,EAMhB;AACIH,IAAAA,KAAK,EAAE,UADX;AACuBC,IAAAA,KAAK,EAAE,UAD9B;AACyCE,IAAAA,SAAS,EAAC;AADnD,GANgB,EAShB;AACIH,IAAAA,KAAK,EAAE,MADX;AACmBC,IAAAA,KAAK,EAAE,MAD1B;AACiCE,IAAAA,SAAS,EAAC;AAD3C,GATgB,EAYhB;AACEH,IAAAA,KAAK,EAAE,UADT;AACqBC,IAAAA,KAAK,EAAE,WAD5B;AACwCE,IAAAA,SAAS,EAAC;AADlD,GAZgB,CAAhB;AAmBA,QAAMC,gBAAgB,GAAG,CACvB;AACEJ,IAAAA,KAAK,EAAE,MADT;AACiBC,IAAAA,KAAK,EAAE,MADxB;AAC+BC,IAAAA,MAAM,EAACP;AADtC,GADuB,EAGtB;AACCK,IAAAA,KAAK,EAAE,UADR;AACoBC,IAAAA,KAAK,EAAE,UAD3B;AACsCE,IAAAA,SAAS,EAAC;AADhD,GAHsB,EAMzB;AACIH,IAAAA,KAAK,EAAE,UADX;AACuBC,IAAAA,KAAK,EAAE,UAD9B;AACyCE,IAAAA,SAAS,EAAC;AADnD,GANyB,EASzB;AACIH,IAAAA,KAAK,EAAE,MADX;AACmBC,IAAAA,KAAK,EAAE,MAD1B;AACiCE,IAAAA,SAAS,EAAC;AAD3C,GATyB,EAYzB;AACEH,IAAAA,KAAK,EAAE,UADT;AACqBC,IAAAA,KAAK,EAAE,WAD5B;AACwCE,IAAAA,SAAS,EAAC;AADlD,GAZyB,CAAzB;AAgBFvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,IAAI,GAAG,EAAb;AACAP,IAAAA,SAAS,CAACiB,GAAV,CAAeC,GAAD,IAAUX,IAAI,CAACW,GAAG,CAACC,EAAL,CAAJ,GAAeD,GAAG,CAACN,KAA3C;AACAJ,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAKE,sBACI;AAAA,2BAYI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,OAArB;AACI,MAAA,IAAI,EAAEE,IADV;AAEI,MAAA,OAAO,EAAEJ,QAAQ,GAAGW,gBAAH,GAAsBL,OAF3C;AAGI,MAAA,QAAQ,EAAE;AACNS,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMC,UAAU,GAAG,CAAC,GAAGlB,IAAJ,CAAnB;AACA,kBAAMmB,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBV,EAAhC;AACAQ,YAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBP,OAApB;AACAX,YAAAA,OAAO,CAAC,CAAC,GAAGiB,UAAJ,CAAD,CAAP;AAEAH,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD,CAFI;AAYNM,QAAAA,WAAW,EAAER,OAAO,IAClB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMK,UAAU,GAAG,CAAC,GAAGtB,IAAJ,CAAnB;AACA,kBAAMmB,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBV,EAAhC;AACAY,YAAAA,UAAU,CAACC,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACAlB,YAAAA,OAAO,CAAC,CAAC,GAAGqB,UAAJ,CAAD,CAAP;AAEAP,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD;AAbI,OAHd;AA2BI,MAAA,OAAO,EAAE;AACLS,QAAAA,kBAAkB,EAAE,CAAC,CADhB;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAHZ;AAILC,QAAAA,cAAc,EAAE,SAJX;AAKLC,QAAAA,wBAAwB,EAAE,KALrB;AAMLC,QAAAA,YAAY,EAAE,IANT;AAMcvB,QAAAA,SAAS,EAAC;AANxB,OA3Bb;AAmCI,MAAA,UAAU,EAAE;AACVwB,QAAAA,OAAO,EAAGC,KAAD,iBACP;AAAA,kCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,MAAM,MADR;AAEE,cAAA,OAAO,EAAE,MAAMlC,cAAc,CAAC,CAACD,QAAF,CAF/B;AAGE,cAAA,OAAO,EAAEA,QAHX;AAIE,cAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ,OAnChB;AAkDI,MAAA,KAAK,EAAE;AACHP,QAAAA,MAAM,EAAE,mBAAM;AAAK,UAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADX;AAEH2C,QAAAA,IAAI,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFT;AAGHC,QAAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHX;AAlDX;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuEH;;GAjIuBtC,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Export from './export.png';\r\nimport { total_data,type_data } from './Tabledatas';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nimport { MenuItem, Select } from '@material-ui/core';\r\nexport default function Total() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n  const [type, setType] = useState({});\r\n\r\n  // const lsType = [\r\n  //   { id: 1, title: \"Cattle\" },\r\n  //   { id: 2, title: \"Bulls\" },\r\n  //   { id: 3, title: \"Sheep\" },\r\n  //   { id: 4, title: \"Horses\" },\r\n  //   { id: 5, title: \"Chickens\" },\r\n  //   { id: 6, title: \"Pigs\" },\r\n  //   { id: 7, title: \"Deer\" },\r\n  //   { id: 8, title: \"Goats\" },\r\n  //   { id: 9, title: \"Llamas\" },\r\n  //   { id: 10, title: \"Bees\" },\r\n  // ];\r\n\r\n    const [data, setData] = React.useState(total_data)\r\n    const columns = [\r\n    {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',filtering:false,\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',filtering:false,\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',filtering:false,\r\n    },\r\n    {\r\n      title: 'Contents', field: 'contents1',filtering:false,\r\n  },\r\n    \r\n  ];\r\n\r\n  \r\n    const columns_archived = [\r\n      {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    }, {\r\n        title: 'Capacity', field: 'capacity',filtering:false,\r\n    },\r\n    {\r\n        title: 'Contents', field: 'contents',filtering:false,\r\n    },\r\n    {\r\n        title: 'Free', field: 'free',filtering:false,\r\n    },\r\n    {\r\n      title: 'Contents', field: 'contents1',filtering:false,\r\n  },\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n    return (\r\n        <div>\r\n          {/* <Select\r\n    labelId=\"demo-simple-select-label\"\r\n    id=\"demo-simple-select\"\r\n     value={type}\r\n    // label=\"Age\"\r\n    // onChange={handleChange}\r\n  >\r\n    <MenuItem value={Diesel}>Diesel</MenuItem>\r\n    <MenuItem value={Unleaded}>Unleaded</MenuItem>\r\n    <MenuItem value={Aviation}>Aviation</MenuItem>\r\n  </Select> */}\r\n            <MaterialTable title=\"TOTAL\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,filtering:true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\">\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}