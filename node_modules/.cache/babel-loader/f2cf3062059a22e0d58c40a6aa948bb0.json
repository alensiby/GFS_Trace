{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Ingoing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../../export.png';\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\nimport { Checkbox } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingoing() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [data, setData] = React.useState(ingoing_data);\n  const columns = [{\n    title: 'Water Storage',\n    field: 'water_storage'\n  }, {\n    title: 'Date/Time',\n    field: 'date'\n  }, {\n    title: 'Operator',\n    field: 'operator'\n  }, {\n    title: 'Amount',\n    field: 'amount'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }];\n  const columns_archived = [{\n    title: 'Water Storage',\n    field: 'water_storage'\n  }, {\n    title: 'Date/Time',\n    field: 'date'\n  }, {\n    title: 'Operator',\n    field: 'operator'\n  }, {\n    title: 'Amount',\n    field: 'amount'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }, {\n    title: \"Archived\",\n    field: \"archived\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"INGOING\",\n      data: data,\n      columns: selected ? columns_archived : columns,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 35\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ingoing, \"r6JJD54gUN6hiR6OEXC4C7zrYD0=\");\n\n_c = Ingoing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingoing\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/Water/Tables/Ingoing.js"],"names":["React","MaterialTable","MTableToolbar","CreateIcon","DeleteIcon","Export","ingoing_data","Checkbox","Ingoing","selected","toggleselected","useState","data","setData","columns","title","field","columns_archived","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","Edit","Delete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,IAAuBC,aAAvB,QAA4C,gBAA5C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAnC;AACE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACW,QAAN,CAAeL,YAAf,CAAxB;AACA,QAAMQ,OAAO,GAAG,CAAC;AACbC,IAAAA,KAAK,EAAE,eADM;AACWC,IAAAA,KAAK,EAAE;AADlB,GAAD,EAGhB;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE;AAD/B,GAHgB,EAKb;AACCD,IAAAA,KAAK,EAAE,UADR;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GALa,EAQhB;AACID,IAAAA,KAAK,EAAE,QADX;AACqBC,IAAAA,KAAK,EAAE;AAD5B,GARgB,EAWhB;AACID,IAAAA,KAAK,EAAE,OADX;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GAXgB,CAAhB;AAcA,QAAMC,gBAAgB,GAAG,CAAC;AACxBF,IAAAA,KAAK,EAAE,eADiB;AACAC,IAAAA,KAAK,EAAE;AADP,GAAD,EAG3B;AACID,IAAAA,KAAK,EAAE,WADX;AACwBC,IAAAA,KAAK,EAAE;AAD/B,GAH2B,EAKxB;AACCD,IAAAA,KAAK,EAAE,UADR;AACoBC,IAAAA,KAAK,EAAE;AAD3B,GALwB,EAQ3B;AACID,IAAAA,KAAK,EAAE,QADX;AACqBC,IAAAA,KAAK,EAAE;AAD5B,GAR2B,EAW3B;AACED,IAAAA,KAAK,EAAE,OADT;AACkBC,IAAAA,KAAK,EAAE;AADzB,GAX2B,EAe3B;AACED,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAf2B,CAAzB;AAmBA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,SAArB;AACI,MAAA,IAAI,EAAEJ,IADV;AAEI,MAAA,OAAO,EAAEH,QAAQ,GAAGQ,gBAAH,GAAsBH,OAF3C;AAGI,MAAA,QAAQ,EAAE;AACNI,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMC,UAAU,GAAG,CAAC,GAAGb,IAAJ,CAAnB;AACA,kBAAMc,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBC,EAAhC;AACAH,YAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBP,OAApB;AACAN,YAAAA,OAAO,CAAC,CAAC,GAAGY,UAAJ,CAAD,CAAP;AAEAH,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD,CAFI;AAYNO,QAAAA,WAAW,EAAET,OAAO,IAClB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMM,UAAU,GAAG,CAAC,GAAGlB,IAAJ,CAAnB;AACA,kBAAMc,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBC,EAAhC;AACAE,YAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACAb,YAAAA,OAAO,CAAC,CAAC,GAAGiB,UAAJ,CAAD,CAAP;AAEAR,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD;AAbI,OAHd;AA2BI,MAAA,OAAO,EAAE;AACLU,QAAAA,kBAAkB,EAAE,CAAC,CADhB;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAHZ;AAILC,QAAAA,cAAc,EAAE,SAJX;AAKLC,QAAAA,wBAAwB,EAAE,KALrB;AAMLC,QAAAA,YAAY,EAAE;AANT,OA3Bb;AAmCI,MAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAEC,KAAK,iBACZ;AAAA,kCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,MAAM,MADR;AAEE,cAAA,OAAO,EAAE,MAAM7B,cAAc,CAAC,CAACD,QAAF,CAF/B;AAGE,cAAA,OAAO,EAAEA,QAHX;AAIE,cAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ,OAnChB;AAkDI,MAAA,KAAK,EAAE;AACHJ,QAAAA,MAAM,EAAE,mBAAM;AAAK,UAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADX;AAEHmC,QAAAA,IAAI,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFT;AAGHC,QAAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHX;AAlDX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH;;GAhGuBjC,O;;KAAAA,O","sourcesContent":["import React from 'react'\nimport MaterialTable,{ MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../../export.png';\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\nimport { Checkbox } from \"semantic-ui-react\";\nexport default function Ingoing() {\n  const [selected, toggleselected] = React.useState(false);\n    const [data, setData] = React.useState(ingoing_data)\n    const columns = [{\n        title: 'Water Storage', field: 'water_storage'\n    },\n    {\n        title: 'Date/Time', field: 'date',\n    }, {\n        title: 'Operator', field: 'operator',\n    },\n    {\n        title: 'Amount', field: 'amount',\n    },\n    {\n        title: 'Notes', field: 'notes',\n    }]\n    const columns_archived = [{\n      title: 'Water Storage', field: 'water_storage'\n  },\n  {\n      title: 'Date/Time', field: 'date',\n  }, {\n      title: 'Operator', field: 'operator',\n  },\n  {\n      title: 'Amount', field: 'amount',\n  },\n  {\n    title: 'Notes', field: 'notes',\n},\n \n  {\n    title: \"Archived\",\n    field: \"archived\",\n  },]\n    return (\n        <div>\n            <MaterialTable title=\"INGOING\"\n                data={data}\n                columns={selected ? columns_archived : columns}\n                editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          const dataUpdate = [...data];\n                          const index = oldData.tableData.id;\n                          dataUpdate[index] = newData;\n                          setData([...dataUpdate]);\n          \n                          resolve();\n                        }, 1000)\n                      }),\n                    onRowDelete: oldData =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          const dataDelete = [...data];\n                          const index = oldData.tableData.id;\n                          dataDelete.splice(index, 1);\n                          setData([...dataDelete]);\n          \n                          resolve()\n                        }, 1000)\n                      }),\n                  }}\n                options={{\n                    actionsColumnIndex: -1,\n                    paging: true,\n                    pageSizeOptions: [2, 5, 10, 15, 20],\n                    paginationType: \"stepped\",\n                    showFirstLastPageButtons: false,\n                    exportButton: true,\n                }}\n                components={{\n                  Toolbar: props => (\n                    <div>\n                      <MTableToolbar {...props} />\n                      <div className=\"toggle-switch\">\n                        <Checkbox\n                          toggle\n                          onClick={() => toggleselected(!selected)}\n                          checked={selected}\n                          label=\"Show Archived\"\n                        />\n                      </div>\n                    </div>\n                  ),\n                }}\n                icons={{\n                    Export: () => <img src={Export}></img>,\n                    Edit: () => <CreateIcon color=\"action\" />,\n                    Delete: () => <DeleteIcon color=\"action\" />\n                  }}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}