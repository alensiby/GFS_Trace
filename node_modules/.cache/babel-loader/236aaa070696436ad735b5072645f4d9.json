{"ast":null,"code":"import { Progress } from \"semantic-ui-react\";\nexport const silos_data = [{\n  farm: 'abc',\n  silo: 'we',\n  cultivar: 'wq',\n  capacity: \"50\",\n  contents: \"60\",\n  status: \"asd\"\n}, {\n  farm: 'abc',\n  silo: 'we',\n  cultivar: 'wq',\n  capacity: \"50\",\n  contents: \"44\",\n  status: \"asd\"\n}];\nexport const outgoing_data = [{\n  id: \"abc\",\n  silos: \"abc\",\n  dateTime: \"30/11/2021\",\n  operators: \"abc\",\n  contract: \"asd\",\n  cultivar: \"asd\",\n  transport: \"asd\",\n  driver: \"asd\",\n  rego: \"asd\",\n  tareWeight: \"abc\",\n  grossWeight: \"abc\",\n  amount: \"abc\",\n  endPointAmount: \"abc\",\n  paddocks: \"abc\",\n  traits: \"abc\",\n  notes: \"abc\",\n  archived: \"abc\"\n}, {\n  id: \"abc\",\n  silos: \"abc\",\n  dateTime: \"30/11/2021\",\n  operators: \"abc\",\n  contract: \"asd\",\n  cultivar: \"asd\",\n  transport: \"asd\",\n  driver: \"asd\",\n  rego: \"asd\",\n  tareWeight: \"abc\",\n  grossWeight: \"abc\",\n  amount: \"abc\",\n  endPointAmount: \"abc\",\n  paddocks: \"abc\",\n  traits: \"abc\",\n  notes: \"abc\",\n  archived: \"abc\"\n}];\nexport const ingoing_data = [{\n  id: \"asd\",\n  silos: \"abc\",\n  dateTime: \"30/11/2021\",\n  operators: \"abc\",\n  contract: \"asd\",\n  cultivar: \"asd\",\n  transport: \"asd\",\n  driver: \"asd\",\n  rego: \"asd\",\n  tareWeight: \"abc\",\n  grossWeight: \"abc\",\n  amount: \"abc\",\n  endPointAmount: \"abc\",\n  paddocks: \"abc\",\n  traits: \"abc\",\n  notes: \"abc\",\n  archived: \"yes\"\n}, {\n  id: \"asd\",\n  silos: \"abc\",\n  dateTime: \"30/11/2021\",\n  operators: \"abc\",\n  contract: \"asd\",\n  cultivar: \"asd\",\n  transport: \"asd\",\n  driver: \"asd\",\n  rego: \"asd\",\n  tareWeight: \"abc\",\n  grossWeight: \"abc\",\n  amount: \"abc\",\n  endPointAmount: \"abc\",\n  paddocks: \"abc\",\n  traits: \"abc\",\n  notes: \"abc\",\n  archived: \"no\"\n}];\nexport const contracts_data = [{\n  status: \"asd\",\n  contractNo: \"asd\",\n  startDate: \"20/10/2021\",\n  endDate: \"30/11/2021\",\n  buyer: \"asd\",\n  destination: \"asd\",\n  commodity: \"asd\",\n  fulfilled: \"asd\",\n  quantity: \"asd\",\n  grade: \"asd\",\n  tolerence: \"asd\",\n  notes: \"asd\"\n}, {\n  status: \"asd\",\n  contractNo: \"asd\",\n  startDate: \"20/10/2021\",\n  endDate: \"30/11/2021\",\n  buyer: \"asd\",\n  destination: \"asd\",\n  commodity: \"asd\",\n  fulfilled: \"asd\",\n  quantity: \"asd\",\n  grade: \"asd\",\n  tolerence: \"asd\",\n  notes: \"asd\"\n}];\nexport const total_data = [{\n  cultivar: \"abc\",\n  capacity: \"34\",\n  contents: \"44\",\n  free: \"aabc\",\n  contracted: \"abc\",\n  delivered: \"abc\",\n  remaining: \"abc\"\n}, {\n  cultivar: \"abc\",\n  capacity: \"34\",\n  contents: \"44\",\n  free: \"aabc\",\n  contracted: \"abc\",\n  delivered: \"abc\",\n  remaining: \"abc\"\n}, {\n  cultivar: \"abc\",\n  capacity: \"34\",\n  contents: \"44\",\n  free: \"aabc\",\n  contracted: \"abc\",\n  delivered: \"abc\",\n  remaining: \"abc\"\n}];\nexport const transfer_data = [{\n  id: \"abc\",\n  silos: \"asd\",\n  dateTime: \"30/12/2020\",\n  operators: \"asd\",\n  cultivar: \"asd\",\n  amount: \"asd\",\n  traits: \"asd\",\n  notes: \"asd\",\n  archived: \"yes\"\n}, {\n  id: \"abc\",\n  silos: \"asd\",\n  dateTime: \"30/12/2020\",\n  operators: \"asd\",\n  cultivar: \"asd\",\n  amount: \"asd\",\n  traits: \"asd\",\n  notes: \"asd\",\n  archived: \"no\"\n}, {\n  id: \"abc\",\n  silos: \"asd\",\n  dateTime: \"30/12/2020\",\n  operators: \"asd\",\n  cultivar: \"asd\",\n  amount: \"asd\",\n  traits: \"asd\",\n  notes: \"asd\",\n  archived: \"yes\"\n}];\nexport const bar_data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [{\n    label: 'new farm abc',\n    data: [4, 9, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Tabledatas.js"],"names":["Progress","silos_data","farm","silo","cultivar","capacity","contents","status","outgoing_data","id","silos","dateTime","operators","contract","transport","driver","rego","tareWeight","grossWeight","amount","endPointAmount","paddocks","traits","notes","archived","ingoing_data","contracts_data","contractNo","startDate","endDate","buyer","destination","commodity","fulfilled","quantity","grade","tolerence","total_data","free","contracted","delivered","remaining","transfer_data","bar_data","labels","datasets","label","data","backgroundColor","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { Progress } from \"semantic-ui-react\";\r\n\r\nexport  const silos_data = [\r\n    { farm: 'abc', silo: 'we', cultivar: 'wq', capacity:\"50\",contents:\"60\",status:\"asd\"},\r\n    { farm: 'abc', silo: 'we', cultivar: 'wq', capacity:\"50\",contents:\"44\",status:\"asd\"},\r\n];\r\n\r\nexport const outgoing_data = [\r\n    {id:\"abc\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n    tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"abc\"},\r\n\r\n    {id:\"abc\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n    tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"abc\"},\r\n];\r\n\r\nexport const ingoing_data = [\r\n    {id:\"asd\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n        tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"yes\"},\r\n        {id:\"asd\",silos:\"abc\",dateTime:\"30/11/2021\",operators:\"abc\",contract:\"asd\",cultivar:\"asd\",transport:\"asd\",driver:\"asd\",rego:\"asd\",\r\n        tareWeight:\"abc\",grossWeight:\"abc\",amount:\"abc\",endPointAmount:\"abc\",paddocks:\"abc\",traits:\"abc\",notes:\"abc\",archived:\"no\"},\r\n];\r\n\r\nexport const contracts_data = [\r\n    {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",\r\n    quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"},\r\n    {status:\"asd\",contractNo:\"asd\",startDate:\"20/10/2021\",endDate:\"30/11/2021\",buyer:\"asd\",destination:\"asd\",commodity:\"asd\",fulfilled:\"asd\",\r\n    quantity:\"asd\",grade:\"asd\",tolerence:\"asd\",notes:\"asd\"},\r\n];\r\nexport const total_data = [\r\n    {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n      {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n      {cultivar:\"abc\",capacity:\"34\",contents:\"44\",free:\"aabc\",contracted:\"abc\",delivered:\"abc\",remaining:\"abc\"},\r\n];\r\nexport const transfer_data = [\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"yes\", },\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"no\", },\r\n    {id:\"abc\",silos:\"asd\",dateTime:\"30/12/2020\",operators:\"asd\",cultivar:\"asd\",amount:\"asd\",traits:\"asd\",notes:\"asd\",archived:\"yes\", },\r\n];\r\nexport const bar_data={\r\n    labels:['Red','Blue','Yellow','Green','Purple','Orange'],\r\n    datasets: [{\r\n     label: 'new farm abc',\r\n     data: [4, 9, 3, 5, 2, 3],  \r\n     backgroundColor: [\r\n      'rgba(255, 99, 132, 0.2)',\r\n      'rgba(54, 162, 235, 0.2)',\r\n      'rgba(255, 206, 86, 0.2)',\r\n      'rgba(75, 192, 192, 0.2)',\r\n      'rgba(153, 102, 255, 0.2)',\r\n      'rgba(255, 159, 64, 0.2)'\r\n  ],\r\n  borderColor: [\r\n    'rgba(255, 99, 132, 1)',\r\n    'rgba(54, 162, 235, 1)',\r\n    'rgba(255, 206, 86, 1)',\r\n    'rgba(75, 192, 192, 1)',\r\n    'rgba(153, 102, 255, 1)',\r\n    'rgba(255, 159, 64, 1)'\r\n],\r\nborderWidth: 1 }]\r\n  } ;"]},"metadata":{},"sourceType":"module"}