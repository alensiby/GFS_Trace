{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Inventory\\\\GrainInventory\\\\Tables\\\\Silos.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Progress } from \"semantic-ui-react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { silos_data } from \"./Tabledatas\";\nimport Chart from \"./Chart\";\nimport \"../Grains.css\";\nimport \"./archived.css\";\nimport Export from \"./export.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Silos() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [data, setData] = React.useState(silos_data);\n  const columns = [{\n    title: \"Farm\",\n    field: \"farm\"\n  }, {\n    title: \"Silo\",\n    field: \"silo\"\n  }, {\n    title: \"Cultivar\",\n    field: \"cultivar\"\n  }, {\n    title: \"Contents\",\n    field: \"contents\"\n  }, {\n    title: \"Capacity\",\n    field: \"capacity\"\n  }, {\n    title: \"Contents\",\n    field: \"contents1\"\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }];\n  const columns_archived = [{\n    title: \"Farm\",\n    field: \"farm\"\n  }, {\n    title: \"Silo\",\n    field: \"silo\"\n  }, {\n    title: \"Cultivar\",\n    field: \"cultivar\"\n  }, {\n    title: \"Contents\",\n    field: \"contents\"\n  }, {\n    title: \"Capacity\",\n    field: \"capacity\"\n  }, {\n    title: \"Contents\",\n    field: \"contents1\"\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }, {\n    title: \"Archived\",\n    field: \"archived\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"SILOS\",\n      data: data,\n      columns: selected ? columns_archived : columns // columns={columns}\n      ,\n      detailPanel: rowData => {\n        return /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this);\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) // Edit: () => <CreateIcon color=\"action\" />,\n        // Delete: () => <DeleteIcon color=\"action\" />\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Silos, \"UULNslrdX/oHkVhhO3GAoliiKuw=\");\n\n_c = Silos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Silos\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Silos.js"],"names":["React","MaterialTable","MTableToolbar","Progress","Checkbox","silos_data","Chart","Export","Silos","selected","toggleselected","useState","data","setData","columns","title","field","columns_archived","rowData","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MaterialTable,{ MTableToolbar } from \"material-table\";\r\nimport { Progress } from \"semantic-ui-react\";\r\nimport {Checkbox} from \"semantic-ui-react\";\r\nimport {silos_data} from \"./Tabledatas\";\r\nimport Chart from \"./Chart\";\r\nimport \"../Grains.css\";\r\nimport \"./archived.css\";\r\nimport Export from \"./export.png\";\r\n\r\n\r\nexport default function Silos() {\r\n  const [selected, toggleselected] = React.useState(false);\r\nconst [data, setData] = React.useState(silos_data );\r\n  const columns = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",\r\n    },\r\n    {\r\n      title: \"Silo\",\r\n      field: \"silo\",\r\n    },\r\n    {\r\n      title: \"Cultivar\",\r\n      field: \"cultivar\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n    },\r\n\r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents1\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      field: \"status\",\r\n    },\r\n  ]\r\n  const columns_archived = [\r\n    {\r\n      title: \"Farm\",\r\n      field: \"farm\",\r\n    },\r\n    {\r\n      title: \"Silo\",\r\n      field: \"silo\",\r\n    },\r\n    {\r\n      title: \"Cultivar\",\r\n      field: \"cultivar\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents\",\r\n    },\r\n\r\n    {\r\n      title: \"Capacity\",\r\n      field: \"capacity\",\r\n    },\r\n    {\r\n      title: \"Contents\",\r\n      field: \"contents1\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      field: \"status\",\r\n    },\r\n    {\r\n      title: \"Archived\",\r\n      field: \"archived\",\r\n    },\r\n  ]\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"SILOS\"\r\n        data={data}\r\n        columns={selected ? columns_archived : columns}\r\n        // columns={columns}\r\n        detailPanel={(rowData) => {\r\n          return <Chart />;\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          paging: true,\r\n          pageSizeOptions: [2, 5, 10, 15, 20],\r\n          paginationType: \"stepped\",\r\n          showFirstLastPageButtons: false,\r\n          exportButton: true,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div className=\"toggle-switch\">\r\n                <Checkbox\r\n                  toggle\r\n                  onClick={() => toggleselected(!selected)}\r\n                  checked={selected}\r\n                  label=\"Show Archived\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        icons={{\r\n          Export: () => <img src={Export}></img>,\r\n          // Edit: () => <CreateIcon color=\"action\" />,\r\n          // Delete: () => <DeleteIcon color=\"action\" />\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}