{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\PaddockTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable, { MTableEditField } from 'material-table';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Menu } from '@material-ui/core';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Autocomplete, IconButton } from '@mui/material';\nimport Select from '@mui/material/Select';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst names = ['Defective Grain, ', 'Foreign Material, ', 'Heat Damage, ', 'Impurities, ', 'Moisture, ', 'Oil, ', 'Protein, ', 'Purity, ', 'Screenings, ', 'Test Weight, ', 'Total Damage, ', 'Unmillable Material, ', 'Vitreous Kernels, ', 'Grade, ', 'Retention, ', 'Scale Reading, ', 'Falling Numbers, '];\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function CultivarsTable() {\n  _s();\n\n  const [personName, setPersonName] = React.useState([]);\n  const [grain, setgrain] = React.useState([]);\n\n  const handleChange = (event, index) => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (event, index, rowData) => {\n    setAnchorEl(null);\n    rowData.weight = grains[index].kilo + \"kg/hl\";\n    console.log(rowData.tableData.id);\n  };\n\n  const grains = [{\n    id: 1,\n    title: \"Barley(62 kg/hl)\",\n    kilo: 62\n  }, {\n    id: 2,\n    title: \"Canary Seed(70 kg/hl)\",\n    kilo: 70\n  }, {\n    id: 3,\n    title: \"Canola(70 kg/hl)\",\n    kilo: 70\n  }, {\n    id: 4,\n    title: \"Cereal Rye(71 kg/hl)\",\n    kilo: 71\n  }, {\n    id: 5,\n    title: \"Chickpea(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 6,\n    title: \"Cowpea(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 7,\n    title: \"Faba Bean(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 8,\n    title: \"Field Pea(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 9,\n    title: \"Grain Sorghum(72 kg/hl)\",\n    kilo: 72\n  }, {\n    id: 10,\n    title: \"Linseed(72 kg/hl)\",\n    kilo: 72\n  }, {\n    id: 11,\n    title: \"Lupin(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 12,\n    title: \"Maize(72 kg/hl)\",\n    kilo: 72\n  }, {\n    id: 13,\n    title: \"Millet(62 kg/hl)\",\n    kilo: 62\n  }, {\n    id: 14,\n    title: \"Mungbean(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 15,\n    title: \"Navy Bean(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 16,\n    title: \"Oats(45 kg/hl)\",\n    kilo: 45\n  }, {\n    id: 17,\n    title: \"Pigeon Pea(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 18,\n    title: \"Rice(56 kg/hl)\",\n    kilo: 56\n  }, {\n    id: 19,\n    title: \"Safflower(53 kg/hl)\",\n    kilo: 53\n  }, {\n    id: 20,\n    title: \"Soybean(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 21,\n    title: \"Sunflower(40 kg/hl)\",\n    kilo: 40\n  }, {\n    id: 22,\n    title: \"Triticale(65 kg/hl)\",\n    kilo: 65\n  }, {\n    id: 23,\n    title: \"Vetch(75 kg/hl)\",\n    kilo: 75\n  }, {\n    id: 24,\n    title: \"Wheat(75 kg/hl)\",\n    kilo: 75\n  }];\n  const [data, setData] = React.useState([{\n    name: 'Wheat',\n    weight: '23kg/hl',\n    Varieties: ['abc'],\n    Traits: grain\n  }, {\n    name: 'Barley',\n    weight: '50kg/hl',\n    Varieties: ['dfg'],\n    Traits: grain\n  }, {\n    name: 'Canary Seed',\n    weight: '400kg/hl',\n    Varieties: ['hij'],\n    Traits: grain\n  }, {\n    name: 'Faba Bean',\n    weight: '100kg/hl',\n    Varieties: ['abc'],\n    Traits: grain\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Grain Weight',\n    field: 'weight'\n  }, {\n    title: \"Preset Grain Weights\",\n    field: \"internal_action\",\n    sorting: false,\n    editable: false,\n    render: rowData => rowData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"primary\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"PRESETS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: anchorEl,\n        open: open,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Preset Grain Weights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), grains.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.id,\n          onClick: event => handleMenuItemClick(event, index, rowData),\n          children: item.title\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Varieties',\n    field: 'Varieties',\n    sorting: false\n  }, {\n    title: 'Traits',\n    field: 'Traits',\n    sorting: false,\n    editComponent: props => (console.log(props.rowData.Traits[0]), /*#__PURE__*/_jsxDEV(Select, {\n      type: \"text\",\n      variant: \"standard\",\n      multiple: true,\n      value: props.value,\n      onChange: e => props.onChange(e.target.value),\n      children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: name,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: props.value.indexOf(name) > -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)) // render: (rowData) =>\n    // rowData && (\n    //   <div>\n    //     <Select\n    //         labelId=\"demo-multiple-checkbox-label\"\n    //         id=\"demo-multiple-checkbox\"\n    //         multiple\n    //         variant=\"standard\"\n    //         value={personName}\n    //         onChange={(e)=>(handleChange(e,rowData.tableData.index))}\n    //         // input={<OutlinedInput label=\"Tag\" />}\n    //         renderValue={(selected) => selected.join(', ')}\n    //         MenuProps={MenuProps}\n    //       >\n    //         {names.map((name) => (\n    //           <MenuItem key={name} value={name}>\n    //             <Checkbox checked={personName.indexOf(name) > -1} />\n    //             <ListItemText primary={name} />\n    //           </MenuItem>\n    //         ))}\n    //       </Select>\n    //   </div>\n    //     )\n\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Cultivars\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 23\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CultivarsTable, \"MmF/3yCDJ1KXRhu6fkKnxNhzrZQ=\");\n\n_c = CultivarsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CultivarsTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/PaddockTable.js"],"names":["React","MaterialTable","MTableEditField","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","Menu","CreateIcon","DeleteIcon","Autocomplete","IconButton","Select","ListItemText","Checkbox","AddCircleRoundedIcon","names","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","CultivarsTable","personName","setPersonName","useState","grain","setgrain","handleChange","event","index","target","value","split","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","handleClose","handleMenuItemClick","rowData","weight","grains","kilo","console","log","tableData","id","title","data","setData","name","Varieties","Traits","columns","field","sorting","editable","render","vertical","horizontal","map","item","editComponent","props","e","onChange","indexOf","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","onRowDelete","dataDelete","splice","actionsColumnIndex","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable, { MTableEditField } from 'material-table';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Menu } from '@material-ui/core';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Autocomplete, IconButton } from '@mui/material';\r\nimport Select from '@mui/material/Select';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\n\r\n\r\nconst names = [\r\n  'Defective Grain, ',\r\n  'Foreign Material, ',\r\n  'Heat Damage, ',\r\n  'Impurities, ',\r\n  'Moisture, ',\r\n  'Oil, ',\r\n  'Protein, ',\r\n  'Purity, ',\r\n  'Screenings, ',\r\n  'Test Weight, ',\r\n  'Total Damage, ',\r\n  'Unmillable Material, ',\r\n  'Vitreous Kernels, ',\r\n  'Grade, ',\r\n  'Retention, ',\r\n  'Scale Reading, ',\r\n  'Falling Numbers, '\r\n];\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CultivarsTable() {\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const [grain, setgrain] = React.useState([]);\r\n  const handleChange = (event, index) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const handleMenuItemClick = (event, index, rowData) => {\r\n    setAnchorEl(null);\r\n    rowData.weight = grains[index].kilo + \"kg/hl\"\r\n    console.log(rowData.tableData.id)\r\n\r\n  };\r\n\r\n  const grains = [\r\n    { id: 1, title: \"Barley(62 kg/hl)\", kilo: 62 },\r\n    { id: 2, title: \"Canary Seed(70 kg/hl)\", kilo: 70 },\r\n    { id: 3, title: \"Canola(70 kg/hl)\", kilo: 70 },\r\n    { id: 4, title: \"Cereal Rye(71 kg/hl)\", kilo: 71 },\r\n    { id: 5, title: \"Chickpea(75 kg/hl)\", kilo: 75 },\r\n    { id: 6, title: \"Cowpea(75 kg/hl)\", kilo: 75 },\r\n    { id: 7, title: \"Faba Bean(75 kg/hl)\", kilo: 75 },\r\n    { id: 8, title: \"Field Pea(75 kg/hl)\", kilo: 75 },\r\n    { id: 9, title: \"Grain Sorghum(72 kg/hl)\", kilo: 72 },\r\n    { id: 10, title: \"Linseed(72 kg/hl)\", kilo: 72 },\r\n    { id: 11, title: \"Lupin(75 kg/hl)\", kilo: 75 },\r\n    { id: 12, title: \"Maize(72 kg/hl)\", kilo: 72 },\r\n    { id: 13, title: \"Millet(62 kg/hl)\", kilo: 62 },\r\n    { id: 14, title: \"Mungbean(75 kg/hl)\", kilo: 75 },\r\n    { id: 15, title: \"Navy Bean(75 kg/hl)\", kilo: 75 },\r\n    { id: 16, title: \"Oats(45 kg/hl)\", kilo: 45 },\r\n    { id: 17, title: \"Pigeon Pea(75 kg/hl)\", kilo: 75 },\r\n    { id: 18, title: \"Rice(56 kg/hl)\", kilo: 56 },\r\n    { id: 19, title: \"Safflower(53 kg/hl)\", kilo: 53 },\r\n    { id: 20, title: \"Soybean(75 kg/hl)\", kilo: 75 },\r\n    { id: 21, title: \"Sunflower(40 kg/hl)\", kilo: 40 },\r\n    { id: 22, title: \"Triticale(65 kg/hl)\", kilo: 65 },\r\n    { id: 23, title: \"Vetch(75 kg/hl)\", kilo: 75 },\r\n    { id: 24, title: \"Wheat(75 kg/hl)\", kilo: 75 }\r\n  ];\r\n  const [data, setData] = React.useState([\r\n    { name: 'Wheat', weight: '23kg/hl', Varieties: ['abc'],Traits:grain},\r\n    { name: 'Barley', weight: '50kg/hl', Varieties: ['dfg'], Traits:grain},\r\n    { name: 'Canary Seed', weight: '400kg/hl', Varieties: ['hij'], Traits:grain},\r\n    { name: 'Faba Bean', weight: '100kg/hl', Varieties: ['abc'],Traits:grain }\r\n  ])\r\n  const columns = [{\r\n    title: 'Name', field: 'name',\r\n  },\r\n  {\r\n    title: 'Grain Weight', field: 'weight'\r\n  },\r\n  {\r\n    title: \"Preset Grain Weights\",\r\n    field: \"internal_action\",\r\n    sorting: false,\r\n    editable: false,\r\n    render: (rowData) =>\r\n      rowData && (\r\n        <div>\r\n          <Button variant=\"text\" color=\"primary\" onClick={handleClick}><b>PRESETS</b></Button>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n          >\r\n            <DialogTitle>Preset Grain Weights</DialogTitle>\r\n            {\r\n              grains.map(\r\n                (item, index) => (<MenuItem key={item.id} value={item.id} onClick={(event) => handleMenuItemClick(event, index, rowData)}>{item.title}</MenuItem>)\r\n              )\r\n            }\r\n          </Menu>\r\n        </div>\r\n      )\r\n  },\r\n  {\r\n    title: 'Varieties', field: 'Varieties', sorting: false,\r\n  },\r\n  {\r\n    title: 'Traits', field: 'Traits', sorting: false,\r\n    editComponent: props => (\r\n      console.log(props.rowData.Traits[0]),\r\n      <Select\r\n        type=\"text\"\r\n        variant=\"standard\"\r\n        multiple\r\n        value={props.value}\r\n        onChange={e =>props.onChange(e.target.value)}\r\n      >\r\n    {\r\n    names.map((name) => (\r\n      <MenuItem key={name} value={name}>\r\n        <Checkbox checked={props.value.indexOf(name) > -1} />\r\n        <ListItemText primary={name} />\r\n      </MenuItem>\r\n    ))\r\n  }\r\n  </Select>\r\n  )\r\n  // render: (rowData) =>\r\n  // rowData && (\r\n  //   <div>\r\n  //     <Select\r\n  //         labelId=\"demo-multiple-checkbox-label\"\r\n  //         id=\"demo-multiple-checkbox\"\r\n  //         multiple\r\n  //         variant=\"standard\"\r\n  //         value={personName}\r\n  //         onChange={(e)=>(handleChange(e,rowData.tableData.index))}\r\n  //         // input={<OutlinedInput label=\"Tag\" />}\r\n  //         renderValue={(selected) => selected.join(', ')}\r\n  //         MenuProps={MenuProps}\r\n  //       >\r\n  //         {names.map((name) => (\r\n  //           <MenuItem key={name} value={name}>\r\n  //             <Checkbox checked={personName.indexOf(name) > -1} />\r\n  //             <ListItemText primary={name} />\r\n  //           </MenuItem>\r\n  //         ))}\r\n  //       </Select>\r\n  //   </div>\r\n  //     )\r\n}]\r\nreturn (\r\n  <div>\r\n    <MaterialTable title=\"Cultivars\"\r\n      data={data}\r\n      columns={columns}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n\r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1\r\n      }}\r\n      icons={{Add:()=><AddCircleRoundedIcon fontSize=\"large\" color=\"primary\"/>,\r\n      Edit: () => <CreateIcon color=\"action\" />,\r\n      Delete: () => <DeleteIcon color=\"action\" />}}\r\n    />\r\n  </div>\r\n)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}