{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\Spraylogs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport '../../Pages.css';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { Icon } from 'semantic-ui-react';\nimport { spraylogsData_withoutcomplete, spraylogsData_withcomplete } from \"../../../../Data/SpraylogsData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Spraylogs() {\n  _s();\n\n  const [selected, toggleselected] = useState(false);\n  const columns = [{\n    title: \"Status\",\n    field: \"status\",\n    lookup: {\n      '0': 'Raised',\n      '1': 'Raised and Assigned',\n      '2': 'In Progress',\n      '3': 'On Hold',\n      '4': 'Completed'\n    },\n    render: rowData => {\n      switch (rowData.status) {\n        case '0':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle outline\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 24\n          }, this);\n\n        case '4':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"green circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }, this);\n\n        case '1':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"blue circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }, this);\n\n        case '3':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"red circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this);\n\n        case '2':\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"orange circle\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 23\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    }\n  }, {\n    title: \"Contract\",\n    field: \"contract\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Approved\",\n    field: \"approved\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Description\",\n    field: \"description\"\n  }, {\n    title: \"Due Date\",\n    field: \"duedate\",\n    type: \"date\",\n    filtering: false\n  }, {\n    title: \"Started\",\n    field: \"started\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }, {\n    title: \"Completed\",\n    field: \"completed\",\n    lookup: {\n      'no': 'No',\n      'yes': 'Yes'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          \"color\": \"black\",\n          \"margin-bottom\": \"0px\"\n        },\n        children: \"Spraylogs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          toggle: true,\n          onClick: () => toggleselected(!selected),\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completed\",\n        children: \"Show Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-table\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: selected ? spraylogsData_withcomplete : spraylogsData_withoutcomplete,\n        editable: {\n          onRowUpdate: (newRow, oldRow) => new Promise(() => {}),\n          onRowDelete: selectedRow => new Promise(() => {})\n        },\n        options: {\n          showTitle: false,\n          paging: true,\n          pageSizeOptions: [2, 5, 10, 15, 20],\n          paginationType: \"stepped\",\n          showFirstLastPageButtons: false,\n          filtering: true,\n          actionsColumnIndex: -1\n        },\n        icons: {\n          Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Spraylogs, \"q1o5h6biy4TndqfKre+X3qAmKN4=\");\n\n_c = Spraylogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spraylogs\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/Spraylogs.js"],"names":["React","useState","MaterialTable","Checkbox","CreateIcon","Icon","spraylogsData_withoutcomplete","spraylogsData_withcomplete","Spraylogs","selected","toggleselected","columns","title","field","lookup","render","rowData","status","type","filtering","onRowUpdate","newRow","oldRow","Promise","onRowDelete","selectedRow","showTitle","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","actionsColumnIndex","Edit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport '../../Pages.css';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {\r\n    spraylogsData_withoutcomplete,\r\n    spraylogsData_withcomplete,\r\n} from \"../../../../Data/SpraylogsData\";\r\n\r\nexport default function Spraylogs() {\r\n  const [selected, toggleselected] = useState(false);\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"Status\",\r\n      field: \"status\",\r\n     \r\n     \r\n      lookup: { '0': 'Raised',\r\n      '1': 'Raised and Assigned',\r\n      '2': 'In Progress',\r\n      '3': 'On Hold',\r\n      '4': 'Completed',\r\n      } ,\r\n      render: rowData => {\r\n        switch (rowData.status) {\r\n        case '0':\r\n                return <Icon name='blue circle outline' size='large'/>\r\n        case '4':\r\n                return <Icon name='green circle' size='large'/>\r\n        case '1':\r\n                return <Icon name='blue circle'size='large'/>\r\n        case '3':\r\n               return <Icon name='red circle'size='large'/>\r\n        case '2':\r\n               return <Icon name='orange circle'size='large'/>\r\n      default:\r\n        return <></>\r\n          }\r\n        }\r\n\r\n  \r\n},\r\n    \r\n{ title: \"Contract\", field: \"contract\",  \r\nlookup: { 'no': 'No',\r\n'yes': 'Yes'}\r\n},\r\n    \r\n    { title: \"Approved\", field: \"approved\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'}\r\n   },\r\n    { title: \"Description\", field: \"description\" },\r\n    { title: \"Due Date\", field: \"duedate\", type:\"date\", filtering: false },\r\n    { title: \"Started\", field: \"started\",lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    { title: \"Completed\", field: \"completed\", lookup: { 'no': 'No',\r\n    'yes': 'Yes'} },\r\n    \r\n  ];\r\n \r\n  return (\r\n    <div  className= \"table-size\">\r\n    \r\n    <div className= \"subheader\">\r\n             \r\n        <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Spraylogs </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      \r\n        <div className=\"toggle-switch\">\r\n          <Checkbox\r\n            toggle\r\n            onClick={() => toggleselected(!selected)}\r\n            checked={selected}\r\n          />\r\n        </div>\r\n        <div className=\"completed\">Show Completed</div>\r\n      </div>\r\n\r\n      <div className=\"equipment-table\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={selected ? spraylogsData_withcomplete : spraylogsData_withoutcomplete}\r\n          editable={{\r\n            \r\n            onRowUpdate:(newRow,oldRow)=> new Promise(()=>{}),\r\n            onRowDelete:(selectedRow)=> new Promise(()=>{})\r\n          }}\r\n          options={{\r\n            showTitle: false,\r\n            paging: true,\r\n            pageSizeOptions: [2, 5, 10, 15, 20],\r\n            paginationType: \"stepped\",\r\n            showFirstLastPageButtons: false,\r\n            filtering: true,\r\n            actionsColumnIndex:-1\r\n          }}\r\n          icons={{\r\n          \r\n            \r\n            Edit: () => <CreateIcon color=\"action\" />,\r\n           \r\n          }}\r\n        ></MaterialTable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}