{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\PaddockTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\nimport { DialogTitle } from '@mui/material';\nimport Icon from '@mui/material/Icon';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaddockTable() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    setOpen(false);\n  };\n\n  const [data, setData] = React.useState([{\n    name: 'Linta Paddock',\n    weight: '23kg/hl',\n    Varieties: 'abc',\n    Traits: 'Defective Grains, Foreign Material'\n  }, {\n    name: 'Barley',\n    weight: '50kg/hl',\n    Varieties: 'dfg',\n    Traits: 'Defective Grains,Oil, Purity'\n  }, {\n    name: 'Canary Seed',\n    weight: '400kg/hl',\n    Varieties: 'hij',\n    Traits: 'Heat Damage, Impurities'\n  }, {\n    name: 'Faba Bean',\n    weight: '100kg/hl',\n    Varieties: 'abc',\n    Traits: 'Defective Grains, Heat Damage'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Grain Weight',\n    field: 'weight'\n  }, {\n    title: 'Varieties',\n    field: 'Varieties'\n  }, {\n    title: 'Traits',\n    field: 'Traits'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Paddocks\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      actions: [{\n        icon: () => /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontSize: 40\n          },\n          color: \"info\",\n          children: \"add_circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this),\n        isFreeAction: true,\n        onClick: event => setOpen(true)\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontSize: 22\n          },\n          color: \"action\",\n          children: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }, this),\n        tooltip: 'Save User',\n        onClick: (event, rowData) => setOpen(true)\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontSize: 22\n          },\n          color: \"action\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this),\n        tooltip: 'Delete User',\n        onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\n      }],\n      options: {\n        actionsColumnIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaddockTable, \"Q31ZY62zonuGrKHzWk3YoTyIBuA=\");\n\n_c = PaddockTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaddockTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/PaddockTable.js"],"names":["React","MaterialTable","Button","Dialog","DialogActions","DialogContent","DialogTitle","Icon","CreateIcon","DeleteIcon","PaddockTable","open","setOpen","useState","handleClickOpen","handleClose","event","reason","data","setData","name","weight","Varieties","Traits","columns","title","field","onRowDelete","oldData","Promise","resolve","reject","setTimeout","dataDelete","index","tableData","id","splice","icon","fontSize","isFreeAction","onClick","tooltip","rowData","alert","actionsColumnIndex"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\nimport { DialogTitle } from '@mui/material';\r\n\r\nimport Icon from '@mui/material/Icon';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function PaddockTable() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const [data, setData] = React.useState([\r\n        { name: 'Linta Paddock', weight: '23kg/hl', Varieties: 'abc', Traits: 'Defective Grains, Foreign Material' },\r\n        { name: 'Barley', weight: '50kg/hl', Varieties: 'dfg', Traits: 'Defective Grains,Oil, Purity' },\r\n        { name: 'Canary Seed', weight: '400kg/hl', Varieties: 'hij', Traits: 'Heat Damage, Impurities' },\r\n        { name: 'Faba Bean', weight: '100kg/hl', Varieties: 'abc', Traits: 'Defective Grains, Heat Damage' }\r\n    ])\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Grain Weight', field: 'weight'\r\n    }, {\r\n        title: 'Varieties', field: 'Varieties'\r\n    }, {\r\n        title: 'Traits', field: 'Traits'\r\n    }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Paddocks\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                    onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                const dataDelete = [...data];\r\n                                const index = oldData.tableData.id;\r\n                                dataDelete.splice(index, 1);\r\n                                setData([...dataDelete]);\r\n                                resolve()\r\n                            }, 1000)\r\n                        }),\r\n                }}\r\n                actions={[\r\n                    {\r\n                        icon: () => <Icon sx={{ fontSize: 40 }} color=\"info\">add_circle</Icon>,\r\n                        isFreeAction: true,\r\n                        onClick: (event) => setOpen(true)\r\n                    },\r\n                    {\r\n                        icon: () => <Icon sx={{ fontSize: 22 }} color=\"action\"><CreateIcon /></Icon>,\r\n                        tooltip: 'Save User',\r\n                        onClick: (event, rowData) => setOpen(true)\r\n                    },\r\n                      {\r\n                        icon:() => <Icon sx={{ fontSize: 22 }} color=\"action\"><DeleteIcon/></Icon>,\r\n                         tooltip: 'Delete User',\r\n                         onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\r\n                       }\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            /> {/*--------------------------------------------Completed jobs popup---------------------\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>New Item</DialogTitle>\r\n                <DialogContent>\r\n                    <Cultivarsmain />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>-*/}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}