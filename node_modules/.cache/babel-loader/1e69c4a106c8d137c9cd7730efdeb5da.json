{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\PaddockTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\nimport { DialogTitle } from '@mui/material';\nimport Icon from '@mui/material/Icon';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaddockTable() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    setOpen(false);\n  };\n\n  const [data, setData] = React.useState([{\n    name: 'Linta Paddock',\n    size: '23ac',\n    cultivar: 'abc',\n    rotation: 'NR',\n    year: '2017'\n  }, {\n    name: 'K2K Paddock',\n    size: '50ac',\n    cultivar: 'dfg',\n    rotation: 'DC',\n    year: '2019'\n  }, {\n    name: 'Harry Woods Paddock',\n    size: '40ac',\n    cultivar: 'hij',\n    rotation: 'LF',\n    year: '2020'\n  }, {\n    name: 'Peter Dein Co.',\n    size: '10ac',\n    cultivar: 'abc',\n    rotation: 'SF',\n    year: '2019'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Size',\n    field: 'size'\n  }, {\n    title: 'Cultivar',\n    field: 'cultivar'\n  }, {\n    title: 'Rotation',\n    field: 'rotation',\n    lookup: {\n      'D': 'Dryland',\n      'NR': 'Normal Rotation',\n      'DC': 'Double Crop',\n      'LF': 'Long Fallow',\n      'SF': 'Short Fallow',\n      'I': 'Irrigated',\n      'SI': 'Semi-irrigated',\n      'D': 'Dryland',\n      'AP': 'After Pulse'\n    }\n  }, {\n    title: 'Year',\n    field: 'year'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Paddocks\",\n      data: data,\n      columns: columns,\n      editable: {\n        /*onRowDelete: oldData =>\r\n             new Promise((resolve, reject) => {\r\n                 setTimeout(() => {\r\n                     const dataDelete = [...data];\r\n                     const index = oldData.tableData.id;\r\n                     dataDelete.splice(index, 1);\r\n                     setData([...dataDelete]);\r\n                     resolve()\r\n                 }, 1000)\r\n             }),*/\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        filtering: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaddockTable, \"NlpWy43NFs60F0ewUYI37VyeyVw=\");\n\n_c = PaddockTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaddockTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/PaddockTable.js"],"names":["React","MaterialTable","Button","Dialog","DialogActions","DialogContent","DialogTitle","Icon","CreateIcon","DeleteIcon","PaddockTable","open","setOpen","useState","handleClickOpen","handleClose","event","reason","data","setData","name","size","cultivar","rotation","year","columns","title","field","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","filtering"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\nimport { DialogTitle } from '@mui/material';\r\n\r\nimport Icon from '@mui/material/Icon';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function PaddockTable() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const [data, setData] = React.useState([\r\n        { name: 'Linta Paddock', size: '23ac', cultivar: 'abc', rotation: 'NR', year: '2017' },\r\n        { name: 'K2K Paddock', size: '50ac', cultivar: 'dfg', rotation: 'DC', year: '2019' },\r\n        { name: 'Harry Woods Paddock', size: '40ac', cultivar: 'hij', rotation: 'LF', year: '2020' },\r\n        { name: 'Peter Dein Co.', size: '10ac', cultivar: 'abc', rotation: 'SF', year: '2019' }\r\n         ])\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Size', field: 'size'\r\n    }, {\r\n        title: 'Cultivar', field: 'cultivar'\r\n    }, {\r\n        title: 'Rotation', field: 'rotation',\r\n        lookup: {'D': 'Dryland' ,'NR': 'Normal Rotation', 'DC': 'Double Crop', 'LF': 'Long Fallow', \r\n        'SF': 'Short Fallow', 'I': 'Irrigated', 'SI': 'Semi-irrigated', 'D': 'Dryland', 'AP': 'After Pulse' },\r\n    }, {\r\n        title: 'Year', field: 'year'\r\n    }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Paddocks\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                   /*onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                const dataDelete = [...data];\r\n                                const index = oldData.tableData.id;\r\n                                dataDelete.splice(index, 1);\r\n                                setData([...dataDelete]);\r\n                                resolve()\r\n                            }, 1000)\r\n                        }),*/\r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true\r\n                }}\r\n            /> {/*--------------------------------------------Completed jobs popup---------------------\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>New Item</DialogTitle>\r\n                <DialogContent>\r\n                    <Cultivarsmain />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>-*/}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}