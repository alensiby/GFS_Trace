{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Inventory\\\\Water\\\\Tables\\\\Ingoing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Export from '../../../export.png';\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\nimport { Checkbox } from \"semantic-ui-react\";\nimport './archived.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingoing() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [data, setData] = React.useState(ingoing_data);\n  const columns = [{\n    title: 'Water Storage',\n    field: 'water_storage'\n  }, {\n    title: 'Date/Time',\n    field: 'date'\n  }, {\n    title: 'Operator',\n    field: 'operator'\n  }, {\n    title: 'Amount',\n    field: 'amount'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }];\n  const columns_archived = [{\n    title: 'Water Storage',\n    field: 'water_storage'\n  }, {\n    title: 'Date/Time',\n    field: 'date'\n  }, {\n    title: 'Operator',\n    field: 'operator'\n  }, {\n    title: 'Amount',\n    field: 'amount'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }, {\n    title: \"Archived\",\n    field: \"archived\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"INGOING\",\n      data: data,\n      columns: selected ? columns_archived : columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {}),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            style: {\n              padding: '0px 20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 35\n        }, this),\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 34\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 35\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ingoing, \"r6JJD54gUN6hiR6OEXC4C7zrYD0=\");\n\n_c = Ingoing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingoing\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Inventory/Water/Tables/Ingoing.js"],"names":["React","MaterialTable","MTableToolbar","CreateIcon","AddCircleRoundedIcon","DeleteIcon","Export","ingoing_data","Checkbox","Ingoing","selected","toggleselected","useState","data","setData","columns","title","field","columns_archived","onRowAdd","newRow","Promise","resolve","reject","onRowUpdate","newData","oldData","setTimeout","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","padding","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable,{ MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport Export from '../../../export.png';\r\nimport { ingoing_data } from '../../../../../Data/InventoryWaterData';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport './archived.css';\r\nexport default function Ingoing() {\r\n  const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Water Storage', field: 'water_storage'\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'date',\r\n    }, {\r\n        title: 'Operator', field: 'operator',\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',\r\n    }]\r\n    const columns_archived = [{\r\n      title: 'Water Storage', field: 'water_storage'\r\n  },\r\n  {\r\n      title: 'Date/Time', field: 'date',\r\n  }, {\r\n      title: 'Operator', field: 'operator',\r\n  },\r\n  {\r\n      title: 'Amount', field: 'amount',\r\n  },\r\n  {\r\n    title: 'Notes', field: 'notes',\r\n},\r\n \r\n  {\r\n    title: \"Archived\",\r\n    field: \"archived\",\r\n  },]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd:(newRow)=> new Promise((resolve,reject)=>{}),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div className=\"toggle-switch\" style={{padding: '0px 20px'}}>\r\n                        <Checkbox\r\n                          toggle\r\n                          onClick={() => toggleselected(!selected)}\r\n                          checked={selected}\r\n                          label=\"Show Archived\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    \r\n                      Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                      Edit: () => <CreateIcon color=\"action\" />,\r\n                      Delete: () => <DeleteIcon color=\"action\" />\r\n                     \r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}