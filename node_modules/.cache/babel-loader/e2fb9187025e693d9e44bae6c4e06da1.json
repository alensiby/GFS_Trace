{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\FueltankTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FueltankTable() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = React.useState([{\n    name: 'SR Fuel Tank',\n    capacity: '23',\n    unit: 'L',\n    type: 'diesel'\n  }, {\n    name: 'NewSon Fuel Tank',\n    capacity: '50',\n    unit: 'L',\n    type: 'avaition'\n  }, {\n    name: 'Queen Tank',\n    capacity: '40',\n    unit: 'gal',\n    type: 'unleaded'\n  }, {\n    name: 'Anns Tank',\n    capacity: '10',\n    unit: 'gal',\n    type: 'adblue'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity'\n  }, {\n    title: 'Unit',\n    field: 'unit',\n    lookup: {\n      'L': 'Litres',\n      'gal': 'Gallons'\n    }\n  }, {\n    title: 'Type',\n    field: 'type',\n    lookup: {\n      'avaition': 'Avaition',\n      'unleaded': 'Unleaded',\n      'adblue': 'AdBlue',\n      'diesel': 'Diesel'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Fuel Tanks\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        filtering: true,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 30\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 31\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FueltankTable, \"doVbAj+nTE5WIhoPZpWExlbUvP0=\");\n\n_c = FueltankTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FueltankTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/FueltankTable.js"],"names":["React","MaterialTable","FueltankTable","open","setOpen","useState","data","setData","name","capacity","unit","type","columns","title","field","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","filtering","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nexport default function FueltankTable() {\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n\r\n    const [data, setData] = React.useState([\r\n        { name: 'SR Fuel Tank', capacity: '23', unit:'L', type: 'diesel' },\r\n        { name: 'NewSon Fuel Tank', capacity: '50', unit:'L', type: 'avaition' },\r\n        { name: 'Queen Tank', capacity: '40', unit:'gal', type: 'unleaded' },\r\n        { name: 'Anns Tank', capacity: '10', unit:'gal', type: 'adblue' }\r\n         ])\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Capacity', field: 'capacity'\r\n    },\r\n    {\r\n        title: 'Unit', field: 'unit',\r\n        lookup: { 'L': 'Litres', 'gal': 'Gallons'},\r\n    }, {\r\n        title: 'Type', field: 'type', \r\n        lookup: { 'avaition': 'Avaition', 'unleaded': 'Unleaded', 'adblue':'AdBlue', 'diesel':'Diesel' },\r\n    }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Fuel Tanks\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                \r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n          \r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                }}\r\n                icons={{\r\n                 \r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}