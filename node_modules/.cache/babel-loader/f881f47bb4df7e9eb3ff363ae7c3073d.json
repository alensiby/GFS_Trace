{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Ingoing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ingoing_data } from './Tabledatas';\nimport { Checkbox } from \"semantic-ui-react\";\nimport Export from './export.png';\nimport { DisabledByDefault } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingoing() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [data, setData] = React.useState(ingoing_data);\n  const columns = [{\n    title: 'ID',\n    field: 'id',\n    filtering: false\n  }, {\n    title: 'Silos',\n    field: 'silos'\n  }, {\n    title: 'Date/Time',\n    field: 'dateTime',\n    filtering: false\n  }, {\n    title: 'Operators',\n    field: 'operators',\n    filtering: false\n  }, {\n    title: 'Cultivar',\n    field: 'cultivar',\n    filtering: false\n  }, {\n    title: 'Transport',\n    field: 'transport',\n    filtering: false\n  }, {\n    title: 'Driver',\n    field: 'driver',\n    filtering: false\n  }, {\n    title: 'Rego',\n    field: 'rego',\n    filtering: false\n  }, {\n    title: 'Tare Weight',\n    field: 'tareWeight',\n    filtering: false\n  }, {\n    title: 'Gross Weight',\n    field: 'grossWeight',\n    filtering: false\n  }, {\n    title: 'Amount',\n    field: 'amount',\n    filtering: false\n  }, {\n    title: 'Paddocks',\n    field: 'paddocks',\n    filtering: false\n  }, {\n    title: 'Traits',\n    field: 'traits',\n    filtering: false\n  }, {\n    title: 'Notes',\n    field: 'notes',\n    filtering: false\n  }];\n  const columns_archived = [{\n    title: 'ID',\n    field: 'id',\n    filtering: false\n  }, {\n    title: 'Silos',\n    field: 'silos'\n  }, {\n    title: 'Date/Time',\n    field: 'dateTime',\n    filtering: false\n  }, {\n    title: 'Operators',\n    field: 'operators',\n    filtering: false\n  }, {\n    title: 'Cultivar',\n    field: 'cultivar',\n    filtering: false\n  }, {\n    title: 'Transport',\n    field: 'transport',\n    filtering: false\n  }, {\n    title: 'Driver',\n    field: 'driver',\n    filtering: false\n  }, {\n    title: 'Rego',\n    field: 'rego',\n    filtering: false\n  }, {\n    title: 'Tare Weight',\n    field: 'tareWeight',\n    filtering: false\n  }, {\n    title: 'Gross Weight',\n    field: 'grossWeight',\n    filtering: false\n  }, {\n    title: 'Amount',\n    field: 'amount',\n    filtering: false\n  }, {\n    title: 'Paddocks',\n    field: 'paddocks',\n    filtering: false\n  }, {\n    title: 'Traits',\n    field: 'traits',\n    filtering: false\n  }, {\n    title: 'Notes',\n    field: 'notes',\n    filtering: false\n  }, {\n    title: 'Archived',\n    field: 'archived',\n    filtering: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"INGOING\",\n      data: data,\n      columns: selected ? columns_archived : columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          setData([...data, newRow]);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true,\n        filtering: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 23\n        }, this)\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }, this),\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 35\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 35\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ingoing, \"r6JJD54gUN6hiR6OEXC4C7zrYD0=\");\n\n_c = Ingoing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingoing\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/GrainInventory/Tables/Ingoing.js"],"names":["React","MaterialTable","MTableToolbar","CreateIcon","AddCircleRoundedIcon","DeleteIcon","ingoing_data","Checkbox","Export","DisabledByDefault","Ingoing","selected","toggleselected","useState","data","setData","columns","title","field","filtering","columns_archived","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","newData","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ingoing_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport Export from './export.png';\r\nimport { DisabledByDefault } from '@mui/icons-material';\r\nexport default function Ingoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'ID', field: 'id',filtering:false,\r\n    },\r\n    {\r\n        title: 'Silos', field: 'silos',\r\n    },\r\n    {\r\n        title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, {\r\n        title: 'Operators', field: 'operators',filtering:false,\r\n    },\r\n    {\r\n        title: 'Cultivar', field: 'cultivar',filtering:false,\r\n    },\r\n    {\r\n        title: 'Transport', field: 'transport',filtering:false,\r\n    },\r\n    {\r\n        title: 'Driver', field: 'driver',filtering:false,\r\n    },\r\n    {\r\n        title: 'Rego', field: 'rego',filtering:false,\r\n    },\r\n    {\r\n        title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n    },\r\n    {\r\n        title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',filtering:false,\r\n    },\r\n    {\r\n        title: 'Paddocks', field: 'paddocks',filtering:false,\r\n    },\r\n    {\r\n        title: 'Traits', field: 'traits',filtering:false,\r\n    },\r\n    {\r\n        title: 'Notes', field: 'notes',filtering:false,\r\n    },\r\n    \r\n    \r\n  ]\r\n  const columns_archived = [{\r\n    title: 'ID', field: 'id',filtering:false,\r\n},\r\n{\r\n    title: 'Silos', field: 'silos',\r\n},\r\n{\r\n    title: 'Date/Time', field: 'dateTime',filtering:false,\r\n}, {\r\n    title: 'Operators', field: 'operators',filtering:false,\r\n},\r\n{\r\n    title: 'Cultivar', field: 'cultivar',filtering:false,\r\n},\r\n{\r\n    title: 'Transport', field: 'transport',filtering:false,\r\n},\r\n{\r\n    title: 'Driver', field: 'driver',filtering:false,\r\n},\r\n{\r\n    title: 'Rego', field: 'rego',filtering:false,\r\n},\r\n{\r\n    title: 'Tare Weight', field: 'tareWeight',filtering:false,\r\n},\r\n{\r\n    title: 'Gross Weight', field: 'grossWeight',filtering:false,\r\n},\r\n{\r\n    title: 'Amount', field: 'amount',filtering:false,\r\n},\r\n{\r\n    title: 'Paddocks', field: 'paddocks',filtering:false,\r\n},\r\n{\r\n    title: 'Traits', field: 'traits',filtering:false,\r\n},\r\n{\r\n    title: 'Notes', field: 'notes',filtering:false,\r\n},\r\n{\r\n    title: 'Archived', field: 'archived',filtering:false,\r\n},\r\n  ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                    onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    filtering:true,\r\n                    \r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                 \r\n                  icons={{\r\n                    Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Export: () => <img src={Export}></img>,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                   \r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}