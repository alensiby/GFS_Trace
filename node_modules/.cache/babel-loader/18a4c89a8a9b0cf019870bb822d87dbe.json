{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_Trace\\\\src\\\\components\\\\pages\\\\Activities\\\\Spraylogs\\\\NewSpraylog\\\\controls\\\\Chemicals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport { LocalMovies } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chemicals() {\n  _s();\n\n  const [chemical, setchemical] = React.useState(\"\");\n  const [allValues, setAllValues] = useState({\n    rate: '',\n    batch: '',\n    unit: '',\n    actives: '',\n    res: ''\n  });\n  const chemical_options = [{\n    id: '1',\n    chem: 'Chem1',\n    actives: \"active1\",\n    resgroup: \"res1\",\n    rate: \"12\",\n    unit: \"L/ha\"\n  }, {\n    id: '2',\n    chem: 'Chem2',\n    actives: \"active2\",\n    resgroup: \"res2\",\n    rate: \"20\",\n    unit: \"Kg/ha\"\n  }];\n  const units = [{\n    id: 1,\n    title: 'ml/ha'\n  }, {\n    id: 2,\n    title: 'Kg/ha'\n  }, {\n    id: 3,\n    title: 'L/ha'\n  }, {\n    id: 4,\n    title: 'lb/ha'\n  }, {\n    id: 5,\n    title: 'oz/ha'\n  }, {\n    id: 6,\n    title: 'g/ha'\n  }, {\n    id: 7,\n    title: 'floz/ac'\n  }, {\n    id: 8,\n    title: 'qt/ac'\n  }, {\n    id: 9,\n    title: 'pt/ac'\n  }, {\n    id: 10,\n    title: 'oz/ac'\n  }, {\n    id: 11,\n    title: 'lb/ac'\n  }, {\n    id: 12,\n    title: 'g/ac'\n  }, {\n    id: 13,\n    title: 'Kg/1000L'\n  }, {\n    id: 14,\n    title: 't/ha'\n  }, {\n    id: 15,\n    title: 'L/Kg'\n  }, {\n    id: 16,\n    title: 'L/t'\n  }];\n  const [bool, setbool] = React.useState(false);\n  const [helper, sethelper] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange1 = (e, value) => {\n    setAllValues({ ...allValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChange3 = event => {\n    setRate(event.target.value);\n\n    if (event.target.value == '') {\n      setbool(true);\n      sethelper(\"Required\");\n    } else {\n      setbool(false);\n      sethelper(\"\");\n    }\n  };\n\n  const handleClickchemical = event => {\n    setOpen(true);\n  };\n\n  const handleOk = event => {\n    setchemical(chemical);\n  };\n\n  const handleChange = (e, index) => {\n    array = Object.keys(chemical_options);\n    array.forEach(element => {\n      setAllValues({ ...allValues,\n        [element]: chemical_options[index].element\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"primary\",\n        onClick: handleClickchemical,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Chemicals/Additives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'grid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Chemical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n              label: \"Chemical\",\n              name: \"chem\",\n              value: chemical,\n              displayEmpty: true,\n              children: chemical_options.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.chem,\n                onClick: event => handleChange(event, index),\n                children: item.chem\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"actives\",\n                label: \"Actives\",\n                value: allValues.actives,\n                error: bool,\n                helperText: helper,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"res\",\n                label: \"Resistance Group\",\n                value: allValues.res,\n                error: bool,\n                helperText: helper,\n                autocomplete: \"off\",\n                InputProps: {\n                  readOnly: true\n                },\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"standard\",\n                name: \"batch\",\n                type: \"number\",\n                label: \"Batch No.\",\n                value: allValues.batch,\n                onChange: handleChange1,\n                error: bool,\n                helperText: helper,\n                autocomplete: \"off\",\n                style: {\n                  width: 420\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 420\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"standard\",\n                  name: \"rate\",\n                  type: \"number\",\n                  label: \"Application rate\",\n                  value: allValues.rate,\n                  error: bool,\n                  helperText: helper,\n                  autocomplete: \"off\",\n                  style: {\n                    width: 340\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(MuiSelect, {\n                  maxLength: 200,\n                  label: \"Unit\",\n                  name: \"unit\",\n                  value: allValues.unit,\n                  onChange: handleChange1,\n                  displayEmpty: true,\n                  children: units.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.title,\n                    children: item.title\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 52\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Chemicals, \"+lf32Iqp5+X5ApJmXS2r1HFy0Gc=\");\n\n_c = Chemicals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chemicals\");","map":{"version":3,"sources":["D:/GFS_Trace/src/components/pages/Activities/Spraylogs/NewSpraylog/controls/Chemicals.js"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","TextField","DialogTitle","Box","FormControl","InputLabel","MenuItem","Grid","Select","MuiSelect","LocalMovies","Chemicals","chemical","setchemical","allValues","setAllValues","rate","batch","unit","actives","res","chemical_options","id","chem","resgroup","units","title","bool","setbool","helper","sethelper","open","setOpen","handleClose","handleChange1","e","value","target","name","handleChange3","event","setRate","handleClickchemical","handleOk","handleChange","index","array","Object","keys","forEach","element","display","m","minWidth","map","item","readOnly","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from '@material-ui/core'\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\r\nimport { LocalMovies } from \"@material-ui/icons\";\r\n\r\nexport default function Chemicals() {\r\n\r\n  const [chemical, setchemical] = React.useState(\"\");\r\n    \r\n  const [allValues, setAllValues] = useState({\r\n    rate: '',\r\n    batch: '',\r\n    unit: '',\r\n    actives: '',\r\n    res: ''\r\n });\r\n\r\n  const chemical_options =[\r\n      {id:'1', chem:'Chem1', actives: \"active1\", resgroup: \"res1\", rate: \"12\", unit: \"L/ha\"},\r\n      {id:'2', chem:'Chem2', actives: \"active2\", resgroup: \"res2\", rate: \"20\", unit: \"Kg/ha\"},\r\n   \r\n  ]\r\n  const units = [\r\n      { id: 1, title: 'ml/ha' },\r\n      { id: 2, title: 'Kg/ha' },\r\n      { id: 3, title: 'L/ha' },\r\n      { id: 4, title: 'lb/ha' },\r\n      { id: 5, title: 'oz/ha' },\r\n      { id: 6, title: 'g/ha' },\r\n      { id: 7, title: 'floz/ac' },\r\n      { id: 8, title: 'qt/ac' },\r\n      { id: 9, title: 'pt/ac' },\r\n      { id: 10, title: 'oz/ac' },\r\n      { id: 11, title: 'lb/ac' },\r\n      { id: 12, title: 'g/ac' },\r\n      { id: 13, title: 'Kg/1000L' },\r\n      { id: 14, title: 't/ha' },\r\n      { id: 15, title: 'L/Kg' },\r\n      { id: 16, title: 'L/t' }\r\n  ];\r\n     \r\n\r\n  const [bool, setbool] = React.useState(false);\r\n  const [helper, sethelper] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n    \r\n  const handleClose= () => {\r\n      setOpen(false);\r\n\r\n  };\r\n\r\n  const handleChange1 = (e, value) => {\r\n\r\n    setAllValues({...allValues, [e.target.name]: e.target.value})\r\n\r\n  };\r\n\r\n  \r\nconst handleChange3 = (event) => {\r\n  setRate(event.target.value);\r\n  if (event.target.value=='') {\r\n      setbool(true)\r\n      sethelper(\"Required\")\r\n  }\r\n  else{\r\n      setbool(false)\r\n      sethelper(\"\")\r\n  }\r\n};\r\nconst handleClickchemical = (event) => {\r\n  setOpen(true)\r\n}\r\n\r\nconst handleOk = (event) => {\r\n  setchemical(chemical);\r\n  \r\n}\r\nconst handleChange = (e, index) => {\r\n  array= Object.keys(chemical_options);\r\narray.forEach(element => {\r\n  setAllValues({...allValues, [element]: chemical_options[index].element});\r\n});\r\n  \r\n}\r\n\r\n\r\n\r\n  \r\n  return (\r\n   <div> \r\n     <span align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickchemical}><b>ADD</b></Button></span>\r\n         <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>Chemicals/Additives</DialogTitle>\r\n                <DialogContent>\r\n                  <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                    <InputLabel>Chemical</InputLabel>\r\n                      <MuiSelect\r\n                          label=\"Chemical\"\r\n                          name=\"chem\"\r\n                          value={chemical}\r\n                          displayEmpty>\r\n                          \r\n                          {\r\n                              chemical_options.map(\r\n                                (item, index) => (<MenuItem key={item.id} value={item.chem} onClick={(event) => handleChange(event, index)}>{item.chem}</MenuItem>)\r\n                              )\r\n                          }\r\n                      </MuiSelect>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                          \r\n                              variant=\"standard\"\r\n                              name=\"actives\"\r\n                              \r\n                              label=\"Actives\"\r\n                              value={allValues.actives}\r\n                              \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              \r\n                              InputProps={\r\n                                {readOnly: true,}\r\n                              }\r\n                              style = {{width: 420}}\r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"res\"\r\n                              \r\n                              label=\"Resistance Group\"\r\n                              value={allValues.res}\r\n                             \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              \r\n                              InputProps={\r\n                                {readOnly: true,}\r\n                              }\r\n                              style = {{width: 420}}\r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"batch\"\r\n                              type=\"number\"\r\n                              label=\"Batch No.\"\r\n                              value={allValues.batch}\r\n                              onChange={handleChange1}\r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              style = {{width: 420}}\r\n                            \r\n                          />\r\n                      </Grid>\r\n                  </FormControl>\r\n                  <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                  <Grid container alignItems=\"flex-end\">\r\n                      <Grid >\r\n                          <TextField\r\n                              variant=\"standard\"\r\n                              name=\"rate\"\r\n                              type=\"number\"\r\n                              label=\"Application rate\"\r\n                              value={allValues.rate}\r\n                              \r\n                              error={bool}\r\n                              helperText={helper}\r\n                              autocomplete=\"off\"\r\n                              style = {{width: 340}}\r\n                          />\r\n                      </Grid>\r\n                        <Grid >\r\n                          <InputLabel>Unit</InputLabel>\r\n                              <MuiSelect\r\n                                  maxLength={200}\r\n                                  label=\"Unit\"\r\n                                  name=\"unit\"\r\n                                  value={allValues.unit}\r\n                                  onChange={handleChange1}\r\n                                  displayEmpty>\r\n                                  \r\n                                  {\r\n                                      units.map(\r\n                                          item => (<MenuItem key={item.id} value={item.title}>{item.title}</MenuItem>)\r\n                                      )\r\n                                  }\r\n                                  \r\n                              </MuiSelect>\r\n                      </Grid>\r\n                  </Grid>\r\n                      \r\n                  </FormControl>\r\n                </Box>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                  <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n              </DialogActions>\r\n          </Dialog> \r\n   </div>        \r\n                            \r\n  )     \r\n}\r\n"]},"metadata":{},"sourceType":"module"}