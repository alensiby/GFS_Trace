{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Cultivars/Cultivarsmain.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, Grid, InputLabel, Menu, MenuItem, TextField } from '@material-ui/core';\nimport React from 'react';\nimport Form from './Useform';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport wheat from './wheat.png';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Select from '@mui/material/Select';\nimport ListItemText from '@mui/material/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 100\n    }\n  }\n};\nconst grains = [{\n  id: 1,\n  title: \"Barley(62 kg/hl)\",\n  kilo: 62\n}, {\n  id: 2,\n  title: \"Canary Seed(70 kg/hl)\",\n  kilo: 70\n}, {\n  id: 3,\n  title: \"Canola(70 kg/hl)\",\n  kilo: 70\n}, {\n  id: 4,\n  title: \"Cereal Rye(71 kg/hl)\",\n  kilo: 71\n}, {\n  id: 5,\n  title: \"Chickpea(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 6,\n  title: \"Cowpea(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 7,\n  title: \"Faba Bean(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 8,\n  title: \"Field Pea(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 9,\n  title: \"Grain Sorghum(72 kg/hl)\",\n  kilo: 72\n}, {\n  id: 10,\n  title: \"Linseed(72 kg/hl)\",\n  kilo: 72\n}, {\n  id: 11,\n  title: \"Lupin(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 12,\n  title: \"Maize(72 kg/hl)\",\n  kilo: 72\n}, {\n  id: 13,\n  title: \"Millet(62 kg/hl)\",\n  kilo: 62\n}, {\n  id: 14,\n  title: \"Mungbean(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 15,\n  title: \"Navy Bean(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 16,\n  title: \"Oats(45 kg/hl)\",\n  kilo: 45\n}, {\n  id: 17,\n  title: \"Pigeon Pea(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 18,\n  title: \"Rice(56 kg/hl)\",\n  kilo: 56\n}, {\n  id: 19,\n  title: \"Safflower(53 kg/hl)\",\n  kilo: 53\n}, {\n  id: 20,\n  title: \"Soybean(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 21,\n  title: \"Sunflower(40 kg/hl)\",\n  kilo: 40\n}, {\n  id: 22,\n  title: \"Triticale(65 kg/hl)\",\n  kilo: 65\n}, {\n  id: 23,\n  title: \"Vetch(75 kg/hl)\",\n  kilo: 75\n}, {\n  id: 24,\n  title: \"Wheat(75 kg/hl)\",\n  kilo: 75\n}];\nconst trait = ['Defective Grains', 'Foreign Material', 'Heat Damage', 'Impurities', 'Moisture', 'Oil', 'Protein', 'Purity', 'Screenings', 'Test Weight', 'Total Damage', 'Unmillable Material', 'Vitreous Kernels', 'Grade', 'Retention', 'Scale Reading', 'Falling Numbers'];\nexport default function Cultivarsmain(props) {\n  _s();\n\n  console.log(props.data);\n  const [grainweight, setgrainweight] = React.useState(props.data.weight);\n  const [s, setS] = React.useState(0);\n  const [varietyname, setvarietyname] = React.useState();\n  const [bool, setbool] = React.useState(false);\n  const [bool2, setbool2] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [items, setitems] = React.useState(props.data.Varieties);\n  const [name, setname] = React.useState(props.data.name);\n  const [dataedit, setdataedit] = React.useState(\"\");\n  const [helper, sethelper] = React.useState(\"\");\n  const [helper2, sethelper2] = React.useState(\"\");\n  const [traits, settraits] = React.useState([]);\n  const open = Boolean(anchorEl);\n  const [openvariety, setopenvariety] = React.useState(false);\n  const [openedit, setopenedit] = React.useState(false);\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleChange1 = event => {\n    setgrainweight(event.target.value);\n  };\n\n  const handleChange3 = event => {\n    setname(event.target.value);\n\n    if (event.target.value == '') {\n      setbool(true);\n      sethelper(\"Required\");\n    } else {\n      setbool(false);\n      sethelper(\"\");\n    }\n  };\n\n  const handleChange2 = event => {\n    setvarietyname(event.target.value);\n    setdataedit(event.target.value);\n\n    if (event.target.value == '') {\n      setbool2(true);\n      sethelper2(\"Required\");\n    } else {\n      setbool2(false);\n      sethelper2(\"\");\n    }\n  };\n\n  const handleChangedata = event => {\n    setdataedit(event.target.value);\n\n    if (event.target.value == '') {\n      setbool2(true);\n      sethelper2(\"Required\");\n    } else {\n      setbool2(false);\n      sethelper2(\"\");\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setopenvariety(false);\n    setopenedit(false);\n  };\n\n  const handleRemove = (e, d) => {\n    setitems(items.filter(item => item !== d));\n    setopenedit(false);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setgrainweight(grains[index].kilo);\n    setAnchorEl(null);\n  };\n\n  const handleClickVariety = event => {\n    setopenvariety(true);\n  };\n\n  const handleOk = event => {\n    if (varietyname != \"\") {\n      setitems(values => [...values, varietyname]);\n      setopenvariety(false);\n      setvarietyname(\"\");\n    }\n  };\n\n  const handleOkEdit = event => {\n    if (dataedit != \"\") {\n      let newArr = [...items];\n      newArr[s] = dataedit;\n      setitems(newArr);\n      setopenedit(false);\n      setdataedit(\"\");\n    }\n  };\n\n  const handleCheck = event => {\n    if (event.target.checked === true) {\n      settraits(values => [...values, event.target.value]);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleEdit = (e, d, index) => {\n    setdataedit(d);\n    setS(index);\n    setopenedit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"name\",\n          label: \"Name\",\n          required: \"true\",\n          value: name,\n          onChange: handleChange3,\n          error: bool,\n          helperText: helper,\n          autocomplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"standard\",\n              name: \"grainweight\",\n              label: \"Grain Weight\",\n              value: grainweight,\n              onChange: handleChange1,\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: \"kg/hl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 51\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"primary\",\n              onClick: handleClick,\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"PRESETS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              anchorEl: anchorEl,\n              open: open,\n              onClose: handleClose,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                children: \"Preset Grain Weights\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), grains.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                onClick: event => handleMenuItemClick(event, index),\n                children: item.title\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 59\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Varieties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), items.map((data, index) => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => handleEdit(e, data, index),\n              fullWidth: \"true\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontSize: 18,\n                  paddingLeft: 30\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: wheat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 86\n                }, this), data]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                color: \"primary\",\n                onClick: handleClickVariety,\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"ADD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 116\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: openvariety,\n              onClose: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                children: \"Variety\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"form\",\n                  sx: {\n                    display: 'grid'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"standard\",\n                    sx: {\n                      m: 1,\n                      minWidth: 420\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"standard\",\n                      name: \"name\",\n                      label: \"Name\",\n                      value: varietyname,\n                      onChange: handleChange2,\n                      helperText: helper2,\n                      error: bool2,\n                      required: true,\n                      autocomplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  color: \"primary\",\n                  children: \"CANCEL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleOk,\n                  color: \"primary\",\n                  children: \"SAVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: openedit,\n              onClose: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                children: \"Variety\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"form\",\n                  sx: {\n                    display: 'grid'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"standard\",\n                    sx: {\n                      m: 1,\n                      minWidth: 420\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"standard\",\n                      name: \"name\",\n                      label: \"Name\",\n                      value: dataedit,\n                      onChange: handleChangedata,\n                      helperText: helper2,\n                      error: bool2,\n                      required: true,\n                      autocomplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => handleRemove(e, dataedit),\n                  color: \"secondary\",\n                  children: \"REMOVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  color: \"primary\",\n                  children: \"CANCEL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleOkEdit,\n                  color: \"primary\",\n                  children: \"SAVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 200\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-multiple-checkbox-label\",\n            id: \"demo-multiple-checkbox\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Traits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 36\n            }, this),\n            renderValue: selected => selected.join(', '),\n            MenuProps: MenuProps,\n            children: trait.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: personName.indexOf(name) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 24\n        }, this), \"*indicates required field\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cultivarsmain, \"xfZrX3eZEMY31Obm8026gVJy4ms=\");\n\n_c = Cultivarsmain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cultivarsmain\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Cultivars/Cultivarsmain.js"],"names":["Button","Checkbox","Dialog","DialogActions","DialogContent","Grid","InputLabel","Menu","MenuItem","TextField","React","Form","InputAdornment","DialogTitle","Box","FormControl","FormControlLabel","wheat","OutlinedInput","Select","ListItemText","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","grains","id","title","kilo","trait","Cultivarsmain","props","console","log","data","grainweight","setgrainweight","useState","weight","s","setS","varietyname","setvarietyname","bool","setbool","bool2","setbool2","anchorEl","setAnchorEl","items","setitems","Varieties","name","setname","dataedit","setdataedit","helper","sethelper","helper2","sethelper2","traits","settraits","open","Boolean","openvariety","setopenvariety","openedit","setopenedit","personName","setPersonName","handleChange","event","target","value","split","handleClick","currentTarget","handleChange1","handleChange3","handleChange2","handleChangedata","handleClose","handleRemove","e","d","filter","item","handleMenuItemClick","index","handleClickVariety","handleOk","values","handleOkEdit","newArr","handleCheck","checked","handleSubmit","preventDefault","handleEdit","endAdornment","vertical","horizontal","map","fontSize","paddingLeft","display","m","minWidth","selected","join","indexOf"],"mappings":"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","sourcesContent":["import { Button, Checkbox, Dialog, DialogActions, DialogContent, Grid, InputLabel, Menu, MenuItem, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Form from './Useform'\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport wheat from './wheat.png';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 100,\r\n        },\r\n    },\r\n};\r\n\r\nconst grains = [\r\n    { id: 1, title: \"Barley(62 kg/hl)\", kilo: 62 },\r\n    { id: 2, title: \"Canary Seed(70 kg/hl)\", kilo: 70 },\r\n    { id: 3, title: \"Canola(70 kg/hl)\", kilo: 70 },\r\n    { id: 4, title: \"Cereal Rye(71 kg/hl)\", kilo: 71 },\r\n    { id: 5, title: \"Chickpea(75 kg/hl)\", kilo: 75 },\r\n    { id: 6, title: \"Cowpea(75 kg/hl)\", kilo: 75 },\r\n    { id: 7, title: \"Faba Bean(75 kg/hl)\", kilo: 75 },\r\n    { id: 8, title: \"Field Pea(75 kg/hl)\", kilo: 75 },\r\n    { id: 9, title: \"Grain Sorghum(72 kg/hl)\", kilo: 72 },\r\n    { id: 10, title: \"Linseed(72 kg/hl)\", kilo: 72 },\r\n    { id: 11, title: \"Lupin(75 kg/hl)\", kilo: 75 },\r\n    { id: 12, title: \"Maize(72 kg/hl)\", kilo: 72 },\r\n    { id: 13, title: \"Millet(62 kg/hl)\", kilo: 62 },\r\n    { id: 14, title: \"Mungbean(75 kg/hl)\", kilo: 75 },\r\n    { id: 15, title: \"Navy Bean(75 kg/hl)\", kilo: 75 },\r\n    { id: 16, title: \"Oats(45 kg/hl)\", kilo: 45 },\r\n    { id: 17, title: \"Pigeon Pea(75 kg/hl)\", kilo: 75 },\r\n    { id: 18, title: \"Rice(56 kg/hl)\", kilo: 56 },\r\n    { id: 19, title: \"Safflower(53 kg/hl)\", kilo: 53 },\r\n    { id: 20, title: \"Soybean(75 kg/hl)\", kilo: 75 },\r\n    { id: 21, title: \"Sunflower(40 kg/hl)\", kilo: 40 },\r\n    { id: 22, title: \"Triticale(65 kg/hl)\", kilo: 65 },\r\n    { id: 23, title: \"Vetch(75 kg/hl)\", kilo: 75 },\r\n    { id: 24, title: \"Wheat(75 kg/hl)\", kilo: 75 }\r\n];\r\n\r\nconst trait = [\r\n    'Defective Grains',\r\n    'Foreign Material',\r\n    'Heat Damage',\r\n    'Impurities',\r\n    'Moisture',\r\n    'Oil',\r\n    'Protein',\r\n    'Purity',\r\n    'Screenings',\r\n    'Test Weight',\r\n    'Total Damage',\r\n    'Unmillable Material',\r\n    'Vitreous Kernels', \r\n    'Grade',\r\n    'Retention',\r\n    'Scale Reading',\r\n    'Falling Numbers'\r\n];\r\n\r\nexport default function Cultivarsmain(props) {\r\n    console.log(props.data)\r\n    const [grainweight, setgrainweight] = React.useState(props.data.weight);\r\n    const [s, setS] = React.useState(0);\r\n    const [varietyname, setvarietyname] = React.useState();\r\n    const [bool, setbool] = React.useState(false);\r\n    const [bool2, setbool2] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [items, setitems] = React.useState(props.data.Varieties);\r\n    const [name, setname] = React.useState(props.data.name);\r\n    const [dataedit, setdataedit] = React.useState(\"\");\r\n    const [helper, sethelper] = React.useState(\"\");\r\n    const [helper2, sethelper2] = React.useState(\"\");\r\n    const [traits, settraits] = React.useState([]);\r\n    const open = Boolean(anchorEl);\r\n    const [openvariety, setopenvariety] = React.useState(false);\r\n    const [openedit, setopenedit] = React.useState(false);\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setPersonName(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleChange1 = (event) => {\r\n        setgrainweight(event.target.value);\r\n    };\r\n\r\n    const handleChange3 = (event) => {\r\n        setname(event.target.value);\r\n        if (event.target.value == '') {\r\n            setbool(true)\r\n            sethelper(\"Required\")\r\n        }\r\n        else {\r\n            setbool(false)\r\n            sethelper(\"\")\r\n        }\r\n    };\r\n\r\n    const handleChange2 = (event) => {\r\n        setvarietyname(event.target.value);\r\n        setdataedit(event.target.value)\r\n        if (event.target.value == '') {\r\n            setbool2(true)\r\n            sethelper2(\"Required\")\r\n        }\r\n        else {\r\n            setbool2(false)\r\n            sethelper2(\"\")\r\n        }\r\n    };\r\n    const handleChangedata = (event) => {\r\n        setdataedit(event.target.value)\r\n        if (event.target.value == '') {\r\n            setbool2(true)\r\n            sethelper2(\"Required\")\r\n        }\r\n        else {\r\n            setbool2(false)\r\n            sethelper2(\"\")\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setopenvariety(false);\r\n        setopenedit(false);\r\n    };\r\n    const handleRemove = (e, d) => {\r\n        setitems(items.filter(item => item !== d))\r\n        setopenedit(false);\r\n    }\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setgrainweight(grains[index].kilo);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickVariety = (event) => {\r\n        setopenvariety(true)\r\n    }\r\n\r\n    const handleOk = (event) => {\r\n        if (varietyname != \"\") {\r\n            setitems(values => ([...values, varietyname]));\r\n            setopenvariety(false);\r\n            setvarietyname(\"\")\r\n        }\r\n    }\r\n    const handleOkEdit = (event) => {\r\n        if (dataedit != \"\") {\r\n            let newArr = [...items];\r\n            newArr[s] = dataedit;\r\n            setitems(newArr)\r\n            setopenedit(false);\r\n            setdataedit(\"\")\r\n        }\r\n    }\r\n\r\n    const handleCheck = (event) => {\r\n        if (event.target.checked === true) {\r\n            settraits(values => ([...values, event.target.value]));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleEdit = (e, d, index) => {\r\n        setdataedit(d)\r\n        setS(index)\r\n        setopenedit(true)\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        required=\"true\"\r\n                        value={name}\r\n                        onChange={handleChange3}\r\n                        error={bool}\r\n                        helperText={helper}\r\n                        autocomplete=\"off\"\r\n                    />\r\n                    <Grid container alignItems=\"flex-end\">\r\n                        <Grid item xs={12} md={5}>\r\n                            <TextField\r\n                                variant=\"standard\"\r\n                                name=\"grainweight\"\r\n                                label=\"Grain Weight\"\r\n                                value={grainweight}\r\n                                onChange={handleChange1}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">kg/hl</InputAdornment>\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={5}>\r\n                            <Button variant=\"text\" color=\"primary\" onClick={handleClick}><b>PRESETS</b></Button>\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                            >\r\n                                <DialogTitle>Preset Grain Weights</DialogTitle>\r\n                                {\r\n                                    grains.map(\r\n                                        (item, index) => (<MenuItem key={item.id} value={item.id} onClick={(event) => handleMenuItemClick(event, index)}>{item.title}</MenuItem>)\r\n                                    )\r\n                                }\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12}>\r\n                            <InputLabel>Varieties</InputLabel>\r\n                            <br />\r\n                            {items.map((data, index) => (\r\n                                <Button onClick={(e) => handleEdit(e, data, index)} fullWidth=\"true\" >\r\n                                    <label style={{ fontSize: 18, paddingLeft: 30 }}><img src={wheat}></img>{data}</label>\r\n                                </Button>\r\n                            ))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div align=\"right\"><Button variant=\"text\" color=\"primary\" onClick={handleClickVariety}><b>ADD</b></Button></div>\r\n                            <Dialog open={openvariety} onClose={handleClose}>\r\n                                <DialogTitle>Variety</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                            <TextField\r\n                                                variant=\"standard\"\r\n                                                name=\"name\"\r\n                                                label=\"Name\"\r\n                                                value={varietyname}\r\n                                                onChange={handleChange2}\r\n                                                helperText={helper2}\r\n                                                error={bool2}\r\n                                                required\r\n                                                autocomplete=\"off\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                                    <Button onClick={handleOk} color=\"primary\">SAVE</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                            <Dialog open={openedit} onClose={handleClose}>\r\n                                <DialogTitle>Variety</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Box component=\"form\" sx={{ display: 'grid' }}>\r\n                                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\r\n                                            <TextField\r\n                                                variant=\"standard\"\r\n                                                name=\"name\"\r\n                                                label=\"Name\"\r\n                                                value={dataedit}\r\n                                                onChange={handleChangedata}\r\n                                                helperText={helper2}\r\n                                                error={bool2}\r\n                                                required\r\n                                                autocomplete=\"off\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={(e) => (handleRemove(e, dataedit))} color=\"secondary\">REMOVE</Button>\r\n                                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                                    <Button onClick={handleOkEdit} color=\"primary\">SAVE</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <InputLabel>Traits</InputLabel>\r\n\r\n                    <FormControl sx={{ m: 1, width: 200 }}>\r\n                        {/* <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel> */}\r\n                        <Select\r\n                            labelId=\"demo-multiple-checkbox-label\"\r\n                            id=\"demo-multiple-checkbox\"\r\n                            multiple\r\n                            value={personName}\r\n                            onChange={handleChange}\r\n                            input={<OutlinedInput label=\"Traits\" />}\r\n                            renderValue={(selected) => selected.join(', ')}\r\n                            MenuProps={MenuProps}\r\n                        >\r\n                            {trait.map((name) => (\r\n                                <MenuItem key={name} value={name}>\r\n                                    <Checkbox checked={personName.indexOf(name) > -1} />\r\n                                    <ListItemText primary={name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <label><br />*indicates required field</label>\r\n            </Grid>\r\n        </Form >\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}