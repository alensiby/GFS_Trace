{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Cultivars/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\nimport { DialogTitle } from '@mui/material';\nimport Cultivarsmain from './Cultivarsmain';\nimport Icon from '@mui/material/Icon';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [rowdata, setrowdata] = React.useState({\n    name: \"\",\n    weight: \"\",\n    Varieties: [],\n    Traits: []\n  });\n  const [newedit, setnewedit] = React.useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    setOpen(false);\n  };\n\n  const handleEdit = (event, rowData) => {\n    setrowdata(rowData);\n    setOpen(true);\n  };\n\n  const handleAdd = event => {\n    setrowdata({\n      name: \"\",\n      weight: \"\",\n      Varieties: [],\n      Traits: \"\"\n    });\n    setOpen(true);\n  };\n\n  const [data, setData] = React.useState([{\n    name: 'Wheat',\n    weight: '23kg/hl',\n    Varieties: ['abc'],\n    Traits: 'Defective Grains, Foreign Material'\n  }, {\n    name: 'Barley',\n    weight: '50kg/hl',\n    Varieties: ['dfg'],\n    Traits: 'Defective Grains,Oil, Purity'\n  }, {\n    name: 'Canary Seed',\n    weight: '400kg/hl',\n    Varieties: ['hij'],\n    Traits: 'Heat Damage, Impurities'\n  }, {\n    name: 'Faba Bean',\n    weight: '100kg/hl',\n    Varieties: ['abc'],\n    Traits: 'Defective Grains, Heat Damage'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Grain Weight',\n    field: 'weight'\n  }, {\n    title: 'Varieties',\n    field: 'Varieties',\n    sorting: false\n  }, {\n    title: 'Traits',\n    field: 'Traits',\n    sorting: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Cultivars\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      actions: [{\n        icon: () => /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontSize: 40\n          },\n          color: \"info\",\n          children: \"add_circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this),\n        isFreeAction: true,\n        onClick: event => handleAdd(event)\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            fontSize: 22\n          },\n          color: \"action\",\n          children: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }, this),\n        tooltip: 'Edit User',\n        onClick: (event, rowData) => handleEdit(event, rowData)\n      } //   {\n      //     icon:() => <Icon sx={{ fontSize: 22 }} color=\"action\"><DeleteIcon/></Icon>,\n      //     tooltip: 'Delete User',\n      //     onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\n      //   }\n      ],\n      options: {\n        actionsColumnIndex: -1\n      },\n      icons: {\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 39\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"sm\",\n      scroll: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          fontSize: 24,\n          fontWeight: 'large'\n        },\n        children: \"New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Cultivarsmain, {\n          data: rowdata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"xrmwOsR9ad1nC3qAV4aUODew1gg=\");\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/FarmAssets/Cultivars/Table.js"],"names":["React","MaterialTable","Button","Dialog","DialogActions","DialogContent","DialogTitle","Cultivarsmain","Icon","CreateIcon","DeleteIcon","Table","open","setOpen","useState","rowdata","setrowdata","name","weight","Varieties","Traits","newedit","setnewedit","handleClickOpen","handleClose","event","reason","handleEdit","rowData","handleAdd","data","setData","columns","title","field","sorting","onRowDelete","oldData","Promise","resolve","reject","setTimeout","dataDelete","index","tableData","id","splice","icon","fontSize","isFreeAction","onClick","tooltip","actionsColumnIndex","Delete","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Button, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\nimport { DialogTitle } from '@mui/material';\r\nimport Cultivarsmain from './Cultivarsmain';\r\nimport Icon from '@mui/material/Icon';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function Table() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [rowdata,setrowdata]=React.useState({name:\"\",weight:\"\",Varieties:[],Traits:[]});\r\n    const [newedit, setnewedit] = React.useState(true);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const handleEdit =(event,rowData)=>{\r\n        setrowdata(rowData)\r\n        setOpen(true);\r\n    };\r\n    const handleAdd =(event)=>{\r\n        setrowdata({name:\"\",weight:\"\",Varieties:[],Traits:\"\"})\r\n        setOpen(true);\r\n    };\r\n\r\n    const [data, setData] = React.useState([\r\n        { name: 'Wheat', weight: '23kg/hl', Varieties: ['abc'], Traits: 'Defective Grains, Foreign Material' },\r\n        { name: 'Barley', weight: '50kg/hl', Varieties: ['dfg'], Traits: 'Defective Grains,Oil, Purity' },\r\n        { name: 'Canary Seed', weight: '400kg/hl', Varieties:['hij'], Traits: 'Heat Damage, Impurities' },\r\n        { name: 'Faba Bean', weight: '100kg/hl', Varieties: ['abc'], Traits: 'Defective Grains, Heat Damage' }\r\n    ])\r\n    const columns = [{\r\n        title: 'Name', field: 'name'\r\n    },\r\n    {\r\n        title: 'Grain Weight', field: 'weight'\r\n    }, {\r\n        title: 'Varieties', field: 'Varieties', sorting: false\r\n    }, {\r\n        title: 'Traits', field: 'Traits', sorting: false\r\n    }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Cultivars\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                    onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                const dataDelete = [...data];\r\n                                const index = oldData.tableData.id;\r\n                                dataDelete.splice(index, 1);\r\n                                setData([...dataDelete]);\r\n                                resolve()\r\n                            }, 1000)\r\n                        }),\r\n                }}\r\n                actions={[\r\n                    {\r\n                        icon: () => <Icon sx={{ fontSize: 40 }} color=\"info\">add_circle</Icon>,\r\n                        isFreeAction: true,\r\n                        onClick: (event) => handleAdd(event)\r\n                    },\r\n                    {\r\n                        icon: () => <Icon sx={{ fontSize: 22 }} color=\"action\"><CreateIcon /></Icon>,\r\n                        tooltip: 'Edit User',\r\n                        onClick: (event, rowData) => handleEdit(event,rowData)\r\n                    },\r\n                    //   {\r\n                    //     icon:() => <Icon sx={{ fontSize: 22 }} color=\"action\"><DeleteIcon/></Icon>,\r\n                    //     tooltip: 'Delete User',\r\n                    //     onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\r\n                    //   }\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1\r\n                }}\r\n                icons={{Delete: () => <DeleteIcon color=\"action\" />}}\r\n            />\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" scroll=\"paper\">\r\n                <DialogTitle sx={{ fontSize: 24, fontWeight: 'large' }}>New Item</DialogTitle>\r\n                <DialogContent>\r\n                    <Cultivarsmain data={rowdata} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">CANCEL</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}