{"ast":null,"code":"var _jsxFileName = \"D:\\\\GFS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\FarmListPopup\\\\farmpopup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Checkbox, Icon, Grid, Modal } from 'semantic-ui-react';\nimport GearIcon from 'mdi-react/GearIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Farmpopup() {\n  _s();\n\n  const [firstOpen, setFirstOpen] = React.useState(false);\n  const [secondOpen, setSecondOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GearIcon, {\n      onClick: () => setFirstOpen(true),\n      style: {\n        \"cursor\": \"pointer\",\n        \"color\": \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      style: {\n        \"height\": \"35%\",\n        \"width\": \"25%\",\n        \"position\": \"absolute\",\n        \"background-color\": \"rgb(0 0 0 / 62%)\"\n      },\n      onClose: () => setFirstOpen(false),\n      onOpen: () => setFirstOpen(true),\n      open: firstOpen,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Farm Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              onClick: () => setSecondOpen(true),\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 11\n              }, this), \"Add Farm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              onClick: () => setSecondOpen(true),\n              primary: true,\n              children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"right chevron\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              onClick: () => setSecondOpen(true),\n              primary: true,\n              children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"right chevron\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          onClick: () => setFirstOpen(false),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), \" Close\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setSecondOpen(false),\n        open: secondOpen,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Modal #2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"That's everything!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"check\",\n            content: \"All Done\",\n            onClick: () => setSecondOpen(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Farmpopup, \"jLQNSAOzagU3CqMp9IQ2qrBd2o0=\");\n\n_c = Farmpopup;\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\n      return { ...state,\n        closeOnDimmerClick: action.value\n      };\n\n    case 'CONFIG_CLOSE_ON_ESCAPE':\n      return { ...state,\n        closeOnEscape: action.value\n      };\n\n    case 'OPEN_MODAL':\n      return { ...state,\n        open: true\n      };\n\n    case 'CLOSE_MODAL':\n      return { ...state,\n        open: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction ModalExampleCloseConfig() {\n  _s2();\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    closeOnEscape: true,\n    closeOnDimmerClick: true,\n    open: false,\n    dimmer: undefined\n  });\n  const {\n    open,\n    closeOnEscape,\n    closeOnDimmerClick\n  } = state;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 1,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: closeOnEscape,\n        label: {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"closeOnEscape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 30\n          }, this)\n        },\n        onChange: (e, {\n          checked\n        }) => dispatch({\n          type: 'CONFIG_CLOSE_ON_ESCAPE',\n          value: checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: closeOnDimmerClick,\n        label: {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"closeOnDimmerClick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 30\n          }, this)\n        },\n        onChange: (e, {\n          checked\n        }) => dispatch({\n          type: 'CONFIG_CLOSE_ON_DIMMER_CLICK',\n          value: checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        closeOnEscape: closeOnEscape,\n        closeOnDimmerClick: closeOnDimmerClick,\n        open: open,\n        onOpen: () => dispatch({\n          type: 'OPEN_MODAL'\n        }),\n        onClose: () => dispatch({\n          type: 'CLOSE_MODAL'\n        }),\n        trigger: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Show Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Delete Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => dispatch({\n              type: 'CLOSE_MODAL'\n            }),\n            negative: true,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => dispatch({\n              type: 'CLOSE_MODAL'\n            }),\n            positive: true,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ModalExampleCloseConfig, \"idtmkH8pOGNOsBgqkBnklatZ7s4=\");\n\n_c2 = ModalExampleCloseConfig;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Farmpopup\");\n$RefreshReg$(_c2, \"ModalExampleCloseConfig\");","map":{"version":3,"sources":["D:/GFS_TRACE/src/components/pages/FarmAssets/Farms/FarmListPopup/farmpopup.js"],"names":["React","Button","Checkbox","Icon","Grid","Modal","GearIcon","Farmpopup","firstOpen","setFirstOpen","useState","secondOpen","setSecondOpen","exampleReducer","state","action","type","closeOnDimmerClick","value","closeOnEscape","open","Error","ModalExampleCloseConfig","dispatch","useReducer","dimmer","undefined","children","e","checked"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,KAAvC,QAAoD,mBAApD;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAApC;AAEA,sBACE;AAAA,4BAEE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAArC;AAA6C,MAAA,KAAK,EAAE;AAAC,kBAAS,SAAV;AAAqB,iBAAS;AAA9B;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE,kBAAU,KAAZ;AAAmB,iBAAS,KAA5B;AAAkC,oBAAY,UAA9C;AAA0D,4BAAoB;AAA9E,OAAd;AACE,MAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAD7B;AAEE,MAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,IAAD,CAF5B;AAGE,MAAA,IAAI,EAAED,SAHR;AAAA,8BAKE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD,CAAO,OAAP;AAAA,gCACC;AAAA,iCACC,QAAC,KAAD,CAAO,WAAP;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAsB,cAAA,OAAO,EAAE,MAAMI,aAAa,CAAC,IAAD,CAAlD;AAAA,sCACA,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,sBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAUE;AAAA,iCACA,QAAC,KAAD,CAAO,WAAP;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAsB,cAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,IAAD,CAAlD;AAA0D,cAAA,OAAO,MAAjE;AAAA,kDACU,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,sBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAkBE;AAAA,iCACA,QAAC,KAAD,CAAO,WAAP;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAsB,cAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,IAAD,CAAlD;AAA0D,cAAA,OAAO,MAAjE;AAAA,kDACU,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,sBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAkCE,QAAC,KAAD,CAAO,OAAP;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,KAAD,CAA/C;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAlCF,eAyCE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,MAAMG,aAAa,CAAC,KAAD,CAD9B;AAEE,QAAA,IAAI,EAAED,UAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAAA,gCAKE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD,CAAO,OAAP;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE,QAAC,KAAD,CAAO,OAAP;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,OAAO,EAAC,UAFV;AAGE,YAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD;AAH9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAiED;;GArEuBL,S;;KAAAA,S;;AAyExB,SAASM,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,8BAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,kBAAkB,EAAEF,MAAM,CAACG;AAAvC,OAAP;;AACF,SAAK,wBAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,aAAa,EAAEJ,MAAM,CAACG;AAAlC,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYM,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYM,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AAVJ;AAYD;;AAED,SAASC,uBAAT,GAAmC;AAAA;;AACjC,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBvB,KAAK,CAACwB,UAAN,CAAiBX,cAAjB,EAAiC;AACzDM,IAAAA,aAAa,EAAE,IAD0C;AAEzDF,IAAAA,kBAAkB,EAAE,IAFqC;AAGzDG,IAAAA,IAAI,EAAE,KAHmD;AAIzDK,IAAAA,MAAM,EAAEC;AAJiD,GAAjC,CAA1B;AAMA,QAAM;AAAEN,IAAAA,IAAF;AAAQD,IAAAA,aAAR;AAAuBF,IAAAA;AAAvB,MAA8CH,KAApD;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,OAAO,EAAEK,aADX;AAEE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ,SAFT;AAGE,QAAA,QAAQ,EAAE,CAACC,CAAD,EAAI;AAAEC,UAAAA;AAAF,SAAJ,KACRN,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,wBAAR;AAAkCE,UAAAA,KAAK,EAAEW;AAAzC,SAAD;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,QAAD;AACE,QAAA,OAAO,EAAEZ,kBADX;AAEE,QAAA,KAAK,EAAE;AAAEU,UAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ,SAFT;AAGE,QAAA,QAAQ,EAAE,CAACC,CAAD,EAAI;AAAEC,UAAAA;AAAF,SAAJ,KACRN,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,8BAAR;AAAwCE,UAAAA,KAAK,EAAEW;AAA/C,SAAD;AAJZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,aAAa,EAAEV,aADjB;AAEE,QAAA,kBAAkB,EAAEF,kBAFtB;AAGE,QAAA,IAAI,EAAEG,IAHR;AAIE,QAAA,MAAM,EAAE,MAAMG,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAD,CAJxB;AAKE,QAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAD,CALzB;AAME,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANX;AAAA,gCAQE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,KAAD,CAAO,OAAP;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,KAAD,CAAO,OAAP;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,cAAAA,IAAI,EAAE;AAAR,aAAD,CAA/B;AAA0D,YAAA,QAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,cAAAA,IAAI,EAAE;AAAR,aAAD,CAA/B;AAA0D,YAAA,QAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;IAtDQM,uB;;MAAAA,uB","sourcesContent":["import React from 'react'\r\nimport { Button, Checkbox, Icon, Grid, Modal } from 'semantic-ui-react'\r\nimport GearIcon from 'mdi-react/GearIcon';\r\n\r\nexport default function Farmpopup() {\r\n  const [firstOpen, setFirstOpen] = React.useState(false)\r\n  const [secondOpen, setSecondOpen] = React.useState(false)\r\n\r\n  return (\r\n    <>\r\n     \r\n      <GearIcon onClick={() => setFirstOpen(true)} style={{\"cursor\":\"pointer\", \"color\": \"black\"}}/>\r\n      <Modal style={{ \"height\": \"35%\", \"width\": \"25%\",\"position\": \"absolute\", \"background-color\": \"rgb(0 0 0 / 62%)\" }}\r\n        onClose={() => setFirstOpen(false)}\r\n        onOpen={() => setFirstOpen(true)}\r\n        open={firstOpen}\r\n      >\r\n        <Modal.Header>Farm Options</Modal.Header>\r\n        <Modal.Content>\r\n         <div>\r\n          <Modal.Description>\r\n          <Button color='white' onClick={() => setSecondOpen(true)}>\r\n          <Icon name='plus' />\r\n            Add Farm \r\n          </Button>\r\n          \r\n          </Modal.Description>\r\n          </div> \r\n          <div>\r\n          <Modal.Description>\r\n          <Button color='white' onClick={() => setSecondOpen(true)} primary>\r\n            Proceed <Icon name='right chevron' />\r\n          </Button>\r\n          \r\n          </Modal.Description>\r\n          </div> \r\n          <div>\r\n          <Modal.Description>\r\n          <Button color='white' onClick={() => setSecondOpen(true)} primary>\r\n            Proceed <Icon name='right chevron' />\r\n          </Button>\r\n          \r\n          </Modal.Description>\r\n          </div> \r\n        </Modal.Content>\r\n        \r\n        <Modal.Actions>\r\n        <Button color='red' onClick={() => setFirstOpen(false)}>\r\n          <Icon name='remove'  /> Close\r\n        </Button>\r\n          \r\n        </Modal.Actions>\r\n\r\n        <Modal\r\n          onClose={() => setSecondOpen(false)}\r\n          open={secondOpen}\r\n          size='small'\r\n        >\r\n          <Modal.Header>Modal #2</Modal.Header>\r\n          <Modal.Content>\r\n            <p>That's everything!</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              icon='check'\r\n              content='All Done'\r\n              onClick={() => setSecondOpen(false)}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction exampleReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\r\n      return { ...state, closeOnDimmerClick: action.value }\r\n    case 'CONFIG_CLOSE_ON_ESCAPE':\r\n      return { ...state, closeOnEscape: action.value }\r\n    case 'OPEN_MODAL':\r\n      return { ...state, open: true }\r\n    case 'CLOSE_MODAL':\r\n      return { ...state, open: false }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nfunction ModalExampleCloseConfig() {\r\n  const [state, dispatch] = React.useReducer(exampleReducer, {\r\n    closeOnEscape: true,\r\n    closeOnDimmerClick: true,\r\n    open: false,\r\n    dimmer: undefined,\r\n  })\r\n  const { open, closeOnEscape, closeOnDimmerClick } = state\r\n\r\n  return (\r\n    <Grid columns={1}>\r\n      <Grid.Column>\r\n        <Checkbox\r\n          checked={closeOnEscape}\r\n          label={{ children: <code>closeOnEscape</code> }}\r\n          onChange={(e, { checked }) =>\r\n            dispatch({ type: 'CONFIG_CLOSE_ON_ESCAPE', value: checked })\r\n          }\r\n        />\r\n        <br />\r\n        <Checkbox\r\n          checked={closeOnDimmerClick}\r\n          label={{ children: <code>closeOnDimmerClick</code> }}\r\n          onChange={(e, { checked }) =>\r\n            dispatch({ type: 'CONFIG_CLOSE_ON_DIMMER_CLICK', value: checked })\r\n          }\r\n        />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column>\r\n        <Modal\r\n          closeOnEscape={closeOnEscape}\r\n          closeOnDimmerClick={closeOnDimmerClick}\r\n          open={open}\r\n          onOpen={() => dispatch({ type: 'OPEN_MODAL' })}\r\n          onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\r\n          trigger={<Button>Show Modal</Button>}\r\n        >\r\n          <Modal.Header>Delete Your Account</Modal.Header>\r\n          <Modal.Content>\r\n            <p>Are you sure you want to delete your account</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} negative>\r\n              No\r\n            </Button>\r\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} positive>\r\n              Yes\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}