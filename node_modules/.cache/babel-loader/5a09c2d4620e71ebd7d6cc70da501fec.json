{"ast":null,"code":"var _jsxFileName = \"/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Ingoing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ingoing_data, type_data } from './Tabledatas';\nimport { Checkbox } from \"semantic-ui-react\";\nimport Export from './export.png';\nimport { DisabledByDefault } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingoing() {\n  _s();\n\n  const [selected, toggleselected] = React.useState(false);\n  const [type, setType] = useState({});\n  const [data, setData] = React.useState(ingoing_data);\n  const columns = [{\n    title: 'Fuel Tank',\n    field: 'fuelTank',\n    filtering: false\n  }, {\n    title: 'Date/Time',\n    field: 'dateTime',\n    filtering: false\n  }, {\n    title: 'Operator',\n    field: 'operator',\n    filtering: false\n  }, {\n    title: 'Amount',\n    field: 'amount',\n    filtering: false\n  }, {\n    title: 'Type',\n    field: 'type',\n    lookup: type\n  }, {\n    title: 'Supplier',\n    field: 'supplier',\n    filtering: false\n  }, {\n    title: 'Notes',\n    field: 'notes',\n    filtering: false\n  }];\n  const columns_archived = [{\n    title: 'Fuel Tank',\n    field: 'fuelTank',\n    filtering: false\n  }, {\n    title: 'Date/Time',\n    field: 'dateTime',\n    filtering: false\n  }, {\n    title: 'Operator',\n    field: 'operator',\n    filtering: false\n  }, {\n    title: 'Amount',\n    field: 'amount',\n    filtering: false\n  }, {\n    title: 'Type',\n    field: 'type',\n    lookup: type\n  }, {\n    title: 'Supplier',\n    field: 'supplier',\n    filtering: false\n  }, {\n    title: 'Notes',\n    field: 'notes',\n    filtering: false\n  }, {\n    title: 'Archived',\n    field: 'archived',\n    filtering: false\n  }];\n  useEffect(() => {\n    const type = {};\n    type_data.map(row => type[row.id] = row.title);\n    setType(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"INGOING\",\n      data: data,\n      columns: selected ? columns_archived : columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          setData([...data, newRow]);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false,\n        exportButton: true,\n        filtering: true\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-switch\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              toggle: true,\n              onClick: () => toggleselected(!selected),\n              checked: selected,\n              label: \"Show Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }, this)\n      },\n      icons: {\n        Export: () => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 35\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 35\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ingoing, \"0hTHtDqm9hQShaseDJFXhpeXP54=\");\n\n_c = Ingoing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingoing\");","map":{"version":3,"sources":["/Users/alen/Documents/GFS_Trace/src/components/pages/Inventory/FuelInventory/Tables/Ingoing.js"],"names":["React","useEffect","useState","MaterialTable","MTableToolbar","CreateIcon","DeleteIcon","ingoing_data","type_data","Checkbox","Export","DisabledByDefault","Ingoing","selected","toggleselected","type","setType","data","setData","columns","title","field","filtering","lookup","columns_archived","map","row","id","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","newData","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","actionsColumnIndex","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","exportButton","Toolbar","props","Edit","Delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ingoing_data,type_data } from './Tabledatas';\r\nimport { Checkbox } from \"semantic-ui-react\";\r\nimport Export from './export.png';\r\nimport { DisabledByDefault } from '@mui/icons-material';\r\nexport default function Ingoing() {\r\n    const [selected, toggleselected] = React.useState(false);\r\n    const [type, setType] = useState({});\r\n    const [data, setData] = React.useState(ingoing_data)\r\n    const columns = [{\r\n        title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n    },\r\n    \r\n    {\r\n        title: 'Date/Time', field: 'dateTime',filtering:false,\r\n    }, {\r\n        title: 'Operator', field: 'operator',filtering:false,\r\n    },\r\n    {\r\n        title: 'Amount', field: 'amount',filtering:false,\r\n    },\r\n    {\r\n        title: 'Type', field: 'type',lookup:type,\r\n    },\r\n    {\r\n        title: 'Supplier', field: 'supplier',filtering:false,\r\n    },\r\n    \r\n    {\r\n        title: 'Notes', field: 'notes',filtering:false,\r\n    },\r\n    \r\n    \r\n  ]\r\n  const columns_archived = [{\r\n    title: 'Fuel Tank', field: 'fuelTank',filtering:false,\r\n},\r\n\r\n{\r\n    title: 'Date/Time', field: 'dateTime',filtering:false,\r\n}, {\r\n    title: 'Operator', field: 'operator',filtering:false,\r\n},\r\n{\r\n    title: 'Amount', field: 'amount',filtering:false,\r\n},\r\n{\r\n    title: 'Type', field: 'type',lookup:type,\r\n},\r\n{\r\n    title: 'Supplier', field: 'supplier',filtering:false,\r\n},\r\n\r\n{\r\n    title: 'Notes', field: 'notes',filtering:false,\r\n},\r\n{\r\n    title: 'Archived', field: 'archived',filtering:false,\r\n},\r\n  ];\r\n  useEffect(() => {\r\n    const type = {};\r\n    type_data.map((row) => (type[row.id] = row.title));\r\n    setType(type);\r\n  }, []);\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"INGOING\"\r\n                data={data}\r\n                columns={selected ? columns_archived : columns}\r\n                editable={{\r\n                  onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataUpdate = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setData([...dataUpdate]);\r\n          \r\n                          resolve();\r\n                        }, 1000)\r\n                      }),\r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          const dataDelete = [...data];\r\n                          const index = oldData.tableData.id;\r\n                          dataDelete.splice(index, 1);\r\n                          setData([...dataDelete]);\r\n          \r\n                          resolve()\r\n                        }, 1000)\r\n                      }),\r\n                  }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                    exportButton: true,\r\n                    filtering:true\r\n                }}\r\n                components={{\r\n                    Toolbar: (props) => (\r\n                      <div>\r\n                        <MTableToolbar {...props} />\r\n                        <div className=\"toggle-switch\">\r\n                          <Checkbox\r\n                            toggle\r\n                            onClick={() => toggleselected(!selected)}\r\n                            checked={selected}\r\n                            label=\"Show Archived\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                icons={{\r\n                    Export: () => <img src={Export}></img>,\r\n                    Edit: () => <CreateIcon color=\"action\" />,\r\n                    Delete: () => <DeleteIcon color=\"action\" />\r\n                  }}\r\n            />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}